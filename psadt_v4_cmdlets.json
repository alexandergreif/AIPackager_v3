{
  "Out-ADTPowerShellEncodedCommand": {
    "name": "Out-ADTPowerShellEncodedCommand",
    "synopsis": "Encodes a PowerShell command into a Base64 string.",
    "description": "This function takes a PowerShell command as input and encodes it into a Base64 string.\nThis is useful for passing commands to PowerShell through mechanisms that require encoded input.",
    "parameters": {
      "Command": {
        "name": "Command",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The PowerShell command to be encoded.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "Command"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Out-ADTPowerShellEncodedCommand -Command 'Get-Process'",
        "description": "Encodes the \"Get-Process\" command into a Base64 string."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Out-ADTPowerShellEncodedCommand",
      "https://psappdeploytoolkit.com/docs/reference/functions/Out-ADTPowerShellEncodedCommand"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.String\n\n### This function returns the encoded Base64 string representation of the input command.",
    "common_parameters": true
  },
  "Test-ADTMSUpdates": {
    "name": "Test-ADTMSUpdates",
    "synopsis": "Test whether a Microsoft Windows update is installed.",
    "description": "This function checks if a specified Microsoft Windows update, identified by its KB number, is installed on the local machine.\nIt first attempts to find the update using the Get-HotFix cmdlet and, if unsuccessful, uses a COM object to search the update history.",
    "parameters": {
      "KbNumber": {
        "name": "KbNumber",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "KBNumber of the update.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "KbNumber"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Test-ADTMSUpdates -KBNumber 'KB2549864'",
        "description": "Checks if the Microsoft Update 'KB2549864' is installed and returns true or false."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Test-ADTMSUpdates",
      "https://psappdeploytoolkit.com/docs/reference/functions/Test-ADTMSUpdates"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.Boolean\n\n### Returns $true if the update is installed, otherwise returns $false.",
    "common_parameters": true
  },
  "Set-ADTServiceStartMode": {
    "name": "Set-ADTServiceStartMode",
    "synopsis": "Set the service startup mode.",
    "description": "Set the service startup mode.\nThis function allows you to configure the startup mode of a specified service.\nThe startup modes available are: Automatic, Automatic (Delayed Start), Manual, Disabled, Boot, and System.",
    "parameters": {
      "Service": {
        "name": "Service",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specify the name of the service.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "StartMode": {
        "name": "StartMode",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specify startup mode for the service.\nOptions: Automatic, Automatic (Delayed Start), Manual, Disabled, Boot, System.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "Service",
          "StartMode"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Set-ADTServiceStartMode -Service 'wuauserv' -StartMode 'Automatic (Delayed Start)'",
        "description": "Sets the 'wuauserv' service to start automatically with a delayed start."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Set-ADTServiceStartMode",
      "https://psappdeploytoolkit.com/docs/reference/functions/Set-ADTServiceStartMode"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return any output.",
    "common_parameters": true
  },
  "Get-ADTOperatingSystemInfo": {
    "name": "Get-ADTOperatingSystemInfo",
    "synopsis": "Gets information about the current computer's operating system.",
    "description": "Gets information about the current computer's operating system, such as name, version, edition, and other information.",
    "parameters": {},
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Get-ADTOperatingSystemInfo",
        "description": "Gets an PSADT.OperatingSystem.OSVersionInfo object containing the current computer's operating system information."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTOperatingSystemInfo",
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTOperatingSystemInfo"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### PSADT.OperatingSystem.OSVersionInfo\n\n### Returns an PSADT.OperatingSystem.OSVersionInfo object containing the current computer's operating system information.",
    "common_parameters": true
  },
  "Start-ADTProcess": {
    "name": "Start-ADTProcess",
    "synopsis": "Execute a process with optional arguments, working directory, window style.",
    "description": "Executes a process, e.g.\na file included in the Files directory of the App Deploy Toolkit, or a file on the local machine.\nProvides various options for handling the return codes (see Parameters).",
    "parameters": {
      "FilePath": {
        "name": "FilePath",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Path to the file to be executed.\nIf the file is located directly in the \"Files\" directory of the App Deploy Toolkit, only the file name needs to be specified.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ArgumentList": {
        "name": "ArgumentList",
        "type": "String[]",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Arguments to be passed to the executable.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "SecureArgumentList": {
        "name": "SecureArgumentList",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Hides all parameters passed to the executable from the Toolkit log file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "WindowStyle": {
        "name": "WindowStyle",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "Normal",
        "valid_values": [
          "Normal",
          "Hidden",
          "Minimized",
          "Maximized"
        ],
        "description": "Style of the window of the process executed.\nOptions: Normal, Hidden, Maximized, Minimized.\nDefault: Normal.\nOnly works for native Windows GUI applications.\nIf the WindowStyle is set to Hidden, UseShellExecute should be set to $true.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "CreateNoWindow": {
        "name": "CreateNoWindow",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specifies whether the process should be started with a new window to contain it.\nOnly works for Console mode applications.\nUseShellExecute should be set to $false.\nDefault is false.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "WorkingDirectory": {
        "name": "WorkingDirectory",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The working directory used for executing the process.\nDefaults to the directory of the file being executed.\nThe use of UseShellExecute affects this parameter.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "NoWait": {
        "name": "NoWait",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Immediately continue after executing the process.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "PassThru": {
        "name": "PassThru",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "If NoWait is not specified, returns an object with ExitCode, STDOut and STDErr output from the process.\nIf NoWait is specified, returns an object with Id, Handle and ProcessName.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "WaitForMsiExec": {
        "name": "WaitForMsiExec",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Sometimes an EXE bootstrapper will launch an MSI install.\nIn such cases, this variable will ensure that this function waits for the msiexec engine to become available before starting the install.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "MsiExecWaitTime": {
        "name": "MsiExecWaitTime",
        "type": "UInt32",
        "mandatory": false,
        "position": null,
        "default_value": "0",
        "valid_values": [],
        "description": "Specify the length of time in seconds to wait for the msiexec engine to become available.\nDefault: 600 seconds (10 minutes).",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "SuccessExitCodes": {
        "name": "SuccessExitCodes",
        "type": "Int32[]",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "List of exit codes to be considered successful.\nDefaults to values set during ADTSession initialization, otherwise: 0",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "RebootExitCodes": {
        "name": "RebootExitCodes",
        "type": "Int32[]",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "List of exit codes to indicate a reboot is required.\nDefaults to values set during ADTSession initialization, otherwise: 1641, 3010",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "IgnoreExitCodes": {
        "name": "IgnoreExitCodes",
        "type": "String[]",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "List the exit codes to ignore or * to ignore all exit codes.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "PriorityClass": {
        "name": "PriorityClass",
        "type": "ProcessPriorityClass",
        "mandatory": false,
        "position": null,
        "default_value": "Normal",
        "valid_values": [
          "Normal",
          "Idle",
          "High",
          "RealTime",
          "BelowNormal",
          "AboveNormal"
        ],
        "description": "Specifies priority class for the process.\nOptions: Idle, Normal, High, AboveNormal, BelowNormal, RealTime.\nDefault: Normal",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "UseShellExecute": {
        "name": "UseShellExecute",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specifies whether to use the operating system shell to start the process.\n$true if the shell should be used when starting the process; $false if the process should be created directly from the executable file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "NoWait",
          "UseShellExecute",
          "CreateNoWindow",
          "WindowStyle",
          "RebootExitCodes",
          "WorkingDirectory",
          "SuccessExitCodes",
          "PriorityClass",
          "PassThru",
          "ArgumentList",
          "SecureArgumentList",
          "FilePath",
          "WaitForMsiExec",
          "IgnoreExitCodes",
          "MsiExecWaitTime"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Start-ADTProcess -FilePath 'setup.exe' -ArgumentList '/S' -IgnoreExitCodes 1,2",
        "description": "Launch InstallShield \"setup.exe\" from the \".\\Files\" sub-directory."
      },
      {
        "title": "Example 2",
        "code": "Start-ADTProcess -FilePath \"$($adtSession.DirFiles)\\Bin\\setup.exe\" -ArgumentList '/S' -WindowStyle 'Hidden'",
        "description": "Launch InstallShield \"setup.exe\" from the \".\\Files\\Bin\" sub-directory."
      },
      {
        "title": "Example 3",
        "code": "Start-ADTProcess -FilePath 'uninstall_flash_player_64bit.exe' -ArgumentList '/uninstall' -WindowStyle 'Hidden'",
        "description": "If the file is in the \"Files\" directory of the AppDeployToolkit, only the file name needs to be specified."
      },
      {
        "title": "Example 4",
        "code": "Start-ADTProcess -FilePath 'setup.exe' -ArgumentList \"-s -f2`\"$((Get-ADTConfig).Toolkit.LogPath)\\$($adtSession.InstallName).log`\"\"",
        "description": "Launch InstallShield \"setup.exe\" from the \".\\Files\" sub-directory and force log files to the logging folder."
      },
      {
        "title": "Example 5",
        "code": "Start-ADTProcess -FilePath 'setup.exe' -ArgumentList \"/s /v`\"ALLUSERS=1 /qn /L* `\"$((Get-ADTConfig).Toolkit.LogPath)\\$($adtSession.InstallName).log`\"`\"\"",
        "description": "Launch InstallShield \"setup.exe\" with embedded MSI and force log files to the logging folder."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Start-ADTProcess",
      "https://psappdeploytoolkit.com/docs/reference/functions/Start-ADTProcess"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### PSADT.Types.ProcessResult\n\n### Returns an object with the results of the installation if -PassThru is specified.\n### - ExitCode\n### - StdOut\n### - StdErr",
    "common_parameters": true
  },
  "Install-ADTMSUpdates": {
    "name": "Install-ADTMSUpdates",
    "synopsis": "Install all Microsoft Updates in a given directory.",
    "description": "Install all Microsoft Updates of type \".exe\", \".msu\", or \".msp\" in a given directory (recursively search directory).\nThe function will check if the update is already installed and skip it if it is.\nIt handles older redistributables and different types of updates appropriately.",
    "parameters": {
      "Directory": {
        "name": "Directory",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Directory containing the updates.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "Directory"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Install-ADTMSUpdates -Directory \"$($adtSession.DirFiles)\\MSUpdates\"",
        "description": "Installs all Microsoft Updates found in the specified directory."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Install-ADTMSUpdates",
      "https://psappdeploytoolkit.com/docs/reference/functions/Install-ADTMSUpdates"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return any objects.",
    "common_parameters": true
  },
  "Send-ADTKeys": {
    "name": "Send-ADTKeys",
    "synopsis": "Send a sequence of keys to one or more application windows.",
    "description": "Send a sequence of keys to one or more application windows.\nIf the window title searched for returns more than one window, then all of them will receive the sent keys.\n\nFunction does not work in SYSTEM context unless launched with \"psexec.exe -s -i\" to run it as an interactive process under the SYSTEM account.",
    "parameters": {
      "WindowTitle": {
        "name": "WindowTitle",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The title of the application window to search for using regex matching.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "GetAllWindowTitles": {
        "name": "GetAllWindowTitles",
        "type": "SwitchParameter",
        "mandatory": true,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Get titles for all open windows on the system.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "WindowHandle": {
        "name": "WindowHandle",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Send keys to a specific window where the Window Handle is already known.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Keys": {
        "name": "Keys",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The sequence of keys to send.\nInfo on Key input at: http://msdn.microsoft.com/en-us/library/System.Windows.Forms.SendKeys(v=vs.100).aspx",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "WaitSeconds": {
        "name": "WaitSeconds",
        "type": "Int32",
        "mandatory": false,
        "position": null,
        "default_value": "0",
        "valid_values": [],
        "description": "This parameter is obsolete and will be removed in PSAppDeployToolkit 4.2.0.\nPlease use `-WaitDuration` instead.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "WaitDuration": {
        "name": "WaitDuration",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "An optional amount of time to wait after the sending of the keys.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "WindowTitle": {
        "name": "WindowTitle",
        "required_parameters": [],
        "optional_parameters": [
          "Keys",
          "WaitSeconds",
          "WaitDuration",
          "WindowTitle"
        ],
        "description": ""
      },
      "GetAllWindowTitles": {
        "name": "GetAllWindowTitles",
        "required_parameters": [],
        "optional_parameters": [
          "Keys",
          "GetAllWindowTitles",
          "WaitSeconds",
          "WaitDuration"
        ],
        "description": ""
      },
      "WindowHandle": {
        "name": "WindowHandle",
        "required_parameters": [],
        "optional_parameters": [
          "Keys",
          "WindowHandle",
          "WaitSeconds",
          "WaitDuration"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Send-ADTKeys -WindowTitle 'foobar - Notepad' -Keys 'Hello world'",
        "description": "Send the sequence of keys \"Hello world\" to the application titled \"foobar - Notepad\"."
      },
      {
        "title": "Example 2",
        "code": "Send-ADTKeys -WindowTitle 'foobar - Notepad' -Keys 'Hello world' WaitDuration (New-TimeSpan -Seconds 5)",
        "description": "Send the sequence of keys \"Hello world\" to the application titled \"foobar - Notepad\" and wait 5 seconds."
      },
      {
        "title": "Example 3",
        "code": "Send-ADTKeys -WindowHandle ([IntPtr]17368294) -Keys 'Hello World'",
        "description": "Send the sequence of keys \"Hello World\" to the application with a Window Handle of '17368294'."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "http://msdn.microsoft.com/en-us/library/System.Windows.Forms.SendKeys(v=vs.100",
      "http://msdn.microsoft.com/en-us/library/System.Windows.Forms.SendKeys(v=vs.100",
      "https://psappdeploytoolkit.com/docs/reference/functions/Send-ADTKeys",
      "https://psappdeploytoolkit.com/docs/reference/functions/Send-ADTKeys"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return any objects.",
    "common_parameters": true
  },
  "Unregister-ADTDll": {
    "name": "Unregister-ADTDll",
    "synopsis": "Unregister a DLL file.",
    "description": "Unregister a DLL file using regsvr32.exe.\nThis function takes the path to the DLL file and attempts to unregister it using the regsvr32.exe utility.",
    "parameters": {
      "FilePath": {
        "name": "FilePath",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Path to the DLL file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "FilePath"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Unregister-ADTDll -FilePath \"C:\\Test\\DcTLSFileToDMSComp.dll\"",
        "description": "Unregisters the specified DLL file."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Unregister-ADTDll",
      "https://psappdeploytoolkit.com/docs/reference/functions/Unregister-ADTDll"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return objects.",
    "common_parameters": true
  },
  "Remove-ADTSessionFinishingCallback": {
    "name": "Remove-ADTSessionFinishingCallback",
    "synopsis": "Removes a callback function from the ADT session finishing event.",
    "description": "This function removes a specified callback function from the ADT session finishing event.\nThe callback function must be provided as a parameter.\nIf the operation fails, it throws a terminating error.",
    "parameters": {
      "Callback": {
        "name": "Callback",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The callback function to remove from the ADT session finishing event.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "Callback"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Remove-ADTSessionFinishingCallback -Callback (Get-Command -Name 'MyCallbackFunction')",
        "description": "Removes the specified callback function from the ADT session finishing event."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Remove-ADTSessionFinishingCallback",
      "https://psappdeploytoolkit.com/docs/reference/functions/Remove-ADTSessionFinishingCallback"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not generate any output.",
    "common_parameters": true
  },
  "New-ADTMsiTransform": {
    "name": "New-ADTMsiTransform",
    "synopsis": "Create a transform file for an MSI database.",
    "description": "Create a transform file for an MSI database and create/modify properties in the Properties table.\nThis function allows you to specify an existing transform to apply before making changes and to define the path for the new transform file.\nIf the new transform file already exists, it will be deleted before creating a new one.",
    "parameters": {
      "MsiPath": {
        "name": "MsiPath",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specify the path to an MSI file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ApplyTransformPath": {
        "name": "ApplyTransformPath",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specify the path to a transform which should be applied to the MSI database before any new properties are created or modified.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "NewTransformPath": {
        "name": "NewTransformPath",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "If `-ApplyTransformPath` was specified: `<ApplyTransformPath>.new.mst`; If only `-MsiPath` was specified: `<MsiPath>.mst`",
        "valid_values": [],
        "description": "Specify the path where the new transform file with the desired properties will be created.\nIf a transform file of the same name already exists, it will be deleted before a new one is created.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "TransformProperties": {
        "name": "TransformProperties",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Hashtable which contains calls to `Set-ADTMsiProperty` for configuring the desired properties which should be included in the new transform file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "TransformProperties",
          "ApplyTransformPath",
          "NewTransformPath",
          "MsiPath"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "New-ADTMsiTransform -MsiPath 'C:\\Temp\\PSADTInstall.msi' -TransformProperties @{\n    ALLUSERS = 1\n    AgreeToLicense = 'Yes'\n    REBOOT = 'ReallySuppress'\n    RebootYesNo = 'No'\n    ROOTDRIVE = 'C:'\n}",
        "description": "Creates a new transform file for the specified MSI with the given properties."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/New-ADTMsiTransform",
      "https://psappdeploytoolkit.com/docs/reference/functions/New-ADTMsiTransform"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not generate any output.",
    "common_parameters": true
  },
  "Get-ADTObjectProperty": {
    "name": "Get-ADTObjectProperty",
    "synopsis": "Get a property from any object.",
    "description": "Get a property from any object.",
    "parameters": {
      "InputObject": {
        "name": "InputObject",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies an object which has properties that can be retrieved.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "PropertyName": {
        "name": "PropertyName",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies the name of a property to retrieve.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ArgumentList": {
        "name": "ArgumentList",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Argument to pass to the property being retrieved.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "InputObject",
          "PropertyName",
          "ArgumentList"
        ],
        "description": ""
      }
    },
    "examples": [],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTObjectProperty",
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTObjectProperty"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.Object\n\n### Returns the value of the property being retrieved.",
    "common_parameters": true
  },
  "Get-ADTRegistryKey": {
    "name": "Get-ADTRegistryKey",
    "synopsis": "Retrieves value names and value data for a specified registry key or optionally, a specific value.",
    "description": "Retrieves value names and value data for a specified registry key or optionally, a specific value.\nIf the registry key does not exist or contain any values, the function will return $null by default.\n\nTo test for existence of a registry key path, use built-in Test-Path cmdlet.",
    "parameters": {
      "Key": {
        "name": "Key",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Path of the registry key.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Name": {
        "name": "Name",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Value name to retrieve (optional).",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Wow6432Node": {
        "name": "Wow6432Node",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specify this switch to read the 32-bit registry (Wow6432Node) on 64-bit systems.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "SID": {
        "name": "SID",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The security identifier (SID) for a user.\nSpecifying this parameter will convert a HKEY_CURRENT_USER registry key to the HKEY_USERS\\$SID format.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ReturnEmptyKeyIfExists": {
        "name": "ReturnEmptyKeyIfExists",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Return the registry key if it exists but it has no property/value pairs underneath it.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "DoNotExpandEnvironmentNames": {
        "name": "DoNotExpandEnvironmentNames",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Return unexpanded REG_EXPAND_SZ values.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "SID",
          "Key",
          "ReturnEmptyKeyIfExists",
          "Name",
          "Wow6432Node",
          "DoNotExpandEnvironmentNames"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Get-ADTRegistryKey -Key 'HKLM:SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\{1AD147D0-BE0E-3D6C-AC11-64F6DC4163F1}'",
        "description": "This example retrieves all value names and data for the specified registry key."
      },
      {
        "title": "Example 2",
        "code": "Get-ADTRegistryKey -Key 'HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\iexplore.exe'",
        "description": "This example retrieves all value names and data for the specified registry key."
      },
      {
        "title": "Example 3",
        "code": "Get-ADTRegistryKey -Key 'HKLM:Software\\Wow6432Node\\Microsoft\\Microsoft SQL Server Compact Edition\\v3.5' -Name 'Version'",
        "description": "This example retrieves the 'Version' value data for the specified registry key."
      },
      {
        "title": "Example 4",
        "code": "Get-ADTRegistryKey -Key 'HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment' -Name 'Path' -DoNotExpandEnvironmentNames",
        "description": "This example retrieves the 'Path' value data without expanding environment variables."
      },
      {
        "title": "Example 5",
        "code": "Get-ADTRegistryKey -Key 'HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Example' -Name '(Default)'",
        "description": "This example retrieves the default value data for the specified registry key."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTRegistryKey",
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTRegistryKey"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.String\n\n### Returns the value of the registry key or value.",
    "common_parameters": true
  },
  "Get-ADTPEFileArchitecture": {
    "name": "Get-ADTPEFileArchitecture",
    "synopsis": "Determine if a PE file is a 32-bit or a 64-bit file.",
    "description": "Determine if a PE file is a 32-bit or a 64-bit file by examining the file's image file header.\n\nPE file extensions: .exe, .dll, .ocx, .drv, .sys, .scr, .efi, .cpl, .fon",
    "parameters": {
      "FilePath": {
        "name": "FilePath",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Path to the PE file to examine.",
        "aliases": [],
        "pipeline_input": true,
        "wildcard_characters": false
      },
      "PassThru": {
        "name": "PassThru",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Get the file object, attach a property indicating the file binary type, and write to pipeline.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "PassThru",
          "FilePath"
        ],
        "description": ""
      }
    },
    "examples": [],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTPEFileArchitecture",
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTPEFileArchitecture"
    ],
    "inputs": "### System.IO.FileInfo\n\n### Accepts a FileInfo object from the pipeline.",
    "outputs": "### System.String\n\n### Returns a string indicating the file binary type.",
    "common_parameters": true
  },
  "ConvertTo-ADTNTAccountOrSID": {
    "name": "ConvertTo-ADTNTAccountOrSID",
    "synopsis": "Convert between NT Account names and their security identifiers (SIDs).",
    "description": "Specify either the NT Account name or the SID and get the other.\nCan also convert well known sid types.",
    "parameters": {
      "AccountName": {
        "name": "AccountName",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The Windows NT Account name specified in &lt;domain&gt;&lt;username&gt; format.",
        "aliases": [],
        "pipeline_input": true,
        "wildcard_characters": false
      },
      "SID": {
        "name": "SID",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The Windows NT Account SID.",
        "aliases": [],
        "pipeline_input": true,
        "wildcard_characters": false
      },
      "WellKnownSIDName": {
        "name": "WellKnownSIDName",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [
          "NullSid",
          "WorldSid",
          "LocalSid",
          "CreatorOwnerSid",
          "CreatorGroupSid",
          "CreatorOwnerServerSid",
          "CreatorGroupServerSid",
          "NTAuthoritySid",
          "DialupSid",
          "NetworkSid",
          "BatchSid",
          "InteractiveSid",
          "ServiceSid",
          "AnonymousSid",
          "ProxySid",
          "EnterpriseControllersSid",
          "SelfSid",
          "AuthenticatedUserSid",
          "RestrictedCodeSid",
          "TerminalServerSid",
          "RemoteLogonIdSid",
          "LogonIdsSid",
          "LocalSystemSid",
          "LocalServiceSid",
          "NetworkServiceSid",
          "BuiltinDomainSid",
          "BuiltinAdministratorsSid",
          "BuiltinUsersSid",
          "BuiltinGuestsSid",
          "BuiltinPowerUsersSid",
          "BuiltinAccountOperatorsSid",
          "BuiltinSystemOperatorsSid",
          "BuiltinPrintOperatorsSid",
          "BuiltinBackupOperatorsSid",
          "BuiltinReplicatorSid",
          "BuiltinPreWindows2000CompatibleAccessSid",
          "BuiltinRemoteDesktopUsersSid",
          "BuiltinNetworkConfigurationOperatorsSid",
          "AccountAdministratorSid",
          "AccountGuestSid",
          "AccountKrbtgtSid",
          "AccountDomainAdminsSid",
          "AccountDomainUsersSid",
          "AccountDomainGuestsSid",
          "AccountComputersSid",
          "AccountControllersSid",
          "AccountCertAdminsSid",
          "AccountSchemaAdminsSid",
          "AccountEnterpriseAdminsSid",
          "AccountPolicyAdminsSid",
          "AccountRasAndIasServersSid",
          "NtlmAuthenticationSid",
          "DigestAuthenticationSid",
          "SChannelAuthenticationSid",
          "ThisOrganizationSid",
          "OtherOrganizationSid",
          "BuiltinIncomingForestTrustBuildersSid",
          "BuiltinPerformanceMonitoringUsersSid",
          "BuiltinPerformanceLoggingUsersSid",
          "BuiltinAuthorizationAccessSid",
          "WinBuiltinTerminalServerLicenseServersSid",
          "MaxDefined"
        ],
        "description": "Specify the Well Known SID name translate to the actual SID (e.g., LocalServiceSid).",
        "aliases": [],
        "pipeline_input": true,
        "wildcard_characters": false
      },
      "WellKnownToNTAccount": {
        "name": "WellKnownToNTAccount",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Convert the Well Known SID to an NTAccount name.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "LocalHost": {
        "name": "LocalHost",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Avoids a costly domain check when only converting local accounts.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "NTAccountToSID": {
        "name": "NTAccountToSID",
        "required_parameters": [],
        "optional_parameters": [
          "AccountName"
        ],
        "description": ""
      },
      "SIDToNTAccount": {
        "name": "SIDToNTAccount",
        "required_parameters": [],
        "optional_parameters": [
          "SID"
        ],
        "description": ""
      },
      "WellKnownName": {
        "name": "WellKnownName",
        "required_parameters": [],
        "optional_parameters": [
          "LocalHost",
          "WellKnownSIDName",
          "WellKnownToNTAccount"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "ConvertTo-ADTNTAccountOrSID -AccountName 'CONTOSO\\User1'",
        "description": "Converts a Windows NT Account name to the corresponding SID."
      },
      {
        "title": "Example 2",
        "code": "ConvertTo-ADTNTAccountOrSID -SID 'S-1-5-21-1220945662-2111687655-725345543-14012660'",
        "description": "Converts a Windows NT Account SID to the corresponding NT Account Name."
      },
      {
        "title": "Example 3",
        "code": "ConvertTo-ADTNTAccountOrSID -WellKnownSIDName 'NetworkServiceSid'",
        "description": "Converts a Well Known SID name to a SID."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nThe conversion can return an empty result if the user account does not exist anymore or if translation fails Refer to: http://blogs.technet.com/b/askds/archive/2011/07/28/troubleshooting-sid-translation-failures-from-the-obvious-to-the-not-so-obvious.aspx\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/ConvertTo-ADTNTAccountOrSID",
      "https://psappdeploytoolkit.com/docs/reference/functions/ConvertTo-ADTNTAccountOrSID",
      "http://msdn.microsoft.com/en-us/library/system.security.principal.wellknownsidtype(v=vs.110",
      "http://msdn.microsoft.com/en-us/library/system.security.principal.wellknownsidtype(v=vs.110"
    ],
    "inputs": "### System.String\n\n### Accepts a string containing the NT Account name or SID.",
    "outputs": "### System.String\n\n### Returns the NT Account name or SID.",
    "common_parameters": true
  },
  "Remove-ADTRegistryKey": {
    "name": "Remove-ADTRegistryKey",
    "synopsis": "Deletes the specified registry key or value.",
    "description": "This function deletes the specified registry key or value.\nIt can handle both registry keys and values, and it supports recursive deletion of registry keys.\nIf the SID parameter is specified, it converts HKEY_CURRENT_USER registry keys to the HKEY_USERS\\$SID format, allowing for the manipulation of HKCU registry settings for all users on the system.",
    "parameters": {
      "Key": {
        "name": "Key",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Path of the registry key to delete.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Name": {
        "name": "Name",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Name of the registry value to delete.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Recurse": {
        "name": "Recurse",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Delete registry key recursively.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "SID": {
        "name": "SID",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The security identifier (SID) for a user.\nSpecifying this parameter will convert a HKEY_CURRENT_USER registry key to the HKEY_USERS\\$SID format.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "SID",
          "Key",
          "Recurse",
          "Name"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Remove-ADTRegistryKey -Key 'HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce'",
        "description": "Deletes the specified registry key."
      },
      {
        "title": "Example 2",
        "code": "Remove-ADTRegistryKey -Key 'HKLM:SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run' -Name 'RunAppInstall'",
        "description": "Deletes the specified registry value."
      },
      {
        "title": "Example 3",
        "code": "Remove-ADTRegistryKey -Key 'HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Example' -Name '(Default)'",
        "description": "Deletes the default registry value in the specified key."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Remove-ADTRegistryKey",
      "https://psappdeploytoolkit.com/docs/reference/functions/Remove-ADTRegistryKey"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not generate any output.",
    "common_parameters": true
  },
  "Set-ADTRegistryKey": {
    "name": "Set-ADTRegistryKey",
    "synopsis": "Creates or sets a registry key name, value, and value data.",
    "description": "Creates a registry key name, value, and value data; it sets the same if it already exists.\nThis function can also handle registry keys for specific user SIDs and 32-bit registry on 64-bit systems.",
    "parameters": {
      "Key": {
        "name": "Key",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The registry key path.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Name": {
        "name": "Name",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The value name.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Value": {
        "name": "Value",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The value data.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Type": {
        "name": "Type",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "String",
        "valid_values": [
          "Unknown",
          "String",
          "ExpandString",
          "Binary",
          "DWord",
          "MultiString",
          "QWord",
          "None"
        ],
        "description": "The type of registry value to create or set.\nOptions: 'Binary','DWord','ExpandString','MultiString','None','QWord','String','Unknown'.\nDefault: String.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Wow6432Node": {
        "name": "Wow6432Node",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specify this switch to write to the 32-bit registry (Wow6432Node) on 64-bit systems.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "SID": {
        "name": "SID",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The security identifier (SID) for a user.\nSpecifying this parameter will convert a HKEY_CURRENT_USER registry key to the HKEY_USERS\\$SID format.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "SID",
          "Value",
          "Key",
          "Type",
          "Name",
          "Wow6432Node"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Set-ADTRegistryKey -Key $blockedAppPath -Name 'Debugger' -Value $blockedAppDebuggerValue",
        "description": "Creates or sets the 'Debugger' value in the specified registry key."
      },
      {
        "title": "Example 2",
        "code": "Set-ADTRegistryKey -Key 'HKEY_LOCAL_MACHINE\\SOFTWARE' -Name 'Application' -Type 'DWord' -Value '1'",
        "description": "Creates or sets a DWord value in the specified registry key."
      },
      {
        "title": "Example 3",
        "code": "Set-ADTRegistryKey -Key 'HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce' -Name 'Debugger' -Value $blockedAppDebuggerValue -Type String",
        "description": "Creates or sets a String value in the specified registry key."
      },
      {
        "title": "Example 4",
        "code": "Set-ADTRegistryKey -Key 'HKCU\\Software\\Microsoft\\Example' -Name 'Data' -Value (0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x02,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x02,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x01,0x01,0x01,0x02,0x02,0x02) -Type 'Binary'",
        "description": "Creates or sets a Binary value in the specified registry key."
      },
      {
        "title": "Example 5",
        "code": "Set-ADTRegistryKey -Key 'HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Example' -Name '(Default)' -Value \"Text\"",
        "description": "Creates or sets the default value in the specified registry key."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Set-ADTRegistryKey",
      "https://psappdeploytoolkit.com/docs/reference/functions/Set-ADTRegistryKey"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return any output.",
    "common_parameters": true
  },
  "Get-ADTServiceStartMode": {
    "name": "Get-ADTServiceStartMode",
    "synopsis": "Retrieves the startup mode of a specified service.",
    "description": "Retrieves the startup mode of a specified service.\nThis function checks the service's start type and adjusts the result if the service is set to 'Automatic (Delayed Start)'.",
    "parameters": {
      "Service": {
        "name": "Service",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specify the service object to retrieve the startup mode for.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "Service"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Get-ADTServiceStartMode -Service (Get-Service -Name 'wuauserv')",
        "description": "Retrieves the startup mode of the 'wuauserv' service."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTServiceStartMode",
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTServiceStartMode"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.String\n\n### Returns the startup mode of the specified service.",
    "common_parameters": true
  },
  "Show-ADTHelpConsole": {
    "name": "Show-ADTHelpConsole",
    "synopsis": "Displays a help console for the ADT module.",
    "description": "Displays a help console for the ADT module in a new PowerShell window.\nThe console provides a graphical interface to browse and view detailed help information for all commands exported by the ADT module.\nThe help console includes a list box to select commands and a text box to display the full help content for the selected command.",
    "parameters": {},
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Show-ADTHelpConsole",
        "description": "Opens a new PowerShell window displaying the help console for the ADT module."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Show-ADTHelpConsole",
      "https://psappdeploytoolkit.com/docs/reference/functions/Show-ADTHelpConsole"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return any output.",
    "common_parameters": true
  },
  "Disable-ADTTerminalServerInstallMode": {
    "name": "Disable-ADTTerminalServerInstallMode",
    "synopsis": "Changes to user install mode for Remote Desktop Session Host/Citrix servers.",
    "description": "The Disable-ADTTerminalServerInstallMode function changes the server mode to user install mode for Remote Desktop Session Host/Citrix servers.\nThis is useful for ensuring that applications are installed in a way that is compatible with multi-user environments.",
    "parameters": {},
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Disable-ADTTerminalServerInstallMode",
        "description": "This example changes the server mode to user install mode for Remote Desktop Session Host/Citrix servers."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Disable-ADTTerminalServerInstallMode",
      "https://psappdeploytoolkit.com/docs/reference/functions/Disable-ADTTerminalServerInstallMode"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return any objects.",
    "common_parameters": true
  },
  "Start-ADTMspProcess": {
    "name": "Start-ADTMspProcess",
    "synopsis": "Executes an MSP file using the same logic as Start-ADTMsiProcess.",
    "description": "Reads SummaryInfo targeted product codes in MSP file and determines if the MSP file applies to any installed products.\nIf a valid installed product is found, triggers the Start-ADTMsiProcess function to patch the installation.\n\nUses default config MSI parameters.\nYou can use -AdditionalArgumentList to add additional parameters.",
    "parameters": {
      "FilePath": {
        "name": "FilePath",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Path to the MSP file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "AdditionalArgumentList": {
        "name": "AdditionalArgumentList",
        "type": "String[]",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Additional parameters.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "AdditionalArgumentList",
          "FilePath"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Start-ADTMspProcess -FilePath 'Adobe_Reader_11.0.3_EN.msp'",
        "description": "Executes the specified MSP file for Adobe Reader 11.0.3."
      },
      {
        "title": "Example 2",
        "code": "Start-ADTMspProcess -FilePath 'AcroRdr2017Upd1701130143_MUI.msp' -AdditionalArgumentList 'ALLUSERS=1'",
        "description": "Executes the specified MSP file for Acrobat Reader 2017 with additional parameters."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Start-ADTMspProcess",
      "https://psappdeploytoolkit.com/docs/reference/functions/Start-ADTMspProcess"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not generate any output.",
    "common_parameters": true
  },
  "Get-ADTBoundParametersAndDefaultValues": {
    "name": "Get-ADTBoundParametersAndDefaultValues",
    "synopsis": "Returns a hashtable with the output of $PSBoundParameters and default-valued parameters for the given InvocationInfo.",
    "description": "This function processes the provided InvocationInfo and combines the results of $PSBoundParameters and default-valued parameters via the InvocationInfo's ScriptBlock AST (Abstract Syntax Tree).",
    "parameters": {
      "Invocation": {
        "name": "Invocation",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The script or function's InvocationInfo ($MyInvocation) to process.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ParameterSetName": {
        "name": "ParameterSetName",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The ParameterSetName to use as a filter against the Invocation's parameters.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "HelpMessage": {
        "name": "HelpMessage",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The HelpMessage field to use as a filter against the Invocation's parameters.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Exclude": {
        "name": "Exclude",
        "type": "String[]",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "One or more parameter names to exclude from the results.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "CommonParameters": {
        "name": "CommonParameters",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specifies whether PowerShell advanced function common parameters should be included.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "CommonParameters",
          "ParameterSetName",
          "Invocation",
          "HelpMessage",
          "Exclude"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Get-ADTBoundParametersAndDefaultValues -Invocation $MyInvocation",
        "description": "Returns a $PSBoundParameters-compatible dictionary with the bound parameters and any default values."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTBoundParametersAndDefaultValues",
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTBoundParametersAndDefaultValues"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.Collections.Generic.Dictionary[System.String, System.Object]\n\n### Get-ADTBoundParametersAndDefaultValues returns a dictionary of the same base type as $PSBoundParameters for API consistency.",
    "common_parameters": true
  },
  "Remove-ADTContentFromCache": {
    "name": "Remove-ADTContentFromCache",
    "synopsis": "Removes the toolkit content from the cache folder on the local machine and reverts the $adtSession.DirFiles and $adtSession.SupportFiles directory.",
    "description": "This function removes the toolkit content from the cache folder on the local machine.\nIt also reverts the $adtSession.DirFiles and $adtSession.SupportFiles directory to their original state.\nIf the specified cache folder does not exist, it logs a message and exits.",
    "parameters": {
      "Path": {
        "name": "Path",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "\"$((Get-ADTConfig).Toolkit.CachePath)\\\\$((Get-ADTSession).InstallName)\"",
        "valid_values": [],
        "description": "The path to the software cache folder.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "Path"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Remove-ADTContentFromCache -Path \"$envWinDir\\Temp\\PSAppDeployToolkit\"",
        "description": "Removes the toolkit content from the specified cache folder."
      }
    ],
    "notes": "An active ADT session is required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Remove-ADTContentFromCache",
      "https://psappdeploytoolkit.com/docs/reference/functions/Remove-ADTContentFromCache"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return objects.",
    "common_parameters": true
  },
  "Get-ADTWindowTitle": {
    "name": "Get-ADTWindowTitle",
    "synopsis": "Search for an open window title and return details about the window.",
    "description": "Search for a window title.\nIf window title searched for returns more than one result, then details for each window will be displayed.\n\nReturns the following properties for each window:\n\n- WindowTitle\n- WindowHandle\n- ParentProcess\n- ParentProcessMainWindowHandle\n- ParentProcessId\n\nFunction does not work in SYSTEM context unless launched with \"psexec.exe -s -i\" to run it as an interactive process under the SYSTEM account.",
    "parameters": {
      "WindowTitle": {
        "name": "WindowTitle",
        "type": "String[]",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "One or more titles of the application window to search for using regex matching.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "WindowHandle": {
        "name": "WindowHandle",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "One or more window handles of the application window to search for.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ParentProcess": {
        "name": "ParentProcess",
        "type": "String[]",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "One or more process names of the application window to search for.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "GetAllWindowTitles": {
        "name": "GetAllWindowTitles",
        "type": "SwitchParameter",
        "mandatory": true,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Get titles for all open windows on the system.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "SearchWinTitle": {
        "name": "SearchWinTitle",
        "required_parameters": [],
        "optional_parameters": [
          "WindowTitle"
        ],
        "description": ""
      },
      "SearchWinHandle": {
        "name": "SearchWinHandle",
        "required_parameters": [],
        "optional_parameters": [
          "WindowHandle"
        ],
        "description": ""
      },
      "SearchParentProcess": {
        "name": "SearchParentProcess",
        "required_parameters": [],
        "optional_parameters": [
          "ParentProcess"
        ],
        "description": ""
      },
      "GetAllWinTitles": {
        "name": "GetAllWinTitles",
        "required_parameters": [],
        "optional_parameters": [
          "GetAllWindowTitles"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Get-ADTWindowTitle -WindowTitle 'Microsoft Word'",
        "description": "Gets details for each window that has the words \"Microsoft Word\" in the title."
      },
      {
        "title": "Example 2",
        "code": "Get-ADTWindowTitle -GetAllWindowTitles",
        "description": "Gets details for all windows with a title."
      },
      {
        "title": "Example 3",
        "code": "Get-ADTWindowTitle -GetAllWindowTitles | Where-Object { $_.ParentProcess -eq 'WINWORD' }",
        "description": "Get details for all windows belonging to Microsoft Word process with name \"WINWORD\"."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nFunction does not work in SYSTEM context unless launched with \"psexec.exe -s -i\" to run it as an interactive process under the SYSTEM account.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTWindowTitle",
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTWindowTitle"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### PSADT.Types.WindowInfo\n\n### Returns a PSADT.Types.WindowInfo object with the following properties:\n### - WindowTitle\n### - WindowHandle\n### - ParentProcess\n### - ParentProcessMainWindowHandle\n### - ParentProcessId",
    "common_parameters": true
  },
  "New-ADTShortcut": {
    "name": "New-ADTShortcut",
    "synopsis": "Creates a new .lnk or .url type shortcut.",
    "description": "Creates a new shortcut .lnk or .url file, with configurable options.\nThis function allows you to specify various parameters such as the target path, arguments, icon location, description, working directory, window style, run as administrator, and hotkey.",
    "parameters": {
      "Path": {
        "name": "Path",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Path to save the shortcut.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "TargetPath": {
        "name": "TargetPath",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Target path or URL that the shortcut launches.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Arguments": {
        "name": "Arguments",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Arguments to be passed to the target path.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "IconLocation": {
        "name": "IconLocation",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Location of the icon used for the shortcut.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "IconIndex": {
        "name": "IconIndex",
        "type": "UInt32",
        "mandatory": false,
        "position": null,
        "default_value": "0",
        "valid_values": [],
        "description": "The index of the icon.\nExecutables, DLLs, ICO files with multiple icons need the icon index to be specified.\nThis parameter is an Integer.\nThe first index is 0.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Description": {
        "name": "Description",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Description of the shortcut.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "WorkingDirectory": {
        "name": "WorkingDirectory",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Working Directory to be used for the target path.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "WindowStyle": {
        "name": "WindowStyle",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "Normal",
        "valid_values": [],
        "description": "Windows style of the application.\nOptions: Normal, Maximized, Minimized.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "RunAsAdmin": {
        "name": "RunAsAdmin",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Set shortcut to run program as administrator.\nThis option will prompt user to elevate when executing shortcut.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Hotkey": {
        "name": "Hotkey",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Create a Hotkey to launch the shortcut, e.g.\n\"CTRL+SHIFT+F\".",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "Description",
          "Path",
          "WindowStyle",
          "TargetPath",
          "WorkingDirectory",
          "Hotkey",
          "Arguments",
          "RunAsAdmin",
          "IconIndex",
          "IconLocation"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "New-ADTShortcut -Path \"$envCommonStartMenuPrograms\\My Shortcut.lnk\" -TargetPath \"$envWinDir\\notepad.exe\" -IconLocation \"$envWinDir\\notepad.exe\" -Description 'Notepad' -WorkingDirectory '%HOMEDRIVE%\\%HOMEPATH%'",
        "description": "Creates a new shortcut for Notepad with the specified parameters."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nUrl shortcuts only support TargetPath, IconLocation and IconIndex.\nOther parameters are ignored.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/New-ADTShortcut",
      "https://psappdeploytoolkit.com/docs/reference/functions/New-ADTShortcut"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return any output.",
    "common_parameters": true
  },
  "New-ADTFolder": {
    "name": "New-ADTFolder",
    "synopsis": "Create a new folder.",
    "description": "Create a new folder if it does not exist.\nThis function checks if the specified path already exists and creates the folder if it does not.\nIt logs the creation process and handles any errors that may occur during the folder creation.",
    "parameters": {
      "Path": {
        "name": "Path",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Path to the new folder to create.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "Path"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "New-ADTFolder -Path \"$env:WinDir\\System32\"",
        "description": "Creates a new folder at the specified path if it does not already exist."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/New-ADTFolder",
      "https://psappdeploytoolkit.com/docs/reference/functions/New-ADTFolder"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not generate any output.",
    "common_parameters": true
  },
  "Enable-ADTTerminalServerInstallMode": {
    "name": "Enable-ADTTerminalServerInstallMode",
    "synopsis": "Changes to user install mode for Remote Desktop Session Host/Citrix servers.",
    "description": "The Enable-ADTTerminalServerInstallMode function changes the server mode to user install mode for Remote Desktop Session Host/Citrix servers.\nThis is useful for ensuring that applications are installed in a way that is compatible with multi-user environments.",
    "parameters": {},
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Enable-ADTTerminalServerInstallMode",
        "description": "This example changes the server mode to user install mode for Remote Desktop Session Host/Citrix servers."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Enable-ADTTerminalServerInstallMode",
      "https://psappdeploytoolkit.com/docs/reference/functions/Enable-ADTTerminalServerInstallMode"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return any objects.",
    "common_parameters": true
  },
  "Show-ADTInstallationProgress": {
    "name": "Show-ADTInstallationProgress",
    "synopsis": "Displays a progress dialog in a separate thread with an updateable custom message.",
    "description": "Creates a WPF window in a separate thread to display a marquee style progress ellipse with a custom message that can be updated.\nThe status message supports line breaks.\n\nThe first time this function is called in a script, it will display a balloon tip notification to indicate that the installation has started (provided balloon tips are enabled in the config.psd1 file).",
    "parameters": {
      "WindowLocation": {
        "name": "WindowLocation",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "Default",
        "valid_values": [],
        "description": "The location of the progress window.\nDefault: center of the screen.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "MessageAlignment": {
        "name": "MessageAlignment",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [
          "Left",
          "Right",
          "Center",
          "Justify"
        ],
        "description": "The text alignment to use for the status message.\nDefault: center.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "NotTopMost": {
        "name": "NotTopMost",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specifies whether the progress window shouldn't be topmost.\nDefault: $false.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "NoRelocation": {
        "name": "NoRelocation",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specifies whether to not reposition the window upon updating the message.\nDefault: $false.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "StatusMessage": {
        "name": "StatusMessage",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The status message to be displayed.\nThe default status message is taken from the config.psd1 file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "StatusMessageDetail": {
        "name": "StatusMessageDetail",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The status message detail to be displayed with a fluent progress window.\nThe default status message is taken from the config.psd1 file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "WindowSubtitle": {
        "name": "WindowSubtitle",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The subtitle of the window to be displayed with a fluent progress window.\nThe default is the derived value from \"$($adtSession.DeploymentType)\".",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "WindowTitle": {
        "name": "WindowTitle",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The title of the window to be displayed.\nThe default is the derived value from \"$($adtSession.InstallTitle)\".",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [
          "StatusMessage",
          "WindowTitle",
          "WindowSubtitle"
        ],
        "optional_parameters": [
          "WindowLocation",
          "NoRelocation",
          "NotTopMost",
          "MessageAlignment",
          "StatusMessageDetail"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Show-ADTInstallationProgress",
        "description": "Uses the default status message from the strings.psd1 file."
      },
      {
        "title": "Example 2",
        "code": "Show-ADTInstallationProgress -StatusMessage 'Installation in Progress...'",
        "description": "Displays a progress dialog with the status message 'Installation in Progress...'."
      },
      {
        "title": "Example 3",
        "code": "Show-ADTInstallationProgress -StatusMessage \"Installation in Progress...`nThe installation may take 20 minutes to complete.\"",
        "description": "Displays a progress dialog with a multiline status message."
      },
      {
        "title": "Example 4",
        "code": "Show-ADTInstallationProgress -StatusMessage 'Installation in Progress...' -WindowLocation 'BottomRight' -NotTopMost",
        "description": "Displays a progress dialog with the status message 'Installation in Progress...', positioned at the bottom right of the screen, and not set as topmost."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Show-ADTInstallationProgress",
      "https://psappdeploytoolkit.com/docs/reference/functions/Show-ADTInstallationProgress"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not generate any output.",
    "common_parameters": true
  },
  "Start-ADTProcessAsUser": {
    "name": "Start-ADTProcessAsUser",
    "synopsis": "Invokes a process in another user's session.",
    "description": "Invokes a process from SYSTEM in another user's session.",
    "parameters": {
      "FilePath": {
        "name": "FilePath",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Path to the executable to invoke.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ArgumentList": {
        "name": "ArgumentList",
        "type": "String[]",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Arguments for the invoked executable.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "WorkingDirectory": {
        "name": "WorkingDirectory",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The 'start-in' directory for the invoked executable.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "HideWindow": {
        "name": "HideWindow",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specifies whether the window should be hidden or not.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ProcessCreationFlags": {
        "name": "ProcessCreationFlags",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [
          "DEBUG_PROCESS",
          "DEBUG_ONLY_THIS_PROCESS",
          "CREATE_SUSPENDED",
          "DETACHED_PROCESS",
          "CREATE_NEW_CONSOLE",
          "NORMAL_PRIORITY_CLASS",
          "IDLE_PRIORITY_CLASS",
          "HIGH_PRIORITY_CLASS",
          "REALTIME_PRIORITY_CLASS",
          "CREATE_NEW_PROCESS_GROUP",
          "CREATE_UNICODE_ENVIRONMENT",
          "CREATE_SEPARATE_WOW_VDM",
          "CREATE_SHARED_WOW_VDM",
          "BELOW_NORMAL_PRIORITY_CLASS",
          "ABOVE_NORMAL_PRIORITY_CLASS",
          "INHERIT_PARENT_AFFINITY",
          "CREATE_PROTECTED_PROCESS",
          "EXTENDED_STARTUPINFO_PRESENT",
          "PROCESS_MODE_BACKGROUND_BEGIN",
          "PROCESS_MODE_BACKGROUND_END",
          "CREATE_SECURE_PROCESS",
          "CREATE_BREAKAWAY_FROM_JOB",
          "CREATE_PRESERVE_CODE_AUTHZ_LEVEL",
          "CREATE_DEFAULT_ERROR_MODE",
          "CREATE_NO_WINDOW"
        ],
        "description": "One or more flags to control the process's invocation.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "InheritEnvironmentVariables": {
        "name": "InheritEnvironmentVariables",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specifies whether the process should inherit the user's environment state.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Wait": {
        "name": "Wait",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specifies whether to wait for the invoked excecutable to finish.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Username": {
        "name": "Username",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The username of the user's session to invoke the executable in.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "SessionId": {
        "name": "SessionId",
        "type": "UInt32",
        "mandatory": true,
        "position": null,
        "default_value": "0",
        "valid_values": [],
        "description": "The session ID of the user to invoke the executable in.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "AllActiveUserSessions": {
        "name": "AllActiveUserSessions",
        "type": "SwitchParameter",
        "mandatory": true,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specifies that the executable should be invoked in all active sessions.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "UseLinkedAdminToken": {
        "name": "UseLinkedAdminToken",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specifies that an admin token (if available) should be used for the invocation.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "SuccessExitCodes": {
        "name": "SuccessExitCodes",
        "type": "Int32[]",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies one or more exit codes that the function uses to consider the invocation successful.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ConsoleTimeoutInSeconds": {
        "name": "ConsoleTimeoutInSeconds",
        "type": "UInt32",
        "mandatory": false,
        "position": null,
        "default_value": "0",
        "valid_values": [],
        "description": "Specifies the timeout in seconds to wait for a console application to finish its task.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "IsGuiApplication": {
        "name": "IsGuiApplication",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Indicates that the executed application is a GUI-based app, not a console-based app.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "NoRedirectOutput": {
        "name": "NoRedirectOutput",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specifies that stdout/stderr output should not be redirected to file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "MergeStdErrAndStdOut": {
        "name": "MergeStdErrAndStdOut",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specifies that the stdout/stderr streams should be merged into a single output.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "OutputDirectory": {
        "name": "OutputDirectory",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies the output directory for the redirected stdout/stderr streams.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "NoTerminateOnTimeout": {
        "name": "NoTerminateOnTimeout",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specifies that the process shouldn't terminate on timeout.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "AdditionalEnvironmentVariables": {
        "name": "AdditionalEnvironmentVariables",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies additional environment variables to inject into the user's session.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "WaitOption": {
        "name": "WaitOption",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [
          "WaitForAny",
          "WaitForAll"
        ],
        "description": "Specifies the wait type to use when waiting for an invoked executable to finish.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "SecureArgumentList": {
        "name": "SecureArgumentList",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Hides all parameters passed to the executable from the Toolkit log file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "PassThru": {
        "name": "PassThru",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "If NoWait is not specified, returns an object with ExitCode, STDOut and STDErr output from the process.\nIf NoWait is specified, returns an object with Id, Handle and ProcessName.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "PrimaryActiveUserSession": {
        "name": "PrimaryActiveUserSession",
        "required_parameters": [],
        "optional_parameters": [
          "HideWindow",
          "WorkingDirectory",
          "ArgumentList",
          "IsGuiApplication",
          "InheritEnvironmentVariables",
          "ConsoleTimeoutInSeconds",
          "FilePath",
          "WaitOption",
          "ProcessCreationFlags",
          "SecureArgumentList",
          "UseLinkedAdminToken",
          "NoTerminateOnTimeout",
          "NoRedirectOutput",
          "OutputDirectory",
          "AdditionalEnvironmentVariables",
          "SuccessExitCodes",
          "MergeStdErrAndStdOut",
          "PassThru",
          "Wait"
        ],
        "description": ""
      },
      "AllActiveUserSessions": {
        "name": "AllActiveUserSessions",
        "required_parameters": [],
        "optional_parameters": [
          "HideWindow",
          "WorkingDirectory",
          "AllActiveUserSessions",
          "ArgumentList",
          "IsGuiApplication",
          "InheritEnvironmentVariables",
          "ConsoleTimeoutInSeconds",
          "FilePath",
          "WaitOption",
          "ProcessCreationFlags",
          "SecureArgumentList",
          "UseLinkedAdminToken",
          "NoTerminateOnTimeout",
          "NoRedirectOutput",
          "OutputDirectory",
          "AdditionalEnvironmentVariables",
          "SuccessExitCodes",
          "MergeStdErrAndStdOut",
          "PassThru",
          "Wait"
        ],
        "description": ""
      },
      "SessionId": {
        "name": "SessionId",
        "required_parameters": [],
        "optional_parameters": [
          "HideWindow",
          "WorkingDirectory",
          "ArgumentList",
          "IsGuiApplication",
          "InheritEnvironmentVariables",
          "ConsoleTimeoutInSeconds",
          "FilePath",
          "WaitOption",
          "ProcessCreationFlags",
          "SecureArgumentList",
          "UseLinkedAdminToken",
          "NoTerminateOnTimeout",
          "NoRedirectOutput",
          "OutputDirectory",
          "AdditionalEnvironmentVariables",
          "SuccessExitCodes",
          "MergeStdErrAndStdOut",
          "PassThru",
          "SessionId",
          "Wait"
        ],
        "description": ""
      },
      "Username": {
        "name": "Username",
        "required_parameters": [],
        "optional_parameters": [
          "HideWindow",
          "WorkingDirectory",
          "ArgumentList",
          "IsGuiApplication",
          "InheritEnvironmentVariables",
          "ConsoleTimeoutInSeconds",
          "FilePath",
          "WaitOption",
          "ProcessCreationFlags",
          "SecureArgumentList",
          "UseLinkedAdminToken",
          "NoTerminateOnTimeout",
          "NoRedirectOutput",
          "OutputDirectory",
          "Username",
          "AdditionalEnvironmentVariables",
          "SuccessExitCodes",
          "MergeStdErrAndStdOut",
          "PassThru",
          "Wait"
        ],
        "description": ""
      }
    },
    "examples": [],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Start-ADTProcessAsUser",
      "https://psappdeploytoolkit.com/docs/reference/functions/Start-ADTProcessAsUser"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.Threading.Tasks.Task[System.Int32]\n\n### Returns a task object indicating the process's result.",
    "common_parameters": true
  },
  "Add-ADTSessionClosingCallback": {
    "name": "Add-ADTSessionClosingCallback",
    "synopsis": "Adds a callback to be executed when the ADT session is closing.",
    "description": "The Add-ADTSessionClosingCallback function registers a callback command to be executed when the ADT session is closing.\nThis function sends the callback to the backend function for processing.",
    "parameters": {
      "Callback": {
        "name": "Callback",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The callback command(s) to be executed when the ADT session is closing.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "Callback"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Add-ADTSessionClosingCallback -Callback $myCallback",
        "description": "This example adds the specified callback to be executed when the ADT session is closing."
      }
    ],
    "notes": "An active ADT session is required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Add-ADTSessionClosingCallback",
      "https://psappdeploytoolkit.com/docs/reference/functions/Add-ADTSessionClosingCallback"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return any output.",
    "common_parameters": true
  },
  "Export-ADTEnvironmentTableToSessionState": {
    "name": "Export-ADTEnvironmentTableToSessionState",
    "synopsis": "Exports the content of `Get-ADTEnvironmentTable` to the provided SessionState as variables.",
    "description": "This function exports the content of `Get-ADTEnvironmentTable` to the provided SessionState as variables.",
    "parameters": {
      "SessionState": {
        "name": "SessionState",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Caller's SessionState.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "SessionState"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Export-ADTEnvironmentTableToSessionState -SessionState $ExecutionContext.SessionState",
        "description": "Invokes the Export-ADTEnvironmentTableToSessionState function and exports the module's environment table to the provided SessionState."
      },
      {
        "title": "Example 2",
        "code": "Export-ADTEnvironmentTableToSessionState -SessionState $PSCmdlet.SessionState",
        "description": "Invokes the Export-ADTEnvironmentTableToSessionState function and exports the module's environment table to the provided SessionState."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Export-ADTEnvironmentTableToSessionState",
      "https://psappdeploytoolkit.com/docs/reference/functions/Export-ADTEnvironmentTableToSessionState"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return any output.",
    "common_parameters": true
  },
  "Dismount-ADTWimFile": {
    "name": "Dismount-ADTWimFile",
    "synopsis": "Dismounts a WIM file from the specified mount point.",
    "description": "The Dismount-ADTWimFile function dismounts a WIM file from the specified mount point and discards all changes.\nThis function ensures that the specified path is a valid WIM mount point before attempting to dismount.",
    "parameters": {
      "ImagePath": {
        "name": "ImagePath",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The path to the WIM file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Path": {
        "name": "Path",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The path to the WIM mount point.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "ImagePath": {
        "name": "ImagePath",
        "required_parameters": [],
        "optional_parameters": [
          "ImagePath"
        ],
        "description": ""
      },
      "Path": {
        "name": "Path",
        "required_parameters": [],
        "optional_parameters": [
          "Path"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Dismount-ADTWimFile -ImagePath 'C:\\Path\\To\\File.wim'",
        "description": "This example dismounts the WIM file from all its mount points and discards all changes."
      },
      {
        "title": "Example 2",
        "code": "Dismount-ADTWimFile -Path 'C:\\Mount\\WIM'",
        "description": "This example dismounts the WIM file from the specified mount point and discards all changes."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Dismount-ADTWimFile",
      "https://psappdeploytoolkit.com/docs/reference/functions/Dismount-ADTWimFile"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return any objects.",
    "common_parameters": true
  },
  "Get-ADTMsiTableProperty": {
    "name": "Get-ADTMsiTableProperty",
    "synopsis": "Get all of the properties from a Windows Installer database table or the Summary Information stream and return as a custom object.",
    "description": "Use the Windows Installer object to read all of the properties from a Windows Installer database table or the Summary Information stream.",
    "parameters": {
      "Path": {
        "name": "Path",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The fully qualified path to an database file.\nSupports .msi and .msp files.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "TransformPath": {
        "name": "TransformPath",
        "type": "String[]",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The fully qualified path to a list of MST file(s) which should be applied to the MSI file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Table": {
        "name": "Table",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "MSI file: \"Property\"; MSP file: \"MsiPatchMetadata\"",
        "valid_values": [],
        "description": "The name of the the MSI table from which all of the properties must be retrieved.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "TablePropertyNameColumnNum": {
        "name": "TablePropertyNameColumnNum",
        "type": "Int32",
        "mandatory": false,
        "position": null,
        "default_value": "MSI file: 1; MSP file: 2",
        "valid_values": [],
        "description": "Specify the table column number which contains the name of the properties.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "TablePropertyValueColumnNum": {
        "name": "TablePropertyValueColumnNum",
        "type": "Int32",
        "mandatory": false,
        "position": null,
        "default_value": "MSI file: 2; MSP file: 3",
        "valid_values": [],
        "description": "Specify the table column number which contains the value of the properties.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "GetSummaryInformation": {
        "name": "GetSummaryInformation",
        "type": "SwitchParameter",
        "mandatory": true,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Retrieves the Summary Information for the Windows Installer database.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "TableInfo": {
        "name": "TableInfo",
        "required_parameters": [],
        "optional_parameters": [
          "Path",
          "Table",
          "TablePropertyValueColumnNum",
          "TransformPath",
          "TablePropertyNameColumnNum"
        ],
        "description": ""
      },
      "SummaryInfo": {
        "name": "SummaryInfo",
        "required_parameters": [],
        "optional_parameters": [
          "GetSummaryInformation",
          "Path",
          "TransformPath"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Get-ADTMsiTableProperty -Path 'C:\\Package\\AppDeploy.msi' -TransformPath 'C:\\Package\\AppDeploy.mst'",
        "description": "Retrieve all of the properties from the default 'Property' table."
      },
      {
        "title": "Example 2",
        "code": "(Get-ADTMsiTableProperty -Path 'C:\\Package\\AppDeploy.msi' -TransformPath 'C:\\Package\\AppDeploy.mst' -Table 'Property').ProductCode",
        "description": "Retrieve all of the properties from the 'Property' table, then retrieves just the 'ProductCode' member."
      },
      {
        "title": "Example 3",
        "code": "Get-ADTMsiTableProperty -Path 'C:\\Package\\AppDeploy.msi' -GetSummaryInformation",
        "description": "Retrieve the Summary Information for the Windows Installer database."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTMsiTableProperty",
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTMsiTableProperty"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.Collections.ObjectModel.ReadOnlyDictionary`2[[System.String],[System.Object]]\n\n### Returns a readonly dictionary with the properties as key/value pairs.",
    "common_parameters": true
  },
  "Remove-ADTEdgeExtension": {
    "name": "Remove-ADTEdgeExtension",
    "synopsis": "Removes an extension for Microsoft Edge using the ExtensionSettings policy.",
    "description": "This function removes an extension for Microsoft Edge using the ExtensionSettings policy: https://learn.microsoft.com/en-us/deployedge/microsoft-edge-manage-extensions-ref-guide.\n\nThis enables Edge Extensions to be installed and managed like applications, enabling extensions to be pushed to specific devices or users alongside existing GPO/Intune extension policies.\n\nThis should not be used in conjunction with Edge Management Service which leverages the same registry key to configure Edge extensions.",
    "parameters": {
      "ExtensionID": {
        "name": "ExtensionID",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The ID of the extension to remove.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "ExtensionID"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Remove-ADTEdgeExtension -ExtensionID \"extensionID\"",
        "description": "Removes the specified extension from Microsoft Edge."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nThis function is provided as a template to remove an extension for Microsoft Edge.\nThis should not be used in conjunction with Edge Management Service which leverages the same registry key to configure Edge extensions.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Remove-ADTEdgeExtension",
      "https://psappdeploytoolkit.com/docs/reference/functions/Remove-ADTEdgeExtension"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return objects.",
    "common_parameters": true
  },
  "Add-ADTSessionOpeningCallback": {
    "name": "Add-ADTSessionOpeningCallback",
    "synopsis": "Adds a callback to be executed when the ADT session is opening.",
    "description": "The Add-ADTSessionOpeningCallback function registers a callback command to be executed when the ADT session is opening.\nThis function sends the callback to the backend function for processing.",
    "parameters": {
      "Callback": {
        "name": "Callback",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The callback command(s) to be executed when the ADT session is opening.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "Callback"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Add-ADTSessionOpeningCallback -Callback $myCallback",
        "description": "This example adds the specified callback to be executed when the ADT session is opening."
      }
    ],
    "notes": "An active ADT session is required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Add-ADTSessionOpeningCallback",
      "https://psappdeploytoolkit.com/docs/reference/functions/Add-ADTSessionOpeningCallback"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return any output.",
    "common_parameters": true
  },
  "Test-ADTOobeCompleted": {
    "name": "Test-ADTOobeCompleted",
    "synopsis": "Checks if the device's Out-of-Box Experience (OOBE) has completed or not.",
    "description": "This function checks if the current device has completed the Out-of-Box Experience (OOBE).",
    "parameters": {},
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Test-ADTOobeCompleted",
        "description": "Checks if the device has completed the OOBE or not and returns true or false."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Test-ADTOobeCompleted",
      "https://psappdeploytoolkit.com/docs/reference/functions/Test-ADTOobeCompleted"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.Boolean\n\n### Returns $true if the device has proceeded past the OOBE, otherwise $false.",
    "common_parameters": true
  },
  "Remove-ADTSessionClosingCallback": {
    "name": "Remove-ADTSessionClosingCallback",
    "synopsis": "Removes a callback function from the ADT session closing event.",
    "description": "This function removes a specified callback function from the ADT session closing event.\nThe callback function must be provided as a parameter.\nIf the operation fails, it throws a terminating error.",
    "parameters": {
      "Callback": {
        "name": "Callback",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The callback function to remove from the ADT session closing event.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "Callback"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Remove-ADTSessionClosingCallback -Callback (Get-Command -Name 'MyCallbackFunction')",
        "description": "Removes the specified callback function from the ADT session closing event."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Remove-ADTSessionClosingCallback",
      "https://psappdeploytoolkit.com/docs/reference/functions/Remove-ADTSessionClosingCallback"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not generate any output.",
    "common_parameters": true
  },
  "Copy-ADTFile": {
    "name": "Copy-ADTFile",
    "synopsis": "Copies files and directories from a source to a destination.",
    "description": "Copies files and directories from a source to a destination.\nThis function supports recursive copying, overwriting existing files, and returning the copied items.",
    "parameters": {
      "Path": {
        "name": "Path",
        "type": "String[]",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Path of the file to copy.\nMultiple paths can be specified.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Destination": {
        "name": "Destination",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Destination Path of the file to copy.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Recurse": {
        "name": "Recurse",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Copy files in subdirectories.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Flatten": {
        "name": "Flatten",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Flattens the files into the root destination directory.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ContinueFileCopyOnError": {
        "name": "ContinueFileCopyOnError",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Continue copying files if an error is encountered.\nThis will continue the deployment script and will warn about files that failed to be copied.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "FileCopyMode": {
        "name": "FileCopyMode",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Select from 'Native' or 'Robocopy'.\nDefault is configured in config.psd1.\nNote that Robocopy supports * in file names, but not folders, in source paths.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "RobocopyParams": {
        "name": "RobocopyParams",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "/NJH /NJS /NS /NC /NP /NDL /FP /IS /IT /IM /XX /MT:4 /R:1 /W:1",
        "valid_values": [],
        "description": "Override the default Robocopy parameters.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "RobocopyAdditionalParams": {
        "name": "RobocopyAdditionalParams",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Append to the default Robocopy parameters.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "Path",
          "RobocopyParams",
          "RobocopyAdditionalParams",
          "Recurse",
          "Flatten",
          "ContinueFileCopyOnError",
          "Destination",
          "FileCopyMode"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Copy-ADTFile -Path 'C:\\Path\\file.txt' -Destination 'D:\\Destination\\file.txt'",
        "description": "Copies the file 'file.txt' from 'C:\\Path' to 'D:\\Destination'."
      },
      {
        "title": "Example 2",
        "code": "Copy-ADTFile -Path 'C:\\Path\\Folder' -Destination 'D:\\Destination\\Folder' -Recurse",
        "description": "Recursively copies the folder 'Folder' from 'C:\\Path' to 'D:\\Destination'."
      },
      {
        "title": "Example 3",
        "code": "Copy-ADTFile -Path 'C:\\Path\\file.txt' -Destination 'D:\\Destination\\file.txt'",
        "description": "Copies the file 'file.txt' from 'C:\\Path' to 'D:\\Destination', overwriting the destination file if it exists."
      },
      {
        "title": "Example 4",
        "code": "Copy-ADTFile -Path \"$($adtSession.DirFiles)\\*\" -Destination C:\\some\\random\\file\\path",
        "description": "Copies all files within the active session's Files folder to 'C:\\some\\random\\file\\path', overwriting the destination file if it exists."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Copy-ADTFile",
      "https://psappdeploytoolkit.com/docs/reference/functions/Copy-ADTFile"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not generate any output.",
    "common_parameters": true
  },
  "Invoke-ADTRegSvr32": {
    "name": "Invoke-ADTRegSvr32",
    "synopsis": "Register or unregister a DLL file.",
    "description": "Register or unregister a DLL file using regsvr32.exe.\nThis function determines the bitness of the DLL file and uses the appropriate version of regsvr32.exe to perform the action.\nIt supports both 32-bit and 64-bit DLL files on corresponding operating systems.",
    "parameters": {
      "FilePath": {
        "name": "FilePath",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Path to the DLL file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Action": {
        "name": "Action",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specify whether to register or unregister the DLL.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "Action",
          "FilePath"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Invoke-ADTRegSvr32 -FilePath \"C:\\Test\\DcTLSFileToDMSComp.dll\" -Action 'Register'",
        "description": "Registers the specified DLL file."
      },
      {
        "title": "Example 2",
        "code": "Invoke-ADTRegSvr32 -FilePath \"C:\\Test\\DcTLSFileToDMSComp.dll\" -Action 'Unregister'",
        "description": "Unregisters the specified DLL file."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Invoke-ADTRegSvr32",
      "https://psappdeploytoolkit.com/docs/reference/functions/Invoke-ADTRegSvr32"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return objects.",
    "common_parameters": true
  },
  "Show-ADTInstallationPrompt": {
    "name": "Show-ADTInstallationPrompt",
    "synopsis": "Displays a custom installation prompt with the toolkit branding and optional buttons.",
    "description": "Displays a custom installation prompt with the toolkit branding and optional buttons.\nAny combination of Left, Middle, or Right buttons can be displayed.\nThe return value of the button clicked by the user is the button text specified.\nThe prompt can also display a system icon and be configured to persist, minimize other windows, or timeout after a specified period.",
    "parameters": {
      "Message": {
        "name": "Message",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The message text to be displayed on the prompt.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "MessageAlignment": {
        "name": "MessageAlignment",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "Center",
        "valid_values": [],
        "description": "Alignment of the message text.\nOptions: Left, Center, Right.\nDefault: Center.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ButtonRightText": {
        "name": "ButtonRightText",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Show a button on the right of the prompt with the specified text.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ButtonLeftText": {
        "name": "ButtonLeftText",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Show a button on the left of the prompt with the specified text.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ButtonMiddleText": {
        "name": "ButtonMiddleText",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Show a button in the middle of the prompt with the specified text.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Icon": {
        "name": "Icon",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Show a system icon in the prompt.\nOptions: Application, Asterisk, Error, Exclamation, Hand, Information, None, Question, Shield, Warning, WinLogo.\nDefault: None.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "NoWait": {
        "name": "NoWait",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Presents the dialog in a separate, independent thread so that the main process isn't stalled waiting for a response.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "PersistPrompt": {
        "name": "PersistPrompt",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specify whether to make the prompt persist in the center of the screen every couple of seconds, specified in the config.psd1 file.\nThe user will have no option but to respond to the prompt.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "MinimizeWindows": {
        "name": "MinimizeWindows",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specifies whether to minimize other windows when displaying prompt.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "NoExitOnTimeout": {
        "name": "NoExitOnTimeout",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specifies whether to not exit the script if the UI times out.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "NotTopMost": {
        "name": "NotTopMost",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specifies whether the prompt shouldn't be topmost, above all other windows.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Subtitle": {
        "name": "Subtitle",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Subtitle of the prompt.\nDefault: the application deployment type.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Timeout": {
        "name": "Timeout",
        "type": "UInt32",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies how long, in seconds, to show the message prompt before aborting.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Title": {
        "name": "Title",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Title of the prompt.\nDefault: the application installation name.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [
          "Title"
        ],
        "optional_parameters": [
          "MinimizeWindows",
          "ButtonRightText",
          "PersistPrompt",
          "NoWait",
          "Icon",
          "Message",
          "ButtonMiddleText",
          "Timeout",
          "NoExitOnTimeout",
          "ButtonLeftText",
          "Subtitle",
          "NotTopMost",
          "MessageAlignment"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Show-ADTInstallationPrompt -Message 'Do you want to proceed with the installation?' -ButtonRightText 'Yes' -ButtonLeftText 'No'",
        "description": "### EXAMPLE 2\n\n```powershell\nShow-ADTInstallationPrompt -Title 'Funny Prompt' -Message 'How are you feeling today?' -ButtonRightText 'Good' -ButtonLeftText 'Bad' -ButtonMiddleText 'Indifferent'\n```"
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Show-ADTInstallationPrompt",
      "https://psappdeploytoolkit.com/docs/reference/functions/Show-ADTInstallationPrompt"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not generate any output.",
    "common_parameters": true
  },
  "Test-ADTCallerIsAdmin": {
    "name": "Test-ADTCallerIsAdmin",
    "synopsis": "Checks if the current user has administrative privileges.",
    "description": "This function checks if the current user is a member of the Administrators group.\nIt returns a boolean value indicating whether the user has administrative privileges.",
    "parameters": {},
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Test-ADTCallerIsAdmin",
        "description": "Checks if the current user has administrative privileges and returns true or false."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Test-ADTCallerIsAdmin",
      "https://psappdeploytoolkit.com/docs/reference/functions/Test-ADTCallerIsAdmin"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.Boolean\n\n### Returns $true if the current user is an administrator, otherwise $false.",
    "common_parameters": true
  },
  "New-ADTZipFile": {
    "name": "New-ADTZipFile",
    "synopsis": "Create a new zip archive or add content to an existing archive.",
    "description": "Create a new zip archive or add content to an existing archive by using PowerShell's Compress-Archive.",
    "parameters": {
      "Path": {
        "name": "Path",
        "type": "String[]",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "One or more paths to compress.\nSupports wildcards.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "LiteralPath": {
        "name": "LiteralPath",
        "type": "String[]",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "One or more literal paths to compress.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "DestinationPath": {
        "name": "DestinationPath",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The file path for where the zip file should be created.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "CompressionLevel": {
        "name": "CompressionLevel",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The level of compression to apply to the zip file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Update": {
        "name": "Update",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specifies whether to update an existing zip file or not.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Force": {
        "name": "Force",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specifies whether an existing zip file should be overwritten.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "RemoveSourceAfterArchiving": {
        "name": "RemoveSourceAfterArchiving",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Remove the source path after successfully archiving the content.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Path": {
        "name": "Path",
        "required_parameters": [],
        "optional_parameters": [
          "Path",
          "Force",
          "CompressionLevel",
          "Update",
          "DestinationPath",
          "RemoveSourceAfterArchiving"
        ],
        "description": ""
      },
      "LiteralPath": {
        "name": "LiteralPath",
        "required_parameters": [],
        "optional_parameters": [
          "Force",
          "LiteralPath",
          "CompressionLevel",
          "Update",
          "DestinationPath",
          "RemoveSourceAfterArchiving"
        ],
        "description": ""
      }
    },
    "examples": [],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/New-ADTZipFile",
      "https://psappdeploytoolkit.com/docs/reference/functions/New-ADTZipFile"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not generate any output.",
    "common_parameters": true
  },
  "Remove-ADTSessionOpeningCallback": {
    "name": "Remove-ADTSessionOpeningCallback",
    "synopsis": "Removes a callback function from the ADT session opening event.",
    "description": "This function removes a specified callback function from the ADT session opening event.\nThe callback function must be provided as a parameter.\nIf the operation fails, it throws a terminating error.",
    "parameters": {
      "Callback": {
        "name": "Callback",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The callback function to remove from the ADT session opening event.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "Callback"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Remove-ADTSessionOpeningCallback -Callback (Get-Command -Name 'MyCallbackFunction')",
        "description": "Removes the specified callback function from the ADT session opening event."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Remove-ADTSessionOpeningCallback",
      "https://psappdeploytoolkit.com/docs/reference/functions/Remove-ADTSessionOpeningCallback"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not generate any output.",
    "common_parameters": true
  },
  "Uninstall-ADTApplication": {
    "name": "Uninstall-ADTApplication",
    "synopsis": "Removes one or more applications specified by name, filter script, or InstalledApplication object from Get-ADTApplication.",
    "description": "Removes one or more applications specified by name, filter script, or InstalledApplication object from Get-ADTApplication.\n\nEnumerates the registry for installed applications via Get-ADTApplication, matching the specified application name and uninstalls that application using its uninstall string, with the ability to specify additional uninstall parameters also.",
    "parameters": {
      "InstalledApplication": {
        "name": "InstalledApplication",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies the [PSADT.Types.InstalledApplication] object to remove.\nThis parameter is typically used when piping Get-ADTApplication to this function.",
        "aliases": [],
        "pipeline_input": true,
        "wildcard_characters": false
      },
      "Name": {
        "name": "Name",
        "type": "String[]",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The name of the application to retrieve information for.\nPerforms a contains match on the application display name by default.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "NameMatch": {
        "name": "NameMatch",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "Contains",
        "valid_values": [],
        "description": "Specifies the type of match to perform on the application name.\nValid values are 'Contains', 'Exact', 'Wildcard', and 'Regex'.\nThe default value is 'Contains'.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ProductCode": {
        "name": "ProductCode",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The product code of the application to retrieve information for.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ApplicationType": {
        "name": "ApplicationType",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "All",
        "valid_values": [],
        "description": "Specifies the type of application to remove.\nValid values are 'All', 'MSI', and 'EXE'.\nThe default value is 'All'.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "IncludeUpdatesAndHotfixes": {
        "name": "IncludeUpdatesAndHotfixes",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Include matches against updates and hotfixes in results.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "FilterScript": {
        "name": "FilterScript",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "A script used to filter the results as they're processed.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ArgumentList": {
        "name": "ArgumentList",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Overrides the default MSI parameters specified in the config.psd1 file, or the parameters found in QuietUninstallString/UninstallString for EXE applications.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "AdditionalArgumentList": {
        "name": "AdditionalArgumentList",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Adds to the default parameters specified in the config.psd1 file, or the parameters found in QuietUninstallString/UninstallString for EXE applications.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "SecureArgumentList": {
        "name": "SecureArgumentList",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Hides all parameters passed to the executable from the Toolkit log file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "LoggingOptions": {
        "name": "LoggingOptions",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Overrides the default MSI logging options specified in the config.psd1 file.\nDefault options are: \"/L*v\".",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "LogFileName": {
        "name": "LogFileName",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Overrides the default log file name for MSI applications.\nThe default log file name is generated from the MSI file name.\nIf LogFileName does not end in .log, it will be automatically appended.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "PassThru": {
        "name": "PassThru",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Returns a PSADT.Types.ProcessResult object, providing the ExitCode, StdOut, and StdErr output from the uninstallation.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "InstalledApplication": {
        "name": "InstalledApplication",
        "required_parameters": [],
        "optional_parameters": [
          "LoggingOptions",
          "AdditionalArgumentList",
          "PassThru",
          "ArgumentList",
          "SecureArgumentList",
          "InstalledApplication",
          "LogFileName"
        ],
        "description": ""
      },
      "Search": {
        "name": "Search",
        "required_parameters": [],
        "optional_parameters": [
          "LoggingOptions",
          "AdditionalArgumentList",
          "IncludeUpdatesAndHotfixes",
          "PassThru",
          "ArgumentList",
          "NameMatch",
          "ApplicationType",
          "Name",
          "SecureArgumentList",
          "ProductCode",
          "LogFileName",
          "FilterScript"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Uninstall-ADTApplication -Name 'Acrobat' -ApplicationType 'MSI' -FilterScript { $_.Publisher -match 'Adobe' }",
        "description": "Removes all MSI applications that contain the name 'Acrobat' in the DisplayName and 'Adobe' in the Publisher name."
      },
      {
        "title": "Example 2",
        "code": "Uninstall-ADTApplication -Name 'Java' -FilterScript {$_.Publisher -eq 'Oracle Corporation' -and $_.Is64BitApplication -eq $true -and $_.DisplayVersion -notlike '8.*'}",
        "description": "Removes all MSI applications that contain the name 'Java' in the DisplayName, with Publisher as 'Oracle Corporation', are 64-bit, and not version 8.x."
      },
      {
        "title": "Example 3",
        "code": "Uninstall-ADTApplication -FilterScript {$_.DisplayName -match '^Vim\\s'} -Verbose -ApplicationType EXE -ArgumentList '/S'",
        "description": "Remove all EXE applications starting with the name 'Vim' followed by a space, using the '/S' parameter."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nMore reading on how to create filterscripts https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/where-object?view=powershell-5.1#description\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Uninstall-ADTApplication",
      "https://psappdeploytoolkit.com/docs/reference/functions/Uninstall-ADTApplication"
    ],
    "inputs": "### PSADT.Types.InstalledApplication\n\n### This function can receive one or more InstalledApplication objects for uninstallation.",
    "outputs": "### PSADT.Types.ProcessResult\n\n### Returns an object with the results of the installation if -PassThru is specified.\n### - ExitCode\n### - StdOut\n### - StdErr",
    "common_parameters": true
  },
  "New-ADTValidateScriptErrorRecord": {
    "name": "New-ADTValidateScriptErrorRecord",
    "synopsis": "Creates a new ErrorRecord for script validation errors.",
    "description": "This function creates a new ErrorRecord object for script validation errors.\nIt takes the parameter name, provided value, exception message, and an optional inner exception to build a detailed error record.\nThis helps in identifying and handling invalid parameter values in scripts.",
    "parameters": {
      "ParameterName": {
        "name": "ParameterName",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The name of the parameter that caused the validation error.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ProvidedValue": {
        "name": "ProvidedValue",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The value provided for the parameter that caused the validation error.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ExceptionMessage": {
        "name": "ExceptionMessage",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The message describing the validation error.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "InnerException": {
        "name": "InnerException",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "An optional inner exception that provides more details about the validation error.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "ParameterName",
          "ProvidedValue",
          "ExceptionMessage",
          "InnerException"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "$paramName = \"FilePath\"\n$providedValue = \"C:\\InvalidPath\"\n$exceptionMessage = \"The specified path does not exist.\"\nNew-ADTValidateScriptErrorRecord -ParameterName $paramName -ProvidedValue $providedValue -ExceptionMessage $exceptionMessage",
        "description": "Creates a new ErrorRecord for a validation error with the specified parameters."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/New-ADTValidateScriptErrorRecord",
      "https://psappdeploytoolkit.com/docs/reference/functions/New-ADTValidateScriptErrorRecord"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.Management.Automation.ErrorRecord\n\n### This function returns an ErrorRecord object.",
    "common_parameters": true
  },
  "Resolve-ADTErrorRecord": {
    "name": "Resolve-ADTErrorRecord",
    "synopsis": "Enumerates ErrorRecord details.",
    "description": "Enumerates an ErrorRecord, or a collection of ErrorRecord properties.\nThis function can filter and display specific properties of the ErrorRecord, and can exclude certain parts of the error details.",
    "parameters": {
      "ErrorRecord": {
        "name": "ErrorRecord",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The ErrorRecord to resolve.\nFor usage in a catch block, you'd use the automatic variable `$PSItem`.\nFor usage out of a catch block, you can access the global $Error array's first error (on index 0).",
        "aliases": [],
        "pipeline_input": true,
        "wildcard_characters": false
      },
      "Property": {
        "name": "Property",
        "type": "String[]",
        "mandatory": false,
        "position": null,
        "default_value": "('Message', 'InnerException', 'FullyQualifiedErrorId', 'ScriptStackTrace', 'PositionMessage')",
        "valid_values": [],
        "description": "The list of properties to display from the ErrorRecord.\nUse \"*\" to display all properties.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ExcludeErrorRecord": {
        "name": "ExcludeErrorRecord",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Exclude ErrorRecord details as represented by $ErrorRecord.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ExcludeErrorInvocation": {
        "name": "ExcludeErrorInvocation",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Exclude ErrorRecord invocation information as represented by $ErrorRecord.InvocationInfo.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ExcludeErrorException": {
        "name": "ExcludeErrorException",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Exclude ErrorRecord exception details as represented by $ErrorRecord.Exception.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ExcludeErrorInnerException": {
        "name": "ExcludeErrorInnerException",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Exclude ErrorRecord inner exception details as represented by $ErrorRecord.Exception.InnerException.\nWill retrieve all inner exceptions if there is more than one.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "ExcludeErrorInvocation",
          "ExcludeErrorInnerException",
          "ExcludeErrorRecord",
          "Property",
          "ErrorRecord",
          "ExcludeErrorException"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Resolve-ADTErrorRecord",
        "description": "Enumerates the details of the last ErrorRecord."
      },
      {
        "title": "Example 2",
        "code": "Resolve-ADTErrorRecord -Property *",
        "description": "Enumerates all properties of the last ErrorRecord."
      },
      {
        "title": "Example 3",
        "code": "Resolve-ADTErrorRecord -Property InnerException",
        "description": "Enumerates only the InnerException property of the last ErrorRecord."
      },
      {
        "title": "Example 4",
        "code": "Resolve-ADTErrorRecord -ExcludeErrorInvocation",
        "description": "Enumerates the details of the last ErrorRecord, excluding the invocation information."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Resolve-ADTErrorRecord",
      "https://psappdeploytoolkit.com/docs/reference/functions/Resolve-ADTErrorRecord"
    ],
    "inputs": "### System.Management.Automation.ErrorRecord\n\n### Accepts one or more ErrorRecord objects via the pipeline.",
    "outputs": "### System.String\n\n### Displays the ErrorRecord details.",
    "common_parameters": true
  },
  "Set-ADTMsiProperty": {
    "name": "Set-ADTMsiProperty",
    "synopsis": "Set a property in the MSI property table.",
    "description": "Set a property in the MSI property table.",
    "parameters": {
      "Database": {
        "name": "Database",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specify a ComObject representing an MSI database opened in view/modify/update mode.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "PropertyName": {
        "name": "PropertyName",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The name of the property to be set/modified.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "PropertyValue": {
        "name": "PropertyValue",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The value of the property to be set/modified.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "PropertyName",
          "Database",
          "PropertyValue"
        ],
        "description": ""
      }
    },
    "examples": [],
    "notes": "An active ADT session is NOT required to use this function.\n\nOriginal Author: Julian DA CUNHA - dacunha.julian@gmail.com, used with permission.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Set-ADTMsiProperty",
      "https://psappdeploytoolkit.com/docs/reference/functions/Set-ADTMsiProperty"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not generate any output.",
    "common_parameters": true
  },
  "Start-ADTMsiProcess": {
    "name": "Start-ADTMsiProcess",
    "synopsis": "Executes msiexec.exe to perform actions such as install, uninstall, patch, repair, or active setup for MSI and MSP files or MSI product codes.",
    "description": "This function utilizes msiexec.exe to handle various operations on MSI and MSP files, as well as MSI product codes.\nThe operations include installation, uninstallation, patching, repair, and setting up active configurations.\n\nIf the -Action parameter is set to \"Install\" and the MSI is already installed, the function will terminate without performing any actions.\n\nThe function automatically sets default switches for msiexec based on preferences defined in the config.psd1 file.\nAdditionally, it generates a log file name and creates a verbose log for all msiexec operations, ensuring detailed tracking.\n\nThe MSI or MSP file is expected to reside in the \"Files\" subdirectory of the App Deploy Toolkit, with transform files expected to be in the same directory as the MSI file.",
    "parameters": {
      "Action": {
        "name": "Action",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "Install",
        "valid_values": [],
        "description": "Specifies the action to be performed.\nAvailable options: Install, Uninstall, Patch, Repair, ActiveSetup.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "FilePath": {
        "name": "FilePath",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The file path to the MSI/MSP file.",
        "aliases": [],
        "pipeline_input": true,
        "wildcard_characters": false
      },
      "ProductCode": {
        "name": "ProductCode",
        "type": "Guid",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The product code of the installed MSI.",
        "aliases": [],
        "pipeline_input": true,
        "wildcard_characters": false
      },
      "InstalledApplication": {
        "name": "InstalledApplication",
        "type": "InstalledApplication",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The InstalledApplication object of the installed MSI.",
        "aliases": [],
        "pipeline_input": true,
        "wildcard_characters": false
      },
      "Transforms": {
        "name": "Transforms",
        "type": "String[]",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The name(s) of the transform file(s) to be applied to the MSI.\nThe transform files should be in the same directory as the MSI file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ArgumentList": {
        "name": "ArgumentList",
        "type": "String[]",
        "mandatory": false,
        "position": null,
        "default_value": "Install (Normal): (Get-ADTConfig).MSI.InstallParams; Install (Silent): (Get-ADTConfig).MSI.SilentParams; Uninstall (Normal): (Get-ADTConfig).MSI.UninstallParams; Uninstall (Silent): (Get-ADTConfig).MSI.SilentParams",
        "valid_values": [],
        "description": "Overrides the default parameters specified in the config.psd1 file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "AdditionalArgumentList": {
        "name": "AdditionalArgumentList",
        "type": "String[]",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Adds additional parameters to the default set specified in the config.psd1 file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "SecureArgumentList": {
        "name": "SecureArgumentList",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Hides all parameters passed to the MSI or MSP file from the toolkit log file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Patches": {
        "name": "Patches",
        "type": "String[]",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The name(s) of the patch (MSP) file(s) to be applied to the MSI for the \"Install\" action.\nThe patch files should be in the same directory as the MSI file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "LoggingOptions": {
        "name": "LoggingOptions",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Overrides the default logging options specified in the config.psd1 file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "LogFileName": {
        "name": "LogFileName",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Overrides the default log file name.\nThe default log file name is generated from the MSI file name.\nIf LogFileName does not end in .log, it will be automatically appended.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "WorkingDirectory": {
        "name": "WorkingDirectory",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Overrides the working directory.\nThe working directory is set to the location of the MSI file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "SkipMSIAlreadyInstalledCheck": {
        "name": "SkipMSIAlreadyInstalledCheck",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Skips the check to determine if the MSI is already installed on the system.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "IncludeUpdatesAndHotfixes": {
        "name": "IncludeUpdatesAndHotfixes",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Include matches against updates and hotfixes in results.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "NoWait": {
        "name": "NoWait",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Immediately continue after executing the process.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "PassThru": {
        "name": "PassThru",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Returns ExitCode, STDOut, and STDErr output from the process.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "SuccessExitCodes": {
        "name": "SuccessExitCodes",
        "type": "Int32[]",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "List of exit codes to be considered successful.\nDefaults to values set during ADTSession initialization, otherwise: 0",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "RebootExitCodes": {
        "name": "RebootExitCodes",
        "type": "Int32[]",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "List of exit codes to indicate a reboot is required.\nDefaults to values set during ADTSession initialization, otherwise: 1641, 3010",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "IgnoreExitCodes": {
        "name": "IgnoreExitCodes",
        "type": "String[]",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "List the exit codes to ignore or * to ignore all exit codes.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "PriorityClass": {
        "name": "PriorityClass",
        "type": "ProcessPriorityClass",
        "mandatory": false,
        "position": null,
        "default_value": "Normal",
        "valid_values": [
          "Normal",
          "Idle",
          "High",
          "RealTime",
          "BelowNormal",
          "AboveNormal"
        ],
        "description": "Specifies priority class for the process.\nOptions: Idle, Normal, High, AboveNormal, BelowNormal, RealTime.\nDefault: Normal",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "RepairFromSource": {
        "name": "RepairFromSource",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specifies whether we should repair from source.\nAlso rewrites local cache.\nDefault: $false",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "FilePath": {
        "name": "FilePath",
        "required_parameters": [],
        "optional_parameters": [
          "RebootExitCodes",
          "WorkingDirectory",
          "ArgumentList",
          "IncludeUpdatesAndHotfixes",
          "NoWait",
          "FilePath",
          "IgnoreExitCodes",
          "SkipMSIAlreadyInstalledCheck",
          "Patches",
          "Transforms",
          "AdditionalArgumentList",
          "SecureArgumentList",
          "RepairFromSource",
          "Action",
          "LoggingOptions",
          "SuccessExitCodes",
          "PriorityClass",
          "PassThru",
          "LogFileName"
        ],
        "description": ""
      },
      "ProductCode": {
        "name": "ProductCode",
        "required_parameters": [],
        "optional_parameters": [
          "RebootExitCodes",
          "WorkingDirectory",
          "ArgumentList",
          "IncludeUpdatesAndHotfixes",
          "NoWait",
          "IgnoreExitCodes",
          "SkipMSIAlreadyInstalledCheck",
          "Patches",
          "Transforms",
          "AdditionalArgumentList",
          "SecureArgumentList",
          "ProductCode",
          "RepairFromSource",
          "Action",
          "LoggingOptions",
          "SuccessExitCodes",
          "PriorityClass",
          "PassThru",
          "LogFileName"
        ],
        "description": ""
      },
      "InstalledApplication": {
        "name": "InstalledApplication",
        "required_parameters": [],
        "optional_parameters": [
          "RebootExitCodes",
          "WorkingDirectory",
          "ArgumentList",
          "IncludeUpdatesAndHotfixes",
          "NoWait",
          "IgnoreExitCodes",
          "SkipMSIAlreadyInstalledCheck",
          "Patches",
          "Transforms",
          "AdditionalArgumentList",
          "SecureArgumentList",
          "RepairFromSource",
          "Action",
          "LoggingOptions",
          "SuccessExitCodes",
          "PriorityClass",
          "PassThru",
          "InstalledApplication",
          "LogFileName"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Start-ADTMsiProcess -Action 'Install' -FilePath 'Adobe_FlashPlayer_11.2.202.233_x64_EN.msi'",
        "description": "Install an MSI."
      },
      {
        "title": "Example 2",
        "code": "Start-ADTMsiProcess -Action 'Install' -FilePath 'Adobe_FlashPlayer_11.2.202.233_x64_EN.msi' -Transforms 'Adobe_FlashPlayer_11.2.202.233_x64_EN_01.mst' -ArgumentList '/QN'",
        "description": "Install an MSI, applying a transform and overriding the default MSI toolkit parameters."
      },
      {
        "title": "Example 3",
        "code": "$ExecuteMSIResult = Start-ADTMsiProcess -Action 'Install' -FilePath 'Adobe_FlashPlayer_11.2.202.233_x64_EN.msi' -PassThru",
        "description": "Install an MSI and stores the result of the execution into a variable by using the -PassThru option."
      },
      {
        "title": "Example 4",
        "code": "Start-ADTMsiProcess -Action 'Uninstall' -ProductCode '{26923b43-4d38-484f-9b9e-de460746276c}'",
        "description": "Uninstall an MSI using a product code."
      },
      {
        "title": "Example 5",
        "code": "Start-ADTMsiProcess -Action 'Patch' -FilePath 'Adobe_Reader_11.0.3_EN.msp'",
        "description": "Install an MSP."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Start-ADTMsiProcess",
      "https://psappdeploytoolkit.com/docs/reference/functions/Start-ADTMsiProcess"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### PSADT.Types.ProcessResult\n\n### Returns an object with the results of the installation if -PassThru is specified.\n### - ExitCode\n### - StdOut\n### - StdErr",
    "common_parameters": true
  },
  "Stop-ADTServiceAndDependencies": {
    "name": "Stop-ADTServiceAndDependencies",
    "synopsis": "Stop a Windows service and its dependencies.",
    "description": "This function stops a specified Windows service and its dependencies.\nIt provides options to skip stopping dependent services, wait for a service to get out of a pending state, and return the service object.",
    "parameters": {
      "Name": {
        "name": "Name",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specify the name of the service.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "SkipDependentServices": {
        "name": "SkipDependentServices",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Choose to skip checking for and stopping dependent services.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "PendingStatusWait": {
        "name": "PendingStatusWait",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The amount of time to wait for a service to get out of a pending state before continuing.\nDefault is 60 seconds.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "PassThru": {
        "name": "PassThru",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Return the System.ServiceProcess.ServiceController service object.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "PendingStatusWait",
          "PassThru",
          "SkipDependentServices",
          "Name"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Stop-ADTServiceAndDependencies -Name 'wuauserv'",
        "description": "Stops the Windows Update service and its dependencies."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Stop-ADTServiceAndDependencies",
      "https://psappdeploytoolkit.com/docs/reference/functions/Stop-ADTServiceAndDependencies"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.ServiceProcess.ServiceController\n\n### Returns the service object.",
    "common_parameters": true
  },
  "Update-ADTDesktop": {
    "name": "Update-ADTDesktop",
    "synopsis": "Refresh the Windows Explorer Shell, which causes the desktop icons and the environment variables to be reloaded.",
    "description": "This function refreshes the Windows Explorer Shell, causing the desktop icons and environment variables to be reloaded.\nThis can be useful after making changes that affect the desktop or environment variables, ensuring that the changes are reflected immediately.",
    "parameters": {},
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Update-ADTDesktop",
        "description": "Refreshes the Windows Explorer Shell, reloading the desktop icons and environment variables."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Update-ADTDesktop",
      "https://psappdeploytoolkit.com/docs/reference/functions/Update-ADTDesktop"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return any objects.",
    "common_parameters": true
  },
  "Test-ADTRegistryValue": {
    "name": "Test-ADTRegistryValue",
    "synopsis": "Test if a registry value exists.",
    "description": "Checks a registry key path to see if it has a value with a given name.\nCan correctly handle cases where a value simply has an empty or null value.",
    "parameters": {
      "Key": {
        "name": "Key",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Path of the registry key.",
        "aliases": [],
        "pipeline_input": true,
        "wildcard_characters": false
      },
      "Name": {
        "name": "Name",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specify the name of the value to check the existence of.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "SID": {
        "name": "SID",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The security identifier (SID) for a user.\nSpecifying this parameter will convert a HKEY_CURRENT_USER registry key to the HKEY_USERS\\$SID format.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Wow6432Node": {
        "name": "Wow6432Node",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specify this switch to check the 32-bit registry (Wow6432Node) on 64-bit systems.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "SID",
          "Wow6432Node",
          "Key",
          "Name"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Test-ADTRegistryValue -Key 'HKLM:SYSTEM\\CurrentControlSet\\Control\\Session Manager' -Name 'PendingFileRenameOperations'",
        "description": "Checks if the registry value 'PendingFileRenameOperations' exists under the specified key."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTo test if a registry key exists, use the Test-Path function like so: Test-Path -LiteralPath $Key -PathType 'Container'\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Test-ADTRegistryValue",
      "https://psappdeploytoolkit.com/docs/reference/functions/Test-ADTRegistryValue"
    ],
    "inputs": "### System.String\n\n### Accepts a string value for the registry key path.",
    "outputs": "### System.Boolean\n\n### Returns $true if the registry value exists, $false if it does not.",
    "common_parameters": true
  },
  "Mount-ADTWimFile": {
    "name": "Mount-ADTWimFile",
    "synopsis": "Mounts a WIM file to a specified directory.",
    "description": "Mounts a WIM file to a specified directory.\nThe function supports mounting by image index or image name.\nIt also provides options to forcefully remove existing directories and return the mounted image details.",
    "parameters": {
      "ImagePath": {
        "name": "ImagePath",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Path to the WIM file to be mounted.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Path": {
        "name": "Path",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Directory where the WIM file will be mounted.\nThe directory must be empty and not have a pre-existing WIM mounted.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Index": {
        "name": "Index",
        "type": "UInt32",
        "mandatory": true,
        "position": null,
        "default_value": "0",
        "valid_values": [],
        "description": "Index of the image within the WIM file to be mounted.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Name": {
        "name": "Name",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Name of the image within the WIM file to be mounted.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Force": {
        "name": "Force",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Forces the removal of the existing directory if it is not empty.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "PassThru": {
        "name": "PassThru",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "If specified, the function will return the results from `Mount-WindowsImage`.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Name": {
        "name": "Name",
        "required_parameters": [
          "ImagePath",
          "Path"
        ],
        "optional_parameters": [
          "Force",
          "PassThru",
          "Name"
        ],
        "description": ""
      },
      "Index": {
        "name": "Index",
        "required_parameters": [
          "ImagePath",
          "Path"
        ],
        "optional_parameters": [
          "Index",
          "Force",
          "PassThru"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Mount-ADTWimFile -ImagePath 'C:\\Images\\install.wim' -Path 'C:\\Mount' -Index 1",
        "description": "Mounts the first image in the 'install.wim' file to the 'C:\\Mount' directory."
      },
      {
        "title": "Example 2",
        "code": "Mount-ADTWimFile -ImagePath 'C:\\Images\\install.wim' -Path 'C:\\Mount' -Name 'Windows 10 Pro'",
        "description": "Mounts the image named 'Windows 10 Pro' in the 'install.wim' file to the 'C:\\Mount' directory."
      },
      {
        "title": "Example 3",
        "code": "Mount-ADTWimFile -ImagePath 'C:\\Images\\install.wim' -Path 'C:\\Mount' -Index 1 -Force",
        "description": "Mounts the first image in the 'install.wim' file to the 'C:\\Mount' directory, forcefully removing the existing directory if it is not empty."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Mount-ADTWimFile",
      "https://psappdeploytoolkit.com/docs/reference/functions/Mount-ADTWimFile"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### Microsoft.Dism.Commands.ImageObject\n\n### Returns the mounted image details if the PassThru parameter is specified.",
    "common_parameters": true
  },
  "Get-ADTApplication": {
    "name": "Get-ADTApplication",
    "synopsis": "Retrieves information about installed applications.",
    "description": "Retrieves information about installed applications by querying the registry.\nYou can specify an application name, a product code, or both.\nReturns information about application publisher, name & version, product code, uninstall string, install source, location, date, and application architecture.",
    "parameters": {
      "Name": {
        "name": "Name",
        "type": "String[]",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The name of the application to retrieve information for.\nPerforms a contains match on the application display name by default.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "NameMatch": {
        "name": "NameMatch",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "Contains",
        "valid_values": [],
        "description": "Specifies the type of match to perform on the application name.\nValid values are 'Contains', 'Exact', 'Wildcard', and 'Regex'.\nThe default value is 'Contains'.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ProductCode": {
        "name": "ProductCode",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The product code of the application to retrieve information for.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ApplicationType": {
        "name": "ApplicationType",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "All",
        "valid_values": [],
        "description": "Specifies the type of application to remove.\nValid values are 'All', 'MSI', and 'EXE'.\nThe default value is 'All'.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "IncludeUpdatesAndHotfixes": {
        "name": "IncludeUpdatesAndHotfixes",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Include matches against updates and hotfixes in results.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "FilterScript": {
        "name": "FilterScript",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "A script used to filter the results as they're processed.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "NameMatch",
          "Name",
          "ApplicationType",
          "ProductCode",
          "IncludeUpdatesAndHotfixes",
          "FilterScript"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Get-ADTApplication",
        "description": "This example retrieves information about all installed applications."
      },
      {
        "title": "Example 2",
        "code": "Get-ADTApplication -Name 'Acrobat'",
        "description": "Returns all applications that contain the name 'Acrobat' in the DisplayName."
      },
      {
        "title": "Example 3",
        "code": "Get-ADTApplication -Name 'Adobe Acrobat Reader' -NameMatch 'Exact'",
        "description": "Returns all applications that match the name 'Adobe Acrobat Reader' exactly."
      },
      {
        "title": "Example 4",
        "code": "Get-ADTApplication -ProductCode '{AC76BA86-7AD7-1033-7B44-AC0F074E4100}'",
        "description": "Returns the application with the specified ProductCode."
      },
      {
        "title": "Example 5",
        "code": "Get-ADTApplication -Name 'Acrobat' -ApplicationType 'MSI' -FilterScript { $_.Publisher -match 'Adobe' }",
        "description": "Returns all MSI applications that contain the name 'Acrobat' in the DisplayName and 'Adobe' in the Publisher name."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTApplication",
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTApplication"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### PSADT.Types.InstalledApplication\n\n### Returns a custom type with information about an installed application:\n### - UninstallKey\n### - UninstallParentKey\n### - UninstallSubKey\n### - ProductCode\n### - DisplayName\n### - DisplayVersion\n### - UninstallString\n### - QuietUninstallString\n### - InstallSource\n### - InstallLocation\n### - InstallDate\n### - Publisher\n### - SystemComponent\n### - WindowsInstaller\n### - Is64BitApplication",
    "common_parameters": true
  },
  "Add-ADTEdgeExtension": {
    "name": "Add-ADTEdgeExtension",
    "synopsis": "Adds an extension for Microsoft Edge using the ExtensionSettings policy.",
    "description": "This function adds an extension for Microsoft Edge using the ExtensionSettings policy: https://learn.microsoft.com/en-us/deployedge/microsoft-edge-manage-extensions-ref-guide.\n\nThis enables Edge Extensions to be installed and managed like applications, enabling extensions to be pushed to specific devices or users alongside existing GPO/Intune extension policies.\n\nThis should not be used in conjunction with Edge Management Service which leverages the same registry key to configure Edge extensions.",
    "parameters": {
      "ExtensionID": {
        "name": "ExtensionID",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The ID of the extension to add.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "UpdateUrl": {
        "name": "UpdateUrl",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The update URL of the extension.\nThis is the URL where the extension will check for updates.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "InstallationMode": {
        "name": "InstallationMode",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The installation mode of the extension.\nAllowed values: blocked, allowed, removed, force_installed, normal_installed.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "MinimumVersionRequired": {
        "name": "MinimumVersionRequired",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The minimum version of the extension required for installation.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "UpdateUrl",
          "InstallationMode",
          "ExtensionID",
          "MinimumVersionRequired"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Add-ADTEdgeExtension -ExtensionID \"extensionID\" -InstallationMode \"force_installed\" -UpdateUrl \"https://edge.microsoft.com/extensionwebstorebase/v1/crx\"",
        "description": "This example adds the specified extension to be force installed in Microsoft Edge."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Add-ADTEdgeExtension",
      "https://psappdeploytoolkit.com/docs/reference/functions/Add-ADTEdgeExtension"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return any output.",
    "common_parameters": true
  },
  "Show-ADTInstallationRestartPrompt": {
    "name": "Show-ADTInstallationRestartPrompt",
    "synopsis": "Displays a restart prompt with a countdown to a forced restart.",
    "description": "Displays a restart prompt with a countdown to a forced restart.\nThe prompt can be customized with a title, countdown duration, and whether it should be topmost.\nIt also supports silent mode where the restart can be triggered without user interaction.",
    "parameters": {
      "NoCountdown": {
        "name": "NoCountdown",
        "type": "SwitchParameter",
        "mandatory": true,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specifies whether the user should receive a prompt to immediately restart their workstation.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "CountdownSeconds": {
        "name": "CountdownSeconds",
        "type": "UInt32",
        "mandatory": false,
        "position": null,
        "default_value": "60",
        "valid_values": [],
        "description": "Specifies the number of seconds to display the restart prompt.\nDefault: 60",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "CountdownNoHideSeconds": {
        "name": "CountdownNoHideSeconds",
        "type": "UInt32",
        "mandatory": false,
        "position": null,
        "default_value": "30",
        "valid_values": [],
        "description": "Specifies the number of seconds to display the restart prompt without allowing the window to be hidden.\nDefault: 30",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "SilentRestart": {
        "name": "SilentRestart",
        "type": "SwitchParameter",
        "mandatory": true,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specifies whether the restart should be triggered when DeployMode is silent or very silent.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "SilentCountdownSeconds": {
        "name": "SilentCountdownSeconds",
        "type": "UInt32",
        "mandatory": false,
        "position": null,
        "default_value": "5",
        "valid_values": [],
        "description": "Specifies number of seconds to countdown for the restart when the toolkit is running in silent mode and `-SilentRestart` isn't specified.\nDefault: 5",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "NotTopMost": {
        "name": "NotTopMost",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specifies whether the prompt shouldn't be topmost, above all other windows.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Subtitle": {
        "name": "Subtitle",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Subtitle of the prompt.\nDefault: the application deployment type.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Title": {
        "name": "Title",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Title of the prompt.\nDefault: the application installation name.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Countdown": {
        "name": "Countdown",
        "required_parameters": [
          "Title"
        ],
        "optional_parameters": [
          "NotTopMost",
          "CountdownSeconds",
          "Subtitle",
          "CountdownNoHideSeconds"
        ],
        "description": ""
      },
      "NoCountdown": {
        "name": "NoCountdown",
        "required_parameters": [
          "Title"
        ],
        "optional_parameters": [
          "NoCountdown",
          "NotTopMost",
          "Subtitle"
        ],
        "description": ""
      },
      "SilentRestart": {
        "name": "SilentRestart",
        "required_parameters": [
          "Title"
        ],
        "optional_parameters": [
          "NotTopMost",
          "SilentRestart",
          "SilentCountdownSeconds",
          "Subtitle"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Show-ADTInstallationRestartPrompt -NoCountdown",
        "description": "Displays a restart prompt without a countdown."
      },
      {
        "title": "Example 2",
        "code": "Show-ADTInstallationRestartPrompt -CountdownSeconds 300",
        "description": "Displays a restart prompt with a 300-second countdown."
      },
      {
        "title": "Example 3",
        "code": "Show-ADTInstallationRestartPrompt -CountdownSeconds 600 -CountdownNoHideSeconds 60",
        "description": "Displays a restart prompt with a 600-second countdown and triggers a silent restart with a 60-second countdown in silent mode."
      }
    ],
    "notes": "Be mindful of the countdown you specify for the reboot as code directly after this function might NOT be able to execute - that includes logging.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Show-ADTInstallationRestartPrompt",
      "https://psappdeploytoolkit.com/docs/reference/functions/Show-ADTInstallationRestartPrompt"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not generate any output.",
    "common_parameters": true
  },
  "Invoke-ADTAllUsersRegistryAction": {
    "name": "Invoke-ADTAllUsersRegistryAction",
    "synopsis": "Set current user registry settings for all current users and any new users in the future.",
    "description": "Set HKCU registry settings for all current and future users by loading their NTUSER.dat registry hive file, and making the modifications.\n\nThis function will modify HKCU settings for all users even when executed under the SYSTEM account and can be used as an alternative to using ActiveSetup for registry settings.\n\nTo ensure new users in the future get the registry edits, the Default User registry hive used to provision the registry for new users is modified.\n\nThe advantage of using this function over ActiveSetup is that a user does not have to log off and log back on before the changes take effect.",
    "parameters": {
      "ScriptBlock": {
        "name": "ScriptBlock",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Script block which contains HKCU registry actions to be run for all users on the system.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "UserProfiles": {
        "name": "UserProfiles",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "(Get-ADTUserProfiles)",
        "valid_values": [],
        "description": "Specify the user profiles to modify HKCU registry settings for.\nDefault is all user profiles except for system profiles.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "SkipUnloadedProfiles": {
        "name": "SkipUnloadedProfiles",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specifies that unloaded registry hives should be skipped and not be loaded by the function.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "ScriptBlock",
          "SkipUnloadedProfiles",
          "UserProfiles"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Invoke-ADTAllUsersRegistryAction -ScriptBlock {\n    Set-ADTRegistryKey -Key 'HKCU\\Software\\Microsoft\\Office\\14.0\\Common' -Name 'qmenable' -Value 0 -Type DWord -SID $_.SID\n    Set-ADTRegistryKey -Key 'HKCU\\Software\\Microsoft\\Office\\14.0\\Common' -Name 'updatereliabilitydata' -Value 1 -Type DWord -SID $_.SID\n}",
        "description": "Example demonstrating the setting of two values within each user's HKEY_CURRENT_USER hive."
      },
      {
        "title": "Example 2",
        "code": "Invoke-ADTAllUsersRegistryAction {\n    Set-ADTRegistryKey -Key 'HKCU\\Software\\Microsoft\\Office\\14.0\\Common' -Name 'qmenable' -Value 0 -Type DWord -SID $_.SID\n    Set-ADTRegistryKey -Key 'HKCU\\Software\\Microsoft\\Office\\14.0\\Common' -Name 'updatereliabilitydata' -Value 1 -Type DWord -SID $_.SID\n}",
        "description": "As the previous example, but showing how to use ScriptBlock as a positional parameter with no name specified."
      },
      {
        "title": "Example 3",
        "code": "Invoke-ADTAllUsersRegistryAction -UserProfiles (Get-ADTUserProfiles -ExcludeDefaultUser) -ScriptBlock {\n    Set-ADTRegistryKey -Key 'HKCU\\Software\\Microsoft\\Office\\14.0\\Common' -Name 'qmenable' -Value 0 -Type DWord -SID $_.SID\n    Set-ADTRegistryKey -Key 'HKCU\\Software\\Microsoft\\Office\\14.0\\Common' -Name 'updatereliabilitydata' -Value 1 -Type DWord -SID $_.SID\n}",
        "description": "As the previous example, but sending specific user profiles through to exclude the Default profile."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Invoke-ADTAllUsersRegistryAction",
      "https://psappdeploytoolkit.com/docs/reference/functions/Invoke-ADTAllUsersRegistryAction"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not generate any output.",
    "common_parameters": true
  },
  "Register-ADTDll": {
    "name": "Register-ADTDll",
    "synopsis": "Register a DLL file.",
    "description": "This function registers a DLL file using regsvr32.exe.\nIt ensures that the specified DLL file exists before attempting to register it.\nIf the file does not exist, it throws an error.",
    "parameters": {
      "FilePath": {
        "name": "FilePath",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Path to the DLL file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "FilePath"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Register-ADTDll -FilePath \"C:\\Test\\DcTLSFileToDMSComp.dll\"",
        "description": "Registers the specified DLL file."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Register-ADTDll",
      "https://psappdeploytoolkit.com/docs/reference/functions/Register-ADTDll"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return objects.",
    "common_parameters": true
  },
  "Get-ADTPendingReboot": {
    "name": "Get-ADTPendingReboot",
    "synopsis": "Get the pending reboot status on a local computer.",
    "description": "Check WMI and the registry to determine if the system has a pending reboot operation from any of the following:\n\n- Component Based Servicing (Vista, Windows 2008)\n- Windows Update / Auto Update (XP, Windows 2003 / 2008)\n- SCCM 2012 Clients (DetermineIfRebootPending WMI method)\n- App-V Pending Tasks (global based Appv 5.0 SP2)\n- Pending File Rename Operations (XP, Windows 2003 / 2008)",
    "parameters": {},
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Get-ADTPendingReboot",
        "description": "This example retrieves the pending reboot status on the local computer and returns a custom object with detailed information."
      },
      {
        "title": "Example 2",
        "code": "(Get-ADTPendingReboot).IsSystemRebootPending",
        "description": "This example returns a boolean value determining whether or not there is a pending reboot operation."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nErrorMsg only contains something if an error occurred.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTPendingReboot",
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTPendingReboot"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### PSADT.Types.RebootInfo\n\n### Returns a custom object with the following properties:\n### - ComputerName\n### - LastBootUpTime\n### - IsSystemRebootPending\n### - IsCBServicingRebootPending\n### - IsWindowsUpdateRebootPending\n### - IsSCCMClientRebootPending\n### - IsIntuneClientRebootPending\n### - IsFileRenameRebootPending\n### - PendingFileRenameOperations\n### - ErrorMsg",
    "common_parameters": true
  },
  "Test-ADTServiceExists": {
    "name": "Test-ADTServiceExists",
    "synopsis": "Check to see if a service exists.",
    "description": "Check to see if a service exists.\nThe UseCIM switch can be used in conjunction with PassThru to return WMI objects for PSADT v3.x compatibility, however, this method fails in Windows Sandbox.",
    "parameters": {
      "Name": {
        "name": "Name",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specify the name of the service.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "UseCIM": {
        "name": "UseCIM",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Use CIM/WMI to check for the service.\nThis is useful for compatibility with PSADT v3.x.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "PassThru": {
        "name": "PassThru",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Return the WMI service object.\nTo see all the properties use: Test-ADTServiceExists -Name 'spooler' -PassThru | Get-Member",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "UseCIM",
          "PassThru",
          "Name"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Test-ADTServiceExists -Name 'wuauserv'",
        "description": "Checks if the service 'wuauserv' exists."
      },
      {
        "title": "Example 2",
        "code": "Test-ADTServiceExists -Name testservice -UseCIM -PassThru | Invoke-CimMethod -MethodName Delete",
        "description": "Checks if a service exists and then deletes it by using the -PassThru parameter."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Test-ADTServiceExists",
      "https://psappdeploytoolkit.com/docs/reference/functions/Test-ADTServiceExists"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.Boolean\n\n### Returns $true if the service exists, otherwise returns $false.",
    "common_parameters": true
  },
  "Get-ADTPresentationSettingsEnabledUsers": {
    "name": "Get-ADTPresentationSettingsEnabledUsers",
    "synopsis": "Tests whether any users have presentation mode enabled on their device.",
    "description": "Tests whether any users have presentation mode enabled on their device.\nThis can be enabled via the PC's Mobility Settings, or with PresentationSettings.exe.",
    "parameters": {},
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Get-ADTPresentationSettingsEnabledUsers",
        "description": "Checks whether any users users have presentation settings enabled on their device and returns an associated UserProfile object."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTPresentationSettingsEnabledUsers",
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTPresentationSettingsEnabledUsers"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### PSADT.Types.UserProfile\n\n### Returns one or more UserProfile objects of the users with presentation mode enabled on their device.",
    "common_parameters": true
  },
  "Write-ADTLogEntry": {
    "name": "Write-ADTLogEntry",
    "synopsis": "Write messages to a log file in CMTrace.exe compatible format or Legacy text file format.",
    "description": "Write messages to a log file in CMTrace.exe compatible format or Legacy text file format and optionally display in the console.\nThis function supports different severity levels and can be used to log debug messages if required.",
    "parameters": {
      "Message": {
        "name": "Message",
        "type": "String[]",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The message to write to the log file or output to the console.",
        "aliases": [],
        "pipeline_input": true,
        "wildcard_characters": false
      },
      "Severity": {
        "name": "Severity",
        "type": "UInt32",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Defines message type.\nWhen writing to console or CMTrace.exe log format, it allows highlighting of message type.\nOptions: 0 = Success (highlighted in green), 1 = Information (default), 2 = Warning (highlighted in yellow), 3 = Error (highlighted in red)",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Source": {
        "name": "Source",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The source of the message being logged.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ScriptSection": {
        "name": "ScriptSection",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The heading for the portion of the script that is being executed.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "LogType": {
        "name": "LogType",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Choose whether to write a CMTrace.exe compatible log file or a Legacy text log file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "LogFileDirectory": {
        "name": "LogFileDirectory",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Set the directory where the log file will be saved.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "LogFileName": {
        "name": "LogFileName",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Set the name of the log file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "PassThru": {
        "name": "PassThru",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Return the message that was passed to the function.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "DebugMessage": {
        "name": "DebugMessage",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specifies that the message is a debug message.\nDebug messages only get logged if -LogDebugMessage is set to $true.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "ScriptSection",
          "Message",
          "Severity",
          "PassThru",
          "Source",
          "LogType",
          "LogFileDirectory",
          "LogFileName",
          "DebugMessage"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Write-ADTLogEntry -Message \"Installing patch MS15-031\" -Source 'Add-Patch'",
        "description": "Writes a log entry indicating that patch MS15-031 is being installed."
      },
      {
        "title": "Example 2",
        "code": "Write-ADTLogEntry -Message \"Script is running on Windows 11\" -Source 'Test-ValidOS'",
        "description": "Writes a log entry indicating that the script is running on Windows 11."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Write-ADTLogEntry",
      "https://psappdeploytoolkit.com/docs/reference/functions/Write-ADTLogEntry"
    ],
    "inputs": "### System.String\n\n### The message to write to the log file or output to the console.",
    "outputs": "### System.String[]\n\n### This function returns the provided output if -PassThru is specified.",
    "common_parameters": true
  },
  "Get-ADTIniValue": {
    "name": "Get-ADTIniValue",
    "synopsis": "Parses an INI file and returns the value of the specified section and key.",
    "description": "The Get-ADTIniValue function parses an INI file and returns the value of the specified section and key.\nThis function is useful for retrieving configuration settings stored in INI files.",
    "parameters": {
      "FilePath": {
        "name": "FilePath",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Path to the INI file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Section": {
        "name": "Section",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Section within the INI file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Key": {
        "name": "Key",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Key within the section of the INI file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "FilePath",
          "Section",
          "Key"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Get-ADTIniValue -FilePath \"$env:ProgramFilesX86\\IBM\\Notes\\notes.ini\" -Section 'Notes' -Key 'KeyFileName'",
        "description": "This example retrieves the value of the 'KeyFileName' key in the 'Notes' section of the specified INI file."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTIniValue",
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTIniValue"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.String\n\n### Returns the value of the specified section and key.",
    "common_parameters": true
  },
  "Get-ADTDeferHistory": {
    "name": "Get-ADTDeferHistory",
    "synopsis": "Get the history of deferrals in the registry for the current application.",
    "description": "Get the history of deferrals in the registry for the current application.",
    "parameters": {},
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [],
        "description": ""
      }
    },
    "examples": [],
    "notes": "An active ADT session is required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTDeferHistory",
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTDeferHistory"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return any objects.",
    "common_parameters": true
  },
  "Invoke-ADTFunctionErrorHandler": {
    "name": "Invoke-ADTFunctionErrorHandler",
    "synopsis": "Handles errors within ADT functions by logging and optionally passing through the error.",
    "description": "This function handles errors within ADT functions by logging the error message and optionally passing through the error record.\nIt recovers the true ErrorActionPreference set by the caller and sets it within the function.\nIf a log message is provided, it appends the resolved error record to the log message.\nDepending on the ErrorActionPreference, it either throws a terminating error or writes a non-terminating error.",
    "parameters": {
      "Cmdlet": {
        "name": "Cmdlet",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The cmdlet that is calling this function.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "SessionState": {
        "name": "SessionState",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The session state of the calling cmdlet.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ErrorRecord": {
        "name": "ErrorRecord",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The error record to handle.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "LogMessage": {
        "name": "LogMessage",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The error message to write to the active ADTSession's log file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ResolveErrorProperties": {
        "name": "ResolveErrorProperties",
        "type": "String[]",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "If specified, the specific ErrorRecord properties to print during resolution.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "AdditionalResolveErrorProperties": {
        "name": "AdditionalResolveErrorProperties",
        "type": "String[]",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "If specified, a list of additional ErrorRecord properties to print during resolution.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "DisableErrorResolving": {
        "name": "DisableErrorResolving",
        "type": "SwitchParameter",
        "mandatory": true,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "If specified, the function will not append the resolved error record to the log message.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "None": {
        "name": "None",
        "required_parameters": [
          "SessionState",
          "Cmdlet"
        ],
        "optional_parameters": [
          "LogMessage",
          "ErrorRecord"
        ],
        "description": ""
      },
      "ResolveErrorProperties": {
        "name": "ResolveErrorProperties",
        "required_parameters": [
          "SessionState",
          "Cmdlet"
        ],
        "optional_parameters": [
          "LogMessage",
          "ResolveErrorProperties",
          "ErrorRecord"
        ],
        "description": ""
      },
      "AdditionalResolveErrorProperties": {
        "name": "AdditionalResolveErrorProperties",
        "required_parameters": [
          "SessionState",
          "Cmdlet"
        ],
        "optional_parameters": [
          "AdditionalResolveErrorProperties",
          "LogMessage",
          "ErrorRecord"
        ],
        "description": ""
      },
      "DisableErrorResolving": {
        "name": "DisableErrorResolving",
        "required_parameters": [
          "SessionState",
          "Cmdlet"
        ],
        "optional_parameters": [
          "LogMessage",
          "DisableErrorResolving",
          "ErrorRecord"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Invoke-ADTFunctionErrorHandler -Cmdlet $PSCmdlet -SessionState $ExecutionContext.SessionState -ErrorRecord $_",
        "description": "Handles the error within the calling cmdlet and logs it."
      },
      {
        "title": "Example 2",
        "code": "Invoke-ADTFunctionErrorHandler -Cmdlet $PSCmdlet -SessionState $ExecutionContext.SessionState -ErrorRecord $_ -LogMessage \"An error occurred\" -DisableErrorResolving",
        "description": "Handles the error within the calling cmdlet, logs a custom message without resolving the error record, and logs it."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Invoke-ADTFunctionErrorHandler",
      "https://psappdeploytoolkit.com/docs/reference/functions/Invoke-ADTFunctionErrorHandler"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return any output.",
    "common_parameters": true
  },
  "Get-ADTShortcut": {
    "name": "Get-ADTShortcut",
    "synopsis": "Get information from a .lnk or .url type shortcut.",
    "description": "Get information from a .lnk or .url type shortcut.\nReturns a hashtable with details about the shortcut such as TargetPath, Arguments, Description, and more.",
    "parameters": {
      "Path": {
        "name": "Path",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Path to the shortcut to get information from.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "Path"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Get-ADTShortcut -Path \"$envProgramData\\Microsoft\\Windows\\Start Menu\\My Shortcut.lnk\"",
        "description": "Retrieves information from the specified .lnk shortcut."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nUrl shortcuts only support TargetPath, IconLocation, and IconIndex.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTShortcut",
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTShortcut"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.Collections.Hashtable\n\n### Returns a hashtable with the following keys:\n### - TargetPath\n### - Arguments\n### - Description\n### - WorkingDirectory\n### - WindowStyle\n### - Hotkey\n### - IconLocation\n### - IconIndex\n### - RunAsAdmin",
    "common_parameters": true
  },
  "Convert-ADTRegistryPath": {
    "name": "Convert-ADTRegistryPath",
    "synopsis": "Converts the specified registry key path to a format that is compatible with built-in PowerShell cmdlets.",
    "description": "Converts the specified registry key path to a format that is compatible with built-in PowerShell cmdlets.\n\nConverts registry key hives to their full paths.\nExample: HKLM is converted to \"Microsoft.PowerShell.Core\\Registry::HKEY_LOCAL_MACHINE\".",
    "parameters": {
      "Key": {
        "name": "Key",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Path to the registry key to convert (can be a registry hive or fully qualified path)",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "SID": {
        "name": "SID",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The security identifier (SID) for a user.\nSpecifying this parameter will convert a HKEY_CURRENT_USER registry key to the HKEY_USERS\\$SID format.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Wow6432Node": {
        "name": "Wow6432Node",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specifies that the 32-bit registry view (Wow6432Node) should be used on a 64-bit system.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "SID",
          "Key",
          "Wow6432Node"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Convert-ADTRegistryPath -Key 'HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\{1AD147D0-BE0E-3D6C-AC11-64F6DC4163F1}'",
        "description": "Converts the specified registry key path to a format compatible with PowerShell cmdlets."
      },
      {
        "title": "Example 2",
        "code": "Convert-ADTRegistryPath -Key 'HKLM:SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\{1AD147D0-BE0E-3D6C-AC11-64F6DC4163F1}'",
        "description": "Converts the specified registry key path to a format compatible with PowerShell cmdlets."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Convert-ADTRegistryPath",
      "https://psappdeploytoolkit.com/docs/reference/functions/Convert-ADTRegistryPath"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.String\n\n### Returns the converted registry key path.",
    "common_parameters": true
  },
  "Test-ADTPowerPoint": {
    "name": "Test-ADTPowerPoint",
    "synopsis": "Tests whether PowerPoint is running in either fullscreen slideshow mode or presentation mode.",
    "description": "Tests whether someone is presenting using PowerPoint in either fullscreen slideshow mode or presentation mode.\nThis function checks if the PowerPoint process has a window with a title that begins with \"PowerPoint Slide Show\" or \"PowerPoint-\" for non-English language systems.\nThere is a possibility of a false positive if the PowerPoint filename starts with \"PowerPoint Slide Show\".\nIf the previous detection method does not detect PowerPoint in fullscreen mode, it checks if PowerPoint is in Presentation Mode (only works on Windows Vista or higher).",
    "parameters": {},
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Test-ADTPowerPoint",
        "description": "Checks if PowerPoint is running in either fullscreen slideshow mode or presentation mode and returns true or false."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nThis function can only execute detection logic if the process is in interactive mode.\n\nThere is a possibility of a false positive if the PowerPoint filename starts with \"PowerPoint Slide Show\".\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Test-ADTPowerPoint",
      "https://psappdeploytoolkit.com/docs/reference/functions/Test-ADTPowerPoint"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.Boolean\n\n### Returns $true if PowerPoint is running in either fullscreen slideshow mode or presentation mode, otherwise returns $false.",
    "common_parameters": true
  },
  "Set-ADTItemPermission": {
    "name": "Set-ADTItemPermission",
    "synopsis": "Allows you to easily change permissions on files or folders.",
    "description": "Allows you to easily change permissions on files or folders for a given user or group.\nYou can add, remove or replace permissions, set inheritance and propagation.",
    "parameters": {
      "Path": {
        "name": "Path",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Path to the folder or file you want to modify (ex: C:\\Temp)",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "User": {
        "name": "User",
        "type": "String[]",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "One or more user names (ex: BUILTIN\\Users, DOMAIN\\Admin) to give the permissions to.\nIf you want to use SID, prefix it with an asterisk * (ex: *S-1-5-18)",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Permission": {
        "name": "Permission",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [
          "ListDirectory",
          "ReadData",
          "WriteData",
          "CreateFiles",
          "CreateDirectories",
          "AppendData",
          "ReadExtendedAttributes",
          "WriteExtendedAttributes",
          "Traverse",
          "ExecuteFile",
          "DeleteSubdirectoriesAndFiles",
          "ReadAttributes",
          "WriteAttributes",
          "Write",
          "Delete",
          "ReadPermissions",
          "Read",
          "ReadAndExecute",
          "Modify",
          "ChangePermissions",
          "TakeOwnership",
          "Synchronize",
          "FullControl"
        ],
        "description": "Permission or list of permissions to be set/added/removed/replaced.\nPermission DeleteSubdirectoriesAndFiles does not apply to files.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "PermissionType": {
        "name": "PermissionType",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "Allow",
        "valid_values": [
          "Allow",
          "Deny"
        ],
        "description": "Sets Access Control Type of the permissions.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Inheritance": {
        "name": "Inheritance",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [
          "None",
          "ContainerInherit",
          "ObjectInherit"
        ],
        "description": "Sets permission inheritance.\nDoes not apply to files.\nMultiple options can be specified.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Propagation": {
        "name": "Propagation",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [
          "None",
          "NoPropagateInherit",
          "InheritOnly"
        ],
        "description": "Sets how to propagate inheritance.\nDoes not apply to files.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Method": {
        "name": "Method",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "AddAccessRule",
        "valid_values": [],
        "description": "Specifies which method will be used to apply the permissions.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "EnableInheritance": {
        "name": "EnableInheritance",
        "type": "SwitchParameter",
        "mandatory": true,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Enables inheritance on the files/folders.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "EnableInheritance": {
        "name": "EnableInheritance",
        "required_parameters": [],
        "optional_parameters": [
          "Path",
          "EnableInheritance"
        ],
        "description": ""
      },
      "DisableInheritance": {
        "name": "DisableInheritance",
        "required_parameters": [],
        "optional_parameters": [
          "Path",
          "User",
          "Permission",
          "PermissionType",
          "Method",
          "Inheritance",
          "Propagation"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Set-ADTItemPermission -Path 'C:\\Temp' -User 'DOMAIN\\John', 'BUILTIN\\Users' -Permission FullControl -Inheritance ObjectInherit,ContainerInherit",
        "description": "Will grant FullControl permissions to 'John' and 'Users' on 'C:\\Temp' and its files and folders children."
      },
      {
        "title": "Example 2",
        "code": "Set-ADTItemPermission -Path 'C:\\Temp\\pic.png' -User 'DOMAIN\\John' -Permission 'Read'",
        "description": "Will grant Read permissions to 'John' on 'C:\\Temp\\pic.png'."
      },
      {
        "title": "Example 3",
        "code": "Set-ADTItemPermission -Path 'C:\\Temp\\Private' -User 'DOMAIN\\John' -Permission 'None' -Method 'RemoveAll'",
        "description": "Will remove all permissions to 'John' on 'C:\\Temp\\Private'."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nOriginal Author: Julian DA CUNHA - dacunha.julian@gmail.com, used with permission.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Set-ADTItemPermission",
      "https://psappdeploytoolkit.com/docs/reference/functions/Set-ADTItemPermission"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return any output.",
    "common_parameters": true
  },
  "New-ADTErrorRecord": {
    "name": "New-ADTErrorRecord",
    "synopsis": "Creates a new ErrorRecord object.",
    "description": "This function creates a new ErrorRecord object with the specified exception, error category, and optional parameters.\nIt allows for detailed error information to be captured and returned to the caller, who can then throw the error.",
    "parameters": {
      "Exception": {
        "name": "Exception",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The exception object that caused the error.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Category": {
        "name": "Category",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [
          "NotSpecified",
          "OpenError",
          "CloseError",
          "DeviceError",
          "DeadlockDetected",
          "InvalidArgument",
          "InvalidData",
          "InvalidOperation",
          "InvalidResult",
          "InvalidType",
          "MetadataError",
          "NotImplemented",
          "NotInstalled",
          "ObjectNotFound",
          "OperationStopped",
          "OperationTimeout",
          "SyntaxError",
          "ParserError",
          "PermissionDenied",
          "ResourceBusy",
          "ResourceExists",
          "ResourceUnavailable",
          "ReadError",
          "WriteError",
          "FromStdErr",
          "SecurityError",
          "ProtocolError",
          "ConnectionError",
          "AuthenticationError",
          "LimitsExceeded",
          "QuotaExceeded",
          "NotEnabled"
        ],
        "description": "The category of the error.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ErrorId": {
        "name": "ErrorId",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "NotSpecified",
        "valid_values": [],
        "description": "The identifier for the error.\nDefault is 'NotSpecified'.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "TargetObject": {
        "name": "TargetObject",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The target object that the error is related to.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "TargetName": {
        "name": "TargetName",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The name of the target that the error is related to.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "TargetType": {
        "name": "TargetType",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The type of the target that the error is related to.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Activity": {
        "name": "Activity",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The activity that was being performed when the error occurred.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Reason": {
        "name": "Reason",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The reason for the error.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "RecommendedAction": {
        "name": "RecommendedAction",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The recommended action to resolve the error.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "TargetObject",
          "ErrorId",
          "Reason",
          "Category",
          "TargetType",
          "Exception",
          "RecommendedAction",
          "Activity",
          "TargetName"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "$exception = [System.Exception]::new(\"An error occurred.\")\n$category = [System.Management.Automation.ErrorCategory]::NotSpecified\nNew-ADTErrorRecord -Exception $exception -Category $category -ErrorId \"CustomErrorId\" -TargetObject $null -TargetName \"TargetName\" -TargetType \"TargetType\" -Activity \"Activity\" -Reason \"Reason\" -RecommendedAction \"RecommendedAction\"",
        "description": "Creates a new ErrorRecord object with the specified parameters."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/New-ADTErrorRecord",
      "https://psappdeploytoolkit.com/docs/reference/functions/New-ADTErrorRecord"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.Management.Automation.ErrorRecord\n\n### This function returns an ErrorRecord object.",
    "common_parameters": true
  },
  "Add-ADTSessionFinishingCallback": {
    "name": "Add-ADTSessionFinishingCallback",
    "synopsis": "Adds a callback to be executed when the ADT session is finishing.",
    "description": "The Add-ADTSessionFinishingCallback function registers a callback command to be executed when the ADT session is finishing.\nThis function sends the callback to the backend function for processing.",
    "parameters": {
      "Callback": {
        "name": "Callback",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The callback command(s) to be executed when the ADT session is finishing.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "Callback"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Add-ADTSessionFinishingCallback -Callback $myCallback",
        "description": "This example adds the specified callback to be executed when the ADT session is finishing."
      }
    ],
    "notes": "An active ADT session is required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Add-ADTSessionFinishingCallback",
      "https://psappdeploytoolkit.com/docs/reference/functions/Add-ADTSessionFinishingCallback"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return any output.",
    "common_parameters": true
  },
  "Remove-ADTSessionStartingCallback": {
    "name": "Remove-ADTSessionStartingCallback",
    "synopsis": "Removes a callback function from the ADT session starting event.",
    "description": "This function removes a specified callback function from the ADT session starting event.\nThe callback function must be provided as a parameter.\nIf the operation fails, it throws a terminating error.",
    "parameters": {
      "Callback": {
        "name": "Callback",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The callback function to remove from the ADT session starting event.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "Callback"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Remove-ADTSessionStartingCallback -Callback (Get-Command -Name 'MyCallbackFunction')",
        "description": "Removes the specified callback function from the ADT session starting event."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Remove-ADTSessionStartingCallback",
      "https://psappdeploytoolkit.com/docs/reference/functions/Remove-ADTSessionStartingCallback"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not generate any output.",
    "common_parameters": true
  },
  "Get-ADTEnvironmentTable": {
    "name": "Get-ADTEnvironmentTable",
    "synopsis": "Retrieves the environment data for the ADT module.",
    "description": "The Get-ADTEnvironmentTable function retrieves the environment data for the ADT module.\nThis function ensures that the ADT module has been initialized before attempting to retrieve the environment data.\nIf the module is not initialized, it throws an error.",
    "parameters": {},
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "$environment = Get-ADTEnvironmentTable",
        "description": "This example retrieves the environment data for the ADT module and stores it in the $environment variable."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTEnvironmentTable",
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTEnvironmentTable"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.Collections.Specialized.OrderedDictionary\n\n### Returns the environment data as a read-only ordered dictionary.",
    "common_parameters": true
  },
  "Show-ADTInstallationWelcome": {
    "name": "Show-ADTInstallationWelcome",
    "synopsis": "Show a welcome dialog prompting the user with information about the deployment and actions to be performed before the deployment can begin.",
    "description": "The following prompts can be included in the welcome dialog:\n\n* Close the specified running applications, or optionally close the applications without showing a prompt (using the `-Silent` switch).\n* Defer the deployment a certain number of times, for a certain number of days or until a deadline is reached.\n* Countdown until applications are automatically closed.\n* Prevent users from launching the specified applications while the deployment is in progress.",
    "parameters": {
      "CloseProcesses": {
        "name": "CloseProcesses",
        "type": "ProcessObject[]",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Name of the process to stop (do not include the .exe).\nSpecify multiple processes separated by a comma.\nSpecify custom descriptions like this: @\\{ Name = 'winword'; Description = 'Microsoft Office Word'\\},@\\{ Name = 'excel'; Description = 'Microsoft Office Excel'\\}",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Silent": {
        "name": "Silent",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Stop processes without prompting the user.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "CloseProcessesCountdown": {
        "name": "CloseProcessesCountdown",
        "type": "UInt32",
        "mandatory": false,
        "position": null,
        "default_value": "0",
        "valid_values": [],
        "description": "Option to provide a countdown in seconds until the specified applications are automatically closed.\nThis only takes effect if deferral is not allowed or has expired.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ForceCloseProcessesCountdown": {
        "name": "ForceCloseProcessesCountdown",
        "type": "UInt32",
        "mandatory": false,
        "position": null,
        "default_value": "0",
        "valid_values": [],
        "description": "Option to provide a countdown in seconds until the specified applications are automatically closed regardless of whether deferral is allowed.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "PromptToSave": {
        "name": "PromptToSave",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specify whether to prompt to save working documents when the user chooses to close applications by selecting the \"Close Programs\" button.\nOption does not work in SYSTEM context unless toolkit launched with \"psexec.exe -s -i\" to run it as an interactive process under the SYSTEM account.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "PersistPrompt": {
        "name": "PersistPrompt",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specify whether to make the Show-ADTInstallationWelcome prompt persist in the center of the screen every couple of seconds, specified in the config.psd1.\nThe user will have no option but to respond to the prompt.\nThis only takes effect if deferral is not allowed or has expired.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "BlockExecution": {
        "name": "BlockExecution",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Option to prevent the user from launching processes/applications, specified in -CloseProcesses, during the deployment.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "AllowDefer": {
        "name": "AllowDefer",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Enables an optional defer button to allow the user to defer the deployment.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "AllowDeferCloseProcesses": {
        "name": "AllowDeferCloseProcesses",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Enables an optional defer button to allow the user to defer the deployment only if there are running applications that need to be closed.\nThis parameter automatically enables -AllowDefer",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "DeferTimes": {
        "name": "DeferTimes",
        "type": "UInt32",
        "mandatory": false,
        "position": null,
        "default_value": "0",
        "valid_values": [],
        "description": "Specify the number of times the deployment can be deferred.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "DeferDays": {
        "name": "DeferDays",
        "type": "UInt32",
        "mandatory": false,
        "position": null,
        "default_value": "0",
        "valid_values": [],
        "description": "Specify the number of days since first run that the deployment can be deferred.\nThis is converted to a deadline.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "DeferDeadline": {
        "name": "DeferDeadline",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specify the deadline date until which the deployment can be deferred.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "CheckDiskSpace": {
        "name": "CheckDiskSpace",
        "type": "SwitchParameter",
        "mandatory": true,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specify whether to check if there is enough disk space for the deployment to proceed.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "RequiredDiskSpace": {
        "name": "RequiredDiskSpace",
        "type": "UInt32",
        "mandatory": false,
        "position": null,
        "default_value": "0",
        "valid_values": [],
        "description": "Specify required disk space in MB, used in combination with CheckDiskSpace.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "NoMinimizeWindows": {
        "name": "NoMinimizeWindows",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specifies whether to minimize other windows when displaying prompt.\nDefault: $false.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "NotTopMost": {
        "name": "NotTopMost",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specifies whether the window is the topmost window.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ForceCountdown": {
        "name": "ForceCountdown",
        "type": "UInt32",
        "mandatory": false,
        "position": null,
        "default_value": "0",
        "valid_values": [],
        "description": "Specify a countdown to display before automatically proceeding with the deployment when a deferral is enabled.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "CustomText": {
        "name": "CustomText",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specify whether to display a custom message specified in the string.psd1 file.\nCustom message must be populated for each language section in the string.psd1 file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "DeploymentType": {
        "name": "DeploymentType",
        "type": "DeploymentType",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The deployment type.\nDefault: the session's DeploymentType value.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Subtitle": {
        "name": "Subtitle",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Subtitle of the prompt.\nDefault: the application deployment type.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Title": {
        "name": "Title",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Title of the prompt.\nDefault: the application deployment name.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "None": {
        "name": "None",
        "required_parameters": [
          "Title",
          "Subtitle"
        ],
        "optional_parameters": [
          "BlockExecution",
          "PersistPrompt",
          "DeferDays",
          "DeploymentType",
          "Silent",
          "DeferDeadline",
          "ForceCountdown",
          "DeferTimes",
          "NoMinimizeWindows",
          "CloseProcesses",
          "CustomText",
          "AllowDeferCloseProcesses",
          "ForceCloseProcessesCountdown",
          "NotTopMost",
          "PromptToSave",
          "CloseProcessesCountdown",
          "AllowDefer"
        ],
        "description": ""
      },
      "CheckDiskSpace": {
        "name": "CheckDiskSpace",
        "required_parameters": [
          "Title",
          "Subtitle"
        ],
        "optional_parameters": [
          "DeploymentType",
          "NoMinimizeWindows",
          "PersistPrompt",
          "ForceCountdown",
          "NotTopMost",
          "DeferDeadline",
          "CheckDiskSpace",
          "CloseProcesses",
          "AllowDeferCloseProcesses",
          "PromptToSave",
          "CloseProcessesCountdown",
          "AllowDefer",
          "BlockExecution",
          "RequiredDiskSpace",
          "DeferDays",
          "Silent",
          "DeferTimes",
          "CustomText",
          "ForceCloseProcessesCountdown"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Show-ADTInstallationWelcome -CloseProcesses iexplore, winword, excel",
        "description": "Prompt the user to close Internet Explorer, Word and Excel."
      },
      {
        "title": "Example 2",
        "code": "Show-ADTInstallationWelcome -CloseProcesses @{ Name = 'winword' }, @{ Name = 'excel' } -Silent",
        "description": "Close Word and Excel without prompting the user."
      },
      {
        "title": "Example 3",
        "code": "Show-ADTInstallationWelcome -CloseProcesses @{ Name = 'winword' }, @{ Name = 'excel' } -BlockExecution",
        "description": "Close Word and Excel and prevent the user from launching the applications while the deployment is in progress."
      },
      {
        "title": "Example 4",
        "code": "Show-ADTInstallationWelcome -CloseProcesses @{ Name = 'winword'; Description = 'Microsoft Office Word' }, @{ Name = 'excel'; Description = 'Microsoft Office Excel' } -CloseProcessesCountdown 600",
        "description": "Prompt the user to close Word and Excel, with customized descriptions for the applications and automatically close the applications after 10 minutes."
      },
      {
        "title": "Example 5",
        "code": "Show-ADTInstallationWelcome -CloseProcesses @{ Name = 'winword' }, @{ Name = 'msaccess' }, @{ Name = 'excel' } -PersistPrompt",
        "description": "Prompt the user to close Word, MSAccess and Excel.\nBy using the PersistPrompt switch, the dialog will return to the center of the screen every couple of seconds, specified in the config.psd1, so the user cannot ignore it by dragging it aside."
      },
      {
        "title": "Example 6",
        "code": "Show-ADTInstallationWelcome -AllowDefer -DeferDeadline '25/08/2013'",
        "description": "Allow the user to defer the deployment until the deadline is reached."
      },
      {
        "title": "Example 7",
        "code": "Show-ADTInstallationWelcome -CloseProcesses @{ Name = 'winword' }, @{ Name = 'excel' } -BlockExecution -AllowDefer -DeferTimes 10 -DeferDeadline '25/08/2013' -CloseProcessesCountdown 600\nClose Word and Excel and prevent the user from launching the applications while the deployment is in progress.",
        "description": "Allow the user to defer the deployment a maximum of 10 times or until the deadline is reached, whichever happens first.\n\nWhen deferral expires, prompt the user to close the applications and automatically close them after 10 minutes."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nThe process descriptions are retrieved via Get-Process, with a fall back on the process name if no description is available.\nAlternatively, you can specify the description yourself with a '=' symbol - see examples.\n\nThe dialog box will timeout after the timeout specified in the config.psd1 file (default 55 minutes) to prevent Intune/SCCM deployments from timing out and returning a failure code.\nWhen the dialog times out, the script will exit and return a 1618 code (SCCM fast retry code).\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Show-ADTInstallationWelcome",
      "https://psappdeploytoolkit.com/docs/reference/functions/Show-ADTInstallationWelcome"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return any output.",
    "common_parameters": true
  },
  "Initialize-ADTModule": {
    "name": "Initialize-ADTModule",
    "synopsis": "Initializes the ADT module by setting up necessary configurations and environment.",
    "description": "The Initialize-ADTModule function sets up the environment for the ADT module by initializing necessary variables, configurations, and string tables.\nIt ensures that the module is not initialized while there is an active ADT session in progress.\nThis function prepares the module for use by clearing callbacks, sessions, and setting up the environment table.",
    "parameters": {
      "ScriptDirectory": {
        "name": "ScriptDirectory",
        "type": "String[]",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "An override directory to use for config and string loading.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "ScriptDirectory"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Initialize-ADTModule",
        "description": "Initializes the ADT module with the default settings and configurations."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Initialize-ADTModule",
      "https://psappdeploytoolkit.com/docs/reference/functions/Initialize-ADTModule"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return any output.",
    "common_parameters": true
  },
  "Install-ADTSCCMSoftwareUpdates": {
    "name": "Install-ADTSCCMSoftwareUpdates",
    "synopsis": "Scans for outstanding SCCM updates to be installed and installs the pending updates.",
    "description": "Scans for outstanding SCCM updates to be installed and installs the pending updates.\n\nOnly compatible with SCCM 2012 Client or higher.\nThis function can take several minutes to run.",
    "parameters": {
      "SoftwareUpdatesScanWaitInSeconds": {
        "name": "SoftwareUpdatesScanWaitInSeconds",
        "type": "Int32",
        "mandatory": false,
        "position": null,
        "default_value": "180",
        "valid_values": [],
        "description": "The amount of time to wait in seconds for the software updates scan to complete.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "WaitForPendingUpdatesTimeout": {
        "name": "WaitForPendingUpdatesTimeout",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "[System.TimeSpan]::FromMinutes(45)",
        "valid_values": [],
        "description": "The amount of time to wait for missing and pending updates to install before exiting the function.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "SoftwareUpdatesScanWaitInSeconds",
          "WaitForPendingUpdatesTimeout"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Install-ADTSCCMSoftwareUpdates",
        "description": "Scans for outstanding SCCM updates and installs the pending updates with default wait times."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Install-ADTSCCMSoftwareUpdates",
      "https://psappdeploytoolkit.com/docs/reference/functions/Install-ADTSCCMSoftwareUpdates"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return any objects.",
    "common_parameters": true
  },
  "Test-ADTNetworkConnection": {
    "name": "Test-ADTNetworkConnection",
    "synopsis": "Tests for an active local network connection, excluding wireless and virtual network adapters.",
    "description": "Tests for an active local network connection, excluding wireless and virtual network adapters, by querying the Win32_NetworkAdapter WMI class.\nThis function checks if any physical network adapter is in the 'Up' status.",
    "parameters": {},
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Test-ADTNetworkConnection",
        "description": "Checks if there is an active wired network connection and returns true or false."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Test-ADTNetworkConnection",
      "https://psappdeploytoolkit.com/docs/reference/functions/Test-ADTNetworkConnection"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.Boolean\n\n### Returns $true if a wired network connection is detected, otherwise returns $false.",
    "common_parameters": true
  },
  "Get-ADTPowerShellProcessPath": {
    "name": "Get-ADTPowerShellProcessPath",
    "synopsis": "Retrieves the path to the PowerShell executable.",
    "description": "The Get-ADTPowerShellProcessPath function returns the path to the PowerShell executable.\nIt determines whether the current PowerShell session is running in Windows PowerShell or PowerShell Core and returns the appropriate executable path.",
    "parameters": {},
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Get-ADTPowerShellProcessPath",
        "description": "This example retrieves the path to the PowerShell executable for the current session."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTPowerShellProcessPath",
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTPowerShellProcessPath"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.String\n\n### Returns the path to the PowerShell executable as a string.",
    "common_parameters": true
  },
  "Show-ADTBalloonTip": {
    "name": "Show-ADTBalloonTip",
    "synopsis": "Displays a balloon tip notification in the system tray.",
    "description": "Displays a balloon tip notification in the system tray.\nThis function can be used to show notifications to the user with customizable text, title, icon, and display duration.\n\nFor Windows 10 and above, balloon tips automatically get translated by the system into toast notifications.",
    "parameters": {
      "BalloonTipText": {
        "name": "BalloonTipText",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Text of the balloon tip.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "BalloonTipIcon": {
        "name": "BalloonTipIcon",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "Info",
        "valid_values": [
          "None",
          "Info",
          "Warning",
          "Error"
        ],
        "description": "Icon to be used.\nOptions: 'Error', 'Info', 'None', 'Warning'.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "BalloonTipTime": {
        "name": "BalloonTipTime",
        "type": "UInt32",
        "mandatory": false,
        "position": null,
        "default_value": "10000",
        "valid_values": [],
        "description": "Time in milliseconds to display the balloon tip.\nDefault: 10000.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "BalloonTipTitle": {
        "name": "BalloonTipTitle",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Title of the balloon tip.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "BalloonTipIcon",
          "BalloonTipText",
          "BalloonTipTime",
          "BalloonTipTitle"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Show-ADTBalloonTip -BalloonTipText 'Installation Started' -BalloonTipTitle 'Application Name'",
        "description": "Displays a balloon tip with the text 'Installation Started' and the title 'Application Name'."
      },
      {
        "title": "Example 2",
        "code": "Show-ADTBalloonTip -BalloonTipIcon 'Info' -BalloonTipText 'Installation Started' -BalloonTipTitle 'Application Name' -BalloonTipTime 1000",
        "description": "Displays a balloon tip with the info icon, the text 'Installation Started', the title 'Application Name', and a display duration of 1000 milliseconds."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Show-ADTBalloonTip",
      "https://psappdeploytoolkit.com/docs/reference/functions/Show-ADTBalloonTip"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return any output.",
    "common_parameters": true
  },
  "Test-ADTBattery": {
    "name": "Test-ADTBattery",
    "synopsis": "Tests whether the local machine is running on AC power or not.",
    "description": "Tests whether the local machine is running on AC power and returns true/false.\nFor detailed information, use the -PassThru option to get a hashtable containing various battery and power status properties.",
    "parameters": {
      "PassThru": {
        "name": "PassThru",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Outputs an object containing the following properties:",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "PassThru"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Test-ADTBattery",
        "description": "Checks if the local machine is running on AC power and returns true or false."
      },
      {
        "title": "Example 2",
        "code": "(Test-ADTBattery -PassThru).IsLaptop",
        "description": "Returns true if the current system is a laptop, otherwise false."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Test-ADTBattery",
      "https://psappdeploytoolkit.com/docs/reference/functions/Test-ADTBattery"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### PSADT.Types.BatteryInfo\n\n### Returns an object containing the following properties:\n### - IsLaptop\n### - IsUsingACPower\n### - ACPowerLineStatus\n### - BatteryChargeStatus\n### - BatteryLifePercent\n### - BatteryLifeRemaining\n### - BatteryFullLifetime",
    "common_parameters": true
  },
  "New-ADTTemplate": {
    "name": "New-ADTTemplate",
    "synopsis": "Creates a new folder containing a template front end and module folder, ready to customise.",
    "description": "Specify a destination path where a new folder will be created.\nYou also have the option of creating a template for v3 compatibility mode.",
    "parameters": {
      "Destination": {
        "name": "Destination",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "$ExecutionContext.SessionState.Path.CurrentLocation.Path",
        "valid_values": [],
        "description": "Path where the new folder should be created.\nDefault is the current working directory.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Name": {
        "name": "Name",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "PSAppDeployToolkit_<ModuleVersion>",
        "valid_values": [],
        "description": "Name of the newly created folder.\nDefault is PSAppDeployToolkit_Version.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Version": {
        "name": "Version",
        "type": "Int32",
        "mandatory": false,
        "position": null,
        "default_value": "4",
        "valid_values": [],
        "description": "Defaults to 4 for the standard v4 template.\nUse 3 for the v3 compatibility mode template.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Show": {
        "name": "Show",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Opens the newly created folder in Windows Explorer.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Force": {
        "name": "Force",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "If the destination folder already exists, this switch will force the creation of the new folder.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "PassThru": {
        "name": "PassThru",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Returns the newly created folder object.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "Version",
          "Show",
          "PassThru",
          "Name",
          "Force",
          "Destination"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "New-ADTTemplate -Destination 'C:\\Temp' -Name 'PSAppDeployToolkitv4'",
        "description": "Creates a new v4 template named PSAppDeployToolkitv4 under C:\\Temp."
      },
      {
        "title": "Example 2",
        "code": "New-ADTTemplate -Destination 'C:\\Temp' -Name 'PSAppDeployToolkitv3' -Version 3",
        "description": "Creates a new v3 compatibility mode template named PSAppDeployToolkitv3 under C:\\Temp."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/New-ADTTemplate",
      "https://psappdeploytoolkit.com/docs/reference/functions/New-ADTTemplate"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not generate any output.",
    "common_parameters": true
  },
  "Unblock-ADTAppExecution": {
    "name": "Unblock-ADTAppExecution",
    "synopsis": "Unblocks the execution of applications performed by the Block-ADTAppExecution function.",
    "description": "This function is called by the Close-ADTSession function.\nIt undoes the actions performed by Block-ADTAppExecution, allowing previously blocked applications to execute.",
    "parameters": {
      "Tasks": {
        "name": "Tasks",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "All scheduled tasks wildcard matching [PSAppDeployToolkit_*_BlockedApps].",
        "valid_values": [],
        "description": "Specify the scheduled tasks to unblock.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "Tasks"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Unblock-ADTAppExecution",
        "description": "Unblocks the execution of applications that were previously blocked by Block-ADTAppExecution."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nIt is used when the -BlockExecution parameter is specified with the Show-ADTInstallationWelcome function to undo the actions performed by Block-ADTAppExecution.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Unblock-ADTAppExecution",
      "https://psappdeploytoolkit.com/docs/reference/functions/Unblock-ADTAppExecution"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not generate any output.",
    "common_parameters": true
  },
  "Remove-ADTInvalidFileNameChars": {
    "name": "Remove-ADTInvalidFileNameChars",
    "synopsis": "Remove invalid characters from the supplied string.",
    "description": "This function removes invalid characters from the supplied string and returns a valid filename as a string.\nIt ensures that the resulting string does not contain any characters that are not allowed in filenames.\nThis function should not be used for entire paths as '\\' is not a valid filename character.",
    "parameters": {
      "Name": {
        "name": "Name",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Text to remove invalid filename characters from.",
        "aliases": [],
        "pipeline_input": true,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "Name"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Remove-ADTInvalidFileNameChars -Name \"Filename/\\1\"",
        "description": "Removes invalid filename characters from the string \"Filename/\\1\"."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nThis function always returns a string; however, it can be empty if the name only contains invalid characters.\nDo not use this command for an entire path as '\\' is not a valid filename character.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Remove-ADTInvalidFileNameChars",
      "https://psappdeploytoolkit.com/docs/reference/functions/Remove-ADTInvalidFileNameChars"
    ],
    "inputs": "### System.String\n\n### A string containing invalid filename characters.",
    "outputs": "### System.String\n\n### Returns the input string with the invalid characters removed.",
    "common_parameters": true
  },
  "Get-ADTLoggedOnUser": {
    "name": "Get-ADTLoggedOnUser",
    "synopsis": "Retrieves session details for all local and RDP logged on users.",
    "description": "The Get-ADTLoggedOnUser function retrieves session details for all local and RDP logged on users using Win32 APIs.\nIt provides information such as NTAccount, SID, UserName, DomainName, SessionId, SessionName, ConnectState, IsCurrentSession, IsConsoleSession, IsUserSession, IsActiveUserSession, IsRdpSession, IsLocalAdmin, LogonTime, IdleTime, DisconnectTime, ClientName, ClientProtocolType, ClientDirectory, and ClientBuildNumber.",
    "parameters": {},
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Get-ADTLoggedOnUser",
        "description": "This example retrieves session details for all local and RDP logged on users."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nDescription of ConnectState property:\n\nValue        Description",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTLoggedOnUser",
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTLoggedOnUser"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### PSADT.Types.UserSessionInfo\n\n### Returns a custom type with information about user sessions:\n### - NTAccount\n### - SID\n### - UserName\n### - DomainName\n### - SessionId\n### - SessionName\n### - ConnectState\n### - IsCurrentSession\n### - IsConsoleSession\n### - IsUserSession\n### - IsActiveUserSession\n### - IsRdpSession\n### - IsLocalAdmin\n### - LogonTime\n### - IdleTime\n### - DisconnectTime\n### - ClientName\n### - ClientProtocolType\n### - ClientDirectory\n### - ClientBuildNumber",
    "common_parameters": true
  },
  "Set-ADTDeferHistory": {
    "name": "Set-ADTDeferHistory",
    "synopsis": "Set the history of deferrals in the registry for the current application.",
    "description": "Set the history of deferrals in the registry for the current application.",
    "parameters": {
      "DeferTimesRemaining": {
        "name": "DeferTimesRemaining",
        "type": "Int32",
        "mandatory": false,
        "position": null,
        "default_value": "0",
        "valid_values": [],
        "description": "Specify the number of deferrals remaining.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "DeferDeadline": {
        "name": "DeferDeadline",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specify the deadline for the deferral.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "DeferTimesRemaining",
          "DeferDeadline"
        ],
        "description": ""
      }
    },
    "examples": [],
    "notes": "An active ADT session is required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Set-ADTDeferHistory",
      "https://psappdeploytoolkit.com/docs/reference/functions/Set-ADTDeferHistory"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return any objects.",
    "common_parameters": true
  },
  "Get-ADTUserProfiles": {
    "name": "Get-ADTUserProfiles",
    "synopsis": "Get the User Profile Path, User Account SID, and the User Account Name for all users that log onto the machine and also the Default User.",
    "description": "Get the User Profile Path, User Account SID, and the User Account Name for all users that log onto the machine and also the Default User (which does not log on).\n\nPlease note that the NTAccount property may be empty for some user profiles but the SID and ProfilePath properties will always be populated.",
    "parameters": {
      "ExcludeNTAccount": {
        "name": "ExcludeNTAccount",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specify NT account names in DOMAIN\\username format to exclude from the list of user profiles.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "IncludeSystemProfiles": {
        "name": "IncludeSystemProfiles",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Include system profiles: SYSTEM, LOCAL SERVICE, NETWORK SERVICE.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "IncludeServiceProfiles": {
        "name": "IncludeServiceProfiles",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Include service (NT SERVICE) profiles.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "IncludeIISAppPoolProfiles": {
        "name": "IncludeIISAppPoolProfiles",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Include IIS AppPool profiles.\nExcluded by default as they don't parse well.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ExcludeDefaultUser": {
        "name": "ExcludeDefaultUser",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Exclude the Default User.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "LoadProfilePaths": {
        "name": "LoadProfilePaths",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Load additional profile paths for each user profile.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "ExcludeDefaultUser",
          "IncludeServiceProfiles",
          "ExcludeNTAccount",
          "IncludeSystemProfiles",
          "IncludeIISAppPoolProfiles",
          "LoadProfilePaths"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Get-ADTUserProfiles",
        "description": "Return the following properties for each user profile on the system: NTAccount, SID, ProfilePath."
      },
      {
        "title": "Example 2",
        "code": "Get-ADTUserProfiles -ExcludeNTAccount CONTOSO\\Robot,CONTOSO\\ntadmin",
        "description": "Return the following properties for each user profile on the system, except for 'Robot' and 'ntadmin': NTAccount, SID, ProfilePath."
      },
      {
        "title": "Example 3",
        "code": "[string[]]$ProfilePaths = Get-ADTUserProfiles | Select-Object -ExpandProperty ProfilePath",
        "description": "Return the user profile path for each user on the system.\nThis information can then be used to make modifications under the user profile on the filesystem."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTUserProfiles",
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTUserProfiles"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### PSADT.Types.UserProfile\n\n### Returns a PSADT.Types.UserProfile object with the following properties:\n### - NTAccount\n### - SID\n### - ProfilePath",
    "common_parameters": true
  },
  "Get-ADTSession": {
    "name": "Get-ADTSession",
    "synopsis": "Retrieves the most recent ADT session.",
    "description": "The Get-ADTSession function returns the most recent session from the ADT module data.\nIf no sessions are found, it throws an error indicating that an ADT session should be opened using Open-ADTSession before calling this function.",
    "parameters": {},
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Get-ADTSession",
        "description": "This example retrieves the most recent ADT session."
      }
    ],
    "notes": "An active ADT session is required to use this function.\n\nRequires: PSADT session should be initialized using Open-ADTSession\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTSession",
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTSession"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### ADTSession\n\n### Returns the most recent session object from the ADT module data.",
    "common_parameters": true
  },
  "Get-ADTEnvironment": {
    "name": "Get-ADTEnvironment",
    "synopsis": "Retrieves the environment data for the ADT module.\nThis function has been replaced by Get-ADTEnvironmentTable and will be removed from a future release.",
    "description": "The Get-ADTEnvironment function retrieves the environment data for the ADT module.\nThis function ensures that the ADT module has been initialized before attempting to retrieve the environment data.\nIf the module is not initialized, it throws an error.\n\nThis function has been replaced by Get-ADTEnvironmentTable and will be removed from a future release.",
    "parameters": {},
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "$environment = Get-ADTEnvironment",
        "description": "This example retrieves the environment data for the ADT module and stores it in the $environment variable."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTEnvironment",
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTEnvironment"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.Collections.Specialized.OrderedDictionary\n\n### Returns the environment data as a read-only ordered dictionary.",
    "common_parameters": true
  },
  "Invoke-ADTSCCMTask": {
    "name": "Invoke-ADTSCCMTask",
    "synopsis": "Triggers SCCM to invoke the requested schedule task ID.",
    "description": "Triggers SCCM to invoke the requested schedule task ID.\nThis function supports a variety of schedule IDs compatible with different versions of the SCCM client.\nIt ensures that the correct schedule IDs are used based on the SCCM client version.",
    "parameters": {
      "ScheduleID": {
        "name": "ScheduleID",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Name of the schedule id to trigger.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "ScheduleID"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Invoke-ADTSCCMTask -ScheduleId 'SoftwareUpdatesScan'",
        "description": "Triggers the 'SoftwareUpdatesScan' schedule task in SCCM."
      },
      {
        "title": "Example 2",
        "code": "Invoke-ADTSCCMTask -ScheduleId 'HardwareInventory'",
        "description": "Triggers the 'HardwareInventory' schedule task in SCCM."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Invoke-ADTSCCMTask",
      "https://psappdeploytoolkit.com/docs/reference/functions/Invoke-ADTSCCMTask"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return any objects.",
    "common_parameters": true
  },
  "Get-ADTConfig": {
    "name": "Get-ADTConfig",
    "synopsis": "Retrieves the configuration data for the ADT module.",
    "description": "The Get-ADTConfig function retrieves the configuration data for the ADT module.\nThis function ensures that the ADT module has been initialized before attempting to retrieve the configuration data.\nIf the module is not initialized, it throws an error.",
    "parameters": {},
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "$config = Get-ADTConfig",
        "description": "This example retrieves the configuration data for the ADT module and stores it in the $config variable."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTConfig",
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTConfig"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.Collections.Hashtable\n\n### Returns the configuration data as a hashtable.",
    "common_parameters": true
  },
  "Remove-ADTFileFromUserProfiles": {
    "name": "Remove-ADTFileFromUserProfiles",
    "synopsis": "Removes one or more items from each user profile on the system.",
    "description": "This function removes one or more items from each user profile on the system.\nIt can handle both wildcard paths and literal paths.\nIf the specified path does not exist, it logs a warning instead of throwing an error.\nThe function can also delete items recursively if the Recurse parameter is specified.\nAdditionally, it allows excluding specific NT accounts, system profiles, service profiles, and the default user profile.",
    "parameters": {
      "Path": {
        "name": "Path",
        "type": "String[]",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies the path to append to the root of the user profile to be resolved.\nThe value of Path will accept wildcards.\nWill accept an array of values.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "LiteralPath": {
        "name": "LiteralPath",
        "type": "String[]",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies the path to append to the root of the user profile to be resolved.\nThe value of LiteralPath is used exactly as it is typed; no characters are interpreted as wildcards.\nWill accept an array of values.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Recurse": {
        "name": "Recurse",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Deletes the files in the specified location(s) and in all child items of the location(s).",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ExcludeNTAccount": {
        "name": "ExcludeNTAccount",
        "type": "String[]",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specify NT account names in Domain\\Username format to exclude from the list of user profiles.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ExcludeDefaultUser": {
        "name": "ExcludeDefaultUser",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Exclude the Default User.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "IncludeSystemProfiles": {
        "name": "IncludeSystemProfiles",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Include system profiles: SYSTEM, LOCAL SERVICE, NETWORK SERVICE.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "IncludeServiceProfiles": {
        "name": "IncludeServiceProfiles",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Include service profiles where NTAccount begins with NT SERVICE.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Path": {
        "name": "Path",
        "required_parameters": [],
        "optional_parameters": [
          "Path",
          "IncludeSystemProfiles",
          "ExcludeNTAccount",
          "IncludeServiceProfiles",
          "ExcludeDefaultUser",
          "Recurse"
        ],
        "description": ""
      },
      "LiteralPath": {
        "name": "LiteralPath",
        "required_parameters": [],
        "optional_parameters": [
          "IncludeSystemProfiles",
          "ExcludeNTAccount",
          "LiteralPath",
          "IncludeServiceProfiles",
          "ExcludeDefaultUser",
          "Recurse"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Remove-ADTFileFromUserProfiles -Path \"AppData\\Roaming\\MyApp\\config.txt\"",
        "description": "Removes the specified file from each user profile on the system."
      },
      {
        "title": "Example 2",
        "code": "Remove-ADTFileFromUserProfiles -Path \"AppData\\Local\\MyApp\" -Recurse",
        "description": "Removes the specified folder and all its contents recursively from each user profile on the system."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Remove-ADTFileFromUserProfiles",
      "https://psappdeploytoolkit.com/docs/reference/functions/Remove-ADTFileFromUserProfiles"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not generate any output.",
    "common_parameters": true
  },
  "Initialize-ADTFunction": {
    "name": "Initialize-ADTFunction",
    "synopsis": "Initializes the ADT function environment.",
    "description": "Initializes the ADT function environment by setting up necessary variables and logging function start details.\nIt ensures that the function always stops on errors and handles verbose logging.",
    "parameters": {
      "Cmdlet": {
        "name": "Cmdlet",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The cmdlet that is being initialized.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "SessionState": {
        "name": "SessionState",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The session state of the cmdlet.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "SessionState",
          "Cmdlet"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Initialize-ADTFunction -Cmdlet $PSCmdlet",
        "description": "Initializes the ADT function environment for the given cmdlet."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Initialize-ADTFunction",
      "https://psappdeploytoolkit.com/docs/reference/functions/Initialize-ADTFunction"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return any output.",
    "common_parameters": true
  },
  "Complete-ADTFunction": {
    "name": "Complete-ADTFunction",
    "synopsis": "Completes the execution of an ADT function.",
    "description": "The Complete-ADTFunction function finalizes the execution of an ADT function by writing a debug log message and restoring the original global verbosity if it was archived off.",
    "parameters": {
      "Cmdlet": {
        "name": "Cmdlet",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The PSCmdlet object representing the cmdlet being completed.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "Cmdlet"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Complete-ADTFunction -Cmdlet $PSCmdlet",
        "description": "This example completes the execution of the current ADT function."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Complete-ADTFunction",
      "https://psappdeploytoolkit.com/docs/reference/functions/Complete-ADTFunction"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not generate any output.",
    "common_parameters": true
  },
  "Set-ADTPowerShellCulture": {
    "name": "Set-ADTPowerShellCulture",
    "synopsis": "Changes the current thread's Culture and UICulture to the specified culture.",
    "description": "This function changes the current thread's Culture and UICulture to the specified culture.",
    "parameters": {
      "CultureInfo": {
        "name": "CultureInfo",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The culture to set the current thread's Culture and UICulture to.\nCan be a CultureInfo object, or any valid IETF BCP 47 language tag.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "CultureInfo"
        ],
        "description": ""
      }
    },
    "examples": [],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Set-ADTPowerShellCulture",
      "https://psappdeploytoolkit.com/docs/reference/functions/Set-ADTPowerShellCulture"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not generate any output.",
    "common_parameters": true
  },
  "Convert-ADTValueType": {
    "name": "Convert-ADTValueType",
    "synopsis": "Casts the provided value to the requested type without range errors.",
    "description": "This function uses C# code to cast the provided value to the requested type.\nThis avoids errors from PowerShell when values exceed the casted value type's range.",
    "parameters": {
      "Value": {
        "name": "Value",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": "0",
        "valid_values": [],
        "description": "The value to convert.",
        "aliases": [],
        "pipeline_input": true,
        "wildcard_characters": false
      },
      "To": {
        "name": "To",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [
          "SByte",
          "Byte",
          "Short",
          "Int16",
          "UShort",
          "UInt16",
          "Int",
          "Int32",
          "UInt",
          "UInt32",
          "Long",
          "Int64",
          "ULong",
          "UInt64"
        ],
        "description": "What to cast the value to.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "To",
          "Value"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Convert-ADTValueType -Value 256 -To SByte",
        "description": "Invokes the Convert-ADTValueType function and returns the value as a byte, which would equal 0."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Convert-ADTValueType",
      "https://psappdeploytoolkit.com/docs/reference/functions/Convert-ADTValueType"
    ],
    "inputs": "### System.Int64\n\n### Convert-ADTValueType will accept any value type as a signed 64-bit integer, then cast to the requested type.",
    "outputs": "### System.ValueType\n\n### Convert-ADTValueType will convert the piped input to this type if specified by the caller.",
    "common_parameters": true
  },
  "Get-ADTMsiExitCodeMessage": {
    "name": "Get-ADTMsiExitCodeMessage",
    "synopsis": "Get message for MSI exit code.",
    "description": "Get message for MSI exit code by reading it from msimsg.dll.",
    "parameters": {
      "MsiExitCode": {
        "name": "MsiExitCode",
        "type": "UInt32",
        "mandatory": true,
        "position": null,
        "default_value": "0",
        "valid_values": [],
        "description": "MSI exit code.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "MsiExitCode"
        ],
        "description": ""
      }
    },
    "examples": [],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "http://msdn.microsoft.com/en-us/library/aa368542(v=vs.85",
      "http://msdn.microsoft.com/en-us/library/aa368542(v=vs.85",
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTMsiExitCodeMessage",
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTMsiExitCodeMessage"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.String\n\n### Returns the message for the MSI exit code.",
    "common_parameters": true
  },
  "Test-ADTMutexAvailability": {
    "name": "Test-ADTMutexAvailability",
    "synopsis": "Wait, up to a timeout value, to check if current thread is able to acquire an exclusive lock on a system mutex.",
    "description": "A mutex can be used to serialize applications and prevent multiple instances from being opened at the same time.\n\nWait, up to a timeout (default is 1 millisecond), for the mutex to become available for an exclusive lock.",
    "parameters": {
      "MutexName": {
        "name": "MutexName",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The name of the system mutex.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "MutexWaitTime": {
        "name": "MutexWaitTime",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "[System.TimeSpan]::FromMilliseconds(1)",
        "valid_values": [],
        "description": "The number of milliseconds the current thread should wait to acquire an exclusive lock of a named mutex.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "MutexName",
          "MutexWaitTime"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Test-ADTMutexAvailability -MutexName 'Global\\_MSIExecute' -MutexWaitTime 5000000",
        "description": "### EXAMPLE 2\n\n```powershell\nTest-ADTMutexAvailability -MutexName 'Global\\_MSIExecute' -MutexWaitTime (New-TimeSpan -Minutes 5)\n```"
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "http://msdn.microsoft.com/en-us/library/aa372909(VS.85",
      "http://msdn.microsoft.com/en-us/library/aa372909(VS.85",
      "https://psappdeploytoolkit.com/docs/reference/functions/Test-ADTMutexAvailability",
      "https://psappdeploytoolkit.com/docs/reference/functions/Test-ADTMutexAvailability"
    ],
    "inputs": "### None. You cannot pipe objects to this function.",
    "outputs": "### System.Boolean. Returns $true if the current thread acquires an exclusive lock on the named mutex, $false otherwise.",
    "common_parameters": true
  },
  "Get-ADTCommandTable": {
    "name": "Get-ADTCommandTable",
    "synopsis": "Returns PSAppDeployToolkit's safe command lookup table.",
    "description": "This function returns PSAppDeployToolkit's safe command lookup table, which can be used for command lookups within extending modules.\n\nPlease note that PSAppDeployToolkit's safe command table only has commands in it that are used within this module, and not necessarily all commands offered by PowerShell and its built-in modules out of the box.",
    "parameters": {},
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Get-ADTCommandTable",
        "description": "Returns PSAppDeployToolkit's safe command lookup table."
      }
    ],
    "notes": "An active ADT session is required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTCommandTable",
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTCommandTable"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.Collections.ObjectModel.ReadOnlyDictionary[System.String, System.Management.Automation.CommandInfo]\n\n### Returns PSAppDeployTookit's safe command lookup table as a ReadOnlyDictionary.",
    "common_parameters": true
  },
  "Copy-ADTContentToCache": {
    "name": "Copy-ADTContentToCache",
    "synopsis": "Copies the toolkit content to a cache folder on the local machine and sets the $adtSession.DirFiles and $adtSession.DirSupportFiles directory to the cache path.",
    "description": "Copies the toolkit content to a cache folder on the local machine and sets the $adtSession.DirFiles and $adtSession.DirSupportFiles directory to the cache path.\n\nThis function is useful in environments where an Endpoint Management solution does not provide a managed cache for source files, such as Intune.\n\nIt is important to clean up the cache in the uninstall section for the current version and potentially also in the pre-installation section for previous versions.",
    "parameters": {
      "Path": {
        "name": "Path",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "\"$((Get-ADTConfig).Toolkit.CachePath)\\\\$((Get-ADTSession).InstallName)\"",
        "valid_values": [],
        "description": "The path to the software cache folder.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "Path"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Copy-ADTContentToCache -Path \"$envWinDir\\Temp\\PSAppDeployToolkit\"",
        "description": "This example copies the toolkit content to the specified cache folder."
      }
    ],
    "notes": "An active ADT session is required to use this function.\n\nThis can be used in the absence of an Endpoint Management solution that provides a managed cache for source files, e.g.\nIntune is lacking this functionality whereas ConfigMgr includes this functionality.\n\nSince this cache folder is effectively unmanaged, it is important to cleanup the cache in the uninstall section for the current version and potentially also in the pre-installation section for previous versions.\n\nThis can be done using `Remove-ADTFile -Path \"(Get-ADTConfig).Toolkit.CachePath\\$($adtSession.InstallName)\" -Recurse -ErrorAction Ignore`.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Copy-ADTContentToCache",
      "https://psappdeploytoolkit.com/docs/reference/functions/Copy-ADTContentToCache"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not generate any output.",
    "common_parameters": true
  },
  "Block-ADTAppExecution": {
    "name": "Block-ADTAppExecution",
    "synopsis": "Block the execution of an application(s).",
    "description": "This function is called when you pass the -BlockExecution parameter to the Stop-RunningApplications function.\nIt does the following:\n\n1) Makes a copy of this script in a temporary directory on the local machine.\n2) Checks for an existing scheduled task from previous failed installation attempt where apps were blocked and if found, calls the Unblock-ADTAppExecution function to restore the original IFEO registry keys.\nThis is to prevent the function from overriding the backup of the original IFEO options.\n3) Creates a scheduled task to restore the IFEO registry key values in case the script is terminated uncleanly by calling `Unblock-ADTAppExecution` the local temporary copy of this module.\n4) Modifies the \"Image File Execution Options\" registry key for the specified process(s) to call `Show-ADTInstallationPrompt` with the appropriate messaging via this module.\n5) When the script is called with those parameters, it will display a custom message to the user to indicate that execution of the application has been blocked while the installation is in progress.\nThe text of this message can be customized in the strings.psd1 file.",
    "parameters": {
      "ProcessName": {
        "name": "ProcessName",
        "type": "String[]",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Name of the process or processes separated by commas.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "ProcessName"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Block-ADTAppExecution -ProcessName ('winword','excel')",
        "description": "This example blocks the execution of Microsoft Word and Excel."
      }
    ],
    "notes": "An active ADT session is required to use this function.\n\nIt is used when the -BlockExecution parameter is specified with the Show-ADTInstallationWelcome function to block applications.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Block-ADTAppExecution",
      "https://psappdeploytoolkit.com/docs/reference/functions/Block-ADTAppExecution"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not generate any output.",
    "common_parameters": true
  },
  "Close-ADTInstallationProgress": {
    "name": "Close-ADTInstallationProgress",
    "synopsis": "Closes the dialog created by Show-ADTInstallationProgress.",
    "description": "Closes the dialog created by Show-ADTInstallationProgress.\nThis function is called by the Close-ADTSession function to close a running instance of the progress dialog if found.",
    "parameters": {},
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Close-ADTInstallationProgress",
        "description": "This example closes the dialog created by Show-ADTInstallationProgress."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Close-ADTInstallationProgress",
      "https://psappdeploytoolkit.com/docs/reference/functions/Close-ADTInstallationProgress"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not generate any output.",
    "common_parameters": true
  },
  "Get-ADTUniversalDate": {
    "name": "Get-ADTUniversalDate",
    "synopsis": "Returns the date/time for the local culture in a universal sortable date time pattern.",
    "description": "Converts the current datetime or a datetime string for the current culture into a universal sortable date time pattern, e.g.\n2013-08-22 11:51:52Z.",
    "parameters": {
      "DateTime": {
        "name": "DateTime",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "[System.DateTime]::Now.ToString([System.Globalization.DateTimeFormatInfo]::CurrentInfo.UniversalSortableDateTimePattern).TrimEnd('Z')",
        "valid_values": [],
        "description": "Specify the DateTime in the current culture.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "DateTime"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Get-ADTUniversalDate",
        "description": "Returns the current date in a universal sortable date time pattern."
      },
      {
        "title": "Example 2",
        "code": "Get-ADTUniversalDate -DateTime '25/08/2013'",
        "description": "Returns the date for the current culture in a universal sortable date time pattern."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTUniversalDate",
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTUniversalDate"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.String\n\n### Returns the date/time for the local culture in a universal sortable date time pattern.",
    "common_parameters": true
  },
  "Start-ADTServiceAndDependencies": {
    "name": "Start-ADTServiceAndDependencies",
    "synopsis": "Start a Windows service and its dependencies.",
    "description": "This function starts a specified Windows service and its dependencies.\nIt provides options to skip starting dependent services, wait for a service to get out of a pending state, and return the service object.",
    "parameters": {
      "Name": {
        "name": "Name",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specify the name of the service.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "SkipDependentServices": {
        "name": "SkipDependentServices",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Choose to skip checking for and starting dependent services.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "PendingStatusWait": {
        "name": "PendingStatusWait",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The amount of time to wait for a service to get out of a pending state before continuing.\nDefault is 60 seconds.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "PassThru": {
        "name": "PassThru",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Return the System.ServiceProcess.ServiceController service object.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "PendingStatusWait",
          "PassThru",
          "SkipDependentServices",
          "Name"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Start-ADTServiceAndDependencies -Name 'wuauserv'",
        "description": "Starts the Windows Update service and its dependencies."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Start-ADTServiceAndDependencies",
      "https://psappdeploytoolkit.com/docs/reference/functions/Start-ADTServiceAndDependencies"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.ServiceProcess.ServiceController\n\n### Returns the service object.",
    "common_parameters": true
  },
  "Convert-ADTValuesFromRemainingArguments": {
    "name": "Convert-ADTValuesFromRemainingArguments",
    "synopsis": "Converts the collected values from a ValueFromRemainingArguments parameter value into a dictionary or PowerShell.exe command line arguments.",
    "description": "This function converts the collected values from a ValueFromRemainingArguments parameter value into a dictionary or PowerShell.exe command line arguments.",
    "parameters": {
      "RemainingArguments": {
        "name": "RemainingArguments",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The collected values to enumerate and process into a dictionary.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "RemainingArguments"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Convert-ADTValuesFromRemainingArguments -RemainingArguments $args",
        "description": "Converts an $args array into a $PSBoundParameters-compatible dictionary."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Convert-ADTValuesFromRemainingArguments",
      "https://psappdeploytoolkit.com/docs/reference/functions/Convert-ADTValuesFromRemainingArguments"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.Collections.Generic.Dictionary[System.String, System.Object]\n\n### Convert-ADTValuesFromRemainingArguments returns a dictionary of the processed input.",
    "common_parameters": true
  },
  "Close-ADTSession": {
    "name": "Close-ADTSession",
    "synopsis": "Closes the active ADT session.",
    "description": "The Close-ADTSession function closes the active ADT session, updates the session's exit code if provided, invokes all registered callbacks, and cleans up the session state.\nIf this is the last session, it flags the module as uninitialized and exits the process with the last exit code.",
    "parameters": {
      "ExitCode": {
        "name": "ExitCode",
        "type": "Int32",
        "mandatory": false,
        "position": null,
        "default_value": "0",
        "valid_values": [],
        "description": "The exit code to set for the session.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Force": {
        "name": "Force",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Forcibly exits PowerShell upon closing of the final session.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "Force",
          "ExitCode"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Close-ADTSession",
        "description": "This example closes the active ADT session without setting an exit code."
      },
      {
        "title": "Example 2",
        "code": "Close-ADTSession -ExitCode 0",
        "description": "This example closes the active ADT session and sets the exit code to 0."
      }
    ],
    "notes": "An active ADT session is required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Close-ADTSession",
      "https://psappdeploytoolkit.com/docs/reference/functions/Close-ADTSession"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not generate any output.",
    "common_parameters": true
  },
  "Test-ADTMicrophoneInUse": {
    "name": "Test-ADTMicrophoneInUse",
    "synopsis": "Tests whether the device's microphone is in use.",
    "description": "Tests whether someone is using the microphone on their device.\nThis could be within Teams, Zoom, a game, or any other app that uses a microphone.",
    "parameters": {},
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Test-ADTMicrophoneInUse",
        "description": "Checks if the microphone is in use and returns true or false."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Test-ADTMicrophoneInUse",
      "https://psappdeploytoolkit.com/docs/reference/functions/Test-ADTMicrophoneInUse"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.Boolean\n\n### Returns $true if the microphone is in use, otherwise returns $false.",
    "common_parameters": true
  },
  "Remove-ADTFolder": {
    "name": "Remove-ADTFolder",
    "synopsis": "Remove folder and files if they exist.",
    "description": "This function removes a folder and all files within it, with or without recursion, in a given path.\nIf the specified folder does not exist, it logs a warning instead of throwing an error.\nThe function can also delete items recursively if the DisableRecursion parameter is not specified.",
    "parameters": {
      "Path": {
        "name": "Path",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Path to the folder to remove.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "DisableRecursion": {
        "name": "DisableRecursion",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Disables recursion while deleting.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "DisableRecursion",
          "Path"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Remove-ADTFolder -Path \"$envWinDir\\Downloaded Program Files\"",
        "description": "Deletes all files and subfolders in the Windows\\Downloads Program Files folder."
      },
      {
        "title": "Example 2",
        "code": "Remove-ADTFolder -Path \"$envTemp\\MyAppCache\" -DisableRecursion",
        "description": "Deletes all files in the Temp\\MyAppCache folder but does not delete any subfolders."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Remove-ADTFolder",
      "https://psappdeploytoolkit.com/docs/reference/functions/Remove-ADTFolder"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not generate any output.",
    "common_parameters": true
  },
  "Invoke-ADTCommandWithRetries": {
    "name": "Invoke-ADTCommandWithRetries",
    "synopsis": "Drop-in replacement for any cmdlet/function where a retry is desirable due to transient issues.",
    "description": "This function invokes the specified cmdlet/function, accepting all of its parameters but retries an operation for the configured value before throwing.",
    "parameters": {
      "Command": {
        "name": "Command",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The name of the command to invoke.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Retries": {
        "name": "Retries",
        "type": "UInt32",
        "mandatory": false,
        "position": null,
        "default_value": "3",
        "valid_values": [],
        "description": "How many retries to perform before throwing.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "SleepSeconds": {
        "name": "SleepSeconds",
        "type": "UInt32",
        "mandatory": false,
        "position": null,
        "default_value": "5",
        "valid_values": [],
        "description": "How many seconds to sleep between retries.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Parameters": {
        "name": "Parameters",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "A 'ValueFromRemainingArguments' parameter to collect the parameters as would be passed to the provided Command.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "Retries",
          "SleepSeconds",
          "Command",
          "Parameters"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Invoke-ADTCommandWithRetries -Command Invoke-WebRequest -Uri https://aka.ms/getwinget -OutFile \"$($adtSession.DirSupportFiles)\\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.msixbundle\"",
        "description": "Downloads the latest WinGet installer to the SupportFiles directory."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Invoke-ADTCommandWithRetries",
      "https://psappdeploytoolkit.com/docs/reference/functions/Invoke-ADTCommandWithRetries"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.Object\n\n### Invoke-ADTCommandWithRetries returns the output of the invoked command.",
    "common_parameters": true
  },
  "Get-ADTStringTable": {
    "name": "Get-ADTStringTable",
    "synopsis": "Retrieves the string database from the ADT module.",
    "description": "The Get-ADTStringTable function returns the string database if it has been initialized.\nIf the string database is not initialized, it throws an error indicating that Initialize-ADTModule should be called before using this function.",
    "parameters": {},
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Get-ADTStringTable",
        "description": "This example retrieves the string database from the ADT module."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nRequires: The module should be initialized using Initialize-ADTModule\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTStringTable",
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTStringTable"
    ],
    "inputs": "### None\n\n### This function does not take any pipeline input.",
    "outputs": "### System.Collections.Hashtable\n\n### Returns a hashtable containing the string database.",
    "common_parameters": true
  },
  "Copy-ADTFileToUserProfiles": {
    "name": "Copy-ADTFileToUserProfiles",
    "synopsis": "Copy one or more items to each user profile on the system.",
    "description": "The Copy-ADTFileToUserProfiles function copies one or more items to each user profile on the system.\nIt supports various options such as recursion, flattening files, and using Robocopy to overcome the 260 character limit.",
    "parameters": {
      "Path": {
        "name": "Path",
        "type": "String[]",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The path of the file or folder to copy.",
        "aliases": [],
        "pipeline_input": true,
        "wildcard_characters": false
      },
      "Destination": {
        "name": "Destination",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The path of the destination folder to append to the root of the user profile.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "BasePath": {
        "name": "BasePath",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "Profile",
        "valid_values": [],
        "description": "The base path to append the destination folder to.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Recurse": {
        "name": "Recurse",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Copy files in subdirectories.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Flatten": {
        "name": "Flatten",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Flattens the files into the root destination directory.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "FileCopyMode": {
        "name": "FileCopyMode",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Select from 'Native' or 'Robocopy'.\nDefault is configured in config.psd1.\nNote that Robocopy supports * in file names, but not folders, in source paths.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "RobocopyParams": {
        "name": "RobocopyParams",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Override the default Robocopy parameters.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "RobocopyAdditionalParams": {
        "name": "RobocopyAdditionalParams",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Append to the default Robocopy parameters.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ExcludeNTAccount": {
        "name": "ExcludeNTAccount",
        "type": "String[]",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specify NT account names in Domain\\Username format to exclude from the list of user profiles.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "IncludeSystemProfiles": {
        "name": "IncludeSystemProfiles",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Include system profiles: SYSTEM, LOCAL SERVICE, NETWORK SERVICE.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "IncludeServiceProfiles": {
        "name": "IncludeServiceProfiles",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Include service profiles where NTAccount begins with NT SERVICE.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ExcludeDefaultUser": {
        "name": "ExcludeDefaultUser",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Exclude the Default User.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ContinueFileCopyOnError": {
        "name": "ContinueFileCopyOnError",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Continue copying files if an error is encountered.\nThis will continue the deployment script and will warn about files that failed to be copied.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "Path",
          "IncludeSystemProfiles",
          "RobocopyParams",
          "RobocopyAdditionalParams",
          "ExcludeNTAccount",
          "BasePath",
          "IncludeServiceProfiles",
          "ExcludeDefaultUser",
          "Recurse",
          "Flatten",
          "ContinueFileCopyOnError",
          "Destination",
          "FileCopyMode"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Copy-ADTFileToUserProfiles -Path \"$($adtSession.DirSupportFiles)\\config.txt\" -Destination \"AppData\\Roaming\\MyApp\"",
        "description": "Copy a single file to C:\\Users&lt;UserName&gt;\\AppData\\Roaming\\MyApp for each user."
      },
      {
        "title": "Example 2",
        "code": "Copy-ADTFileToUserProfiles -Path \"$($adtSession.DirSupportFiles)\\config.txt\",\"$($adtSession.DirSupportFiles)\\config2.txt\" -Destination \"AppData\\Roaming\\MyApp\"",
        "description": "Copy two files to C:\\Users&lt;UserName&gt;\\AppData\\Roaming\\MyApp for each user."
      },
      {
        "title": "Example 3",
        "code": "Copy-ADTFileToUserProfiles -Path \"$($adtSession.DirFiles)\\MyDocs\" Destination \"MyApp\" -BasePath \"Documents\" -Recurse",
        "description": "Copy an entire folder recursively to a new MyApp folder under each user's Documents folder."
      },
      {
        "title": "Example 4",
        "code": "Copy-ADTFileToUserProfiles -Path \"$($adtSession.DirFiles)\\.appConfigFolder\" -Recurse",
        "description": "Copy an entire folder to C:\\Users&lt;UserName&gt; for each user."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Copy-ADTFileToUserProfiles",
      "https://psappdeploytoolkit.com/docs/reference/functions/Copy-ADTFileToUserProfiles"
    ],
    "inputs": "### System.String[]\n\n### You can pipe in string values for $Path.",
    "outputs": "### None\n\n### This function does not generate any output.",
    "common_parameters": true
  },
  "Get-ADTRunAsActiveUser": {
    "name": "Get-ADTRunAsActiveUser",
    "synopsis": "Retrieves the active user session information.",
    "description": "The Get-ADTRunAsActiveUser function determines the account that will be used to execute commands in the user session when the toolkit is running under the SYSTEM account.\n\nThe active console user will be chosen first.\nIf no active console user is found, for multi-session operating systems, the first logged-on user will be used instead.",
    "parameters": {
      "UserSessionInfo": {
        "name": "UserSessionInfo",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "(Get-ADTLoggedOnUser)",
        "valid_values": [],
        "description": "An array of UserSessionInfo objects to enumerate through.\nIf not supplied, a fresh query will be performed.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "UserSessionInfo"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Get-ADTRunAsActiveUser",
        "description": "This example retrieves the active user session information."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTRunAsActiveUser",
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTRunAsActiveUser"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### PSADT.Types.UserSessionInfo\n\n### Returns a custom object containing the user session information.",
    "common_parameters": true
  },
  "Add-ADTSessionStartingCallback": {
    "name": "Add-ADTSessionStartingCallback",
    "synopsis": "Adds a callback to be executed when the ADT session is starting.",
    "description": "The Add-ADTSessionStartingCallback function registers a callback command to be executed when the ADT session is starting.\nThis function sends the callback to the backend function for processing.",
    "parameters": {
      "Callback": {
        "name": "Callback",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The callback command(s) to be executed when the ADT session is starting.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "Callback"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Add-ADTSessionStartingCallback -Callback $myCallback",
        "description": "This example adds the specified callback to be executed when the ADT session is starting."
      }
    ],
    "notes": "An active ADT session is required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Add-ADTSessionStartingCallback",
      "https://psappdeploytoolkit.com/docs/reference/functions/Add-ADTSessionStartingCallback"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return any output.",
    "common_parameters": true
  },
  "Update-ADTEnvironmentPsProvider": {
    "name": "Update-ADTEnvironmentPsProvider",
    "synopsis": "Updates the environment variables for the current PowerShell session with any environment variable changes that may have occurred during script execution.",
    "description": "Environment variable changes that take place during script execution are not visible to the current PowerShell session.\n\nUse this function to refresh the current PowerShell session with all environment variable settings.",
    "parameters": {
      "LoadLoggedOnUserEnvironmentVariables": {
        "name": "LoadLoggedOnUserEnvironmentVariables",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "If script is running in SYSTEM context, this option allows loading environment variables from the active console user.\nIf no console user exists but users are logged in, such as on terminal servers, then the first logged-in non-console user.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "LoadLoggedOnUserEnvironmentVariables"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Update-ADTEnvironmentPsProvider",
        "description": "Refreshes the current PowerShell session with all environment variable settings."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Update-ADTEnvironmentPsProvider",
      "https://psappdeploytoolkit.com/docs/reference/functions/Update-ADTEnvironmentPsProvider"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return any objects.",
    "common_parameters": true
  },
  "Invoke-ADTObjectMethod": {
    "name": "Invoke-ADTObjectMethod",
    "synopsis": "Invoke method on any object.",
    "description": "Invoke method on any object with or without using named parameters.",
    "parameters": {
      "InputObject": {
        "name": "InputObject",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies an object which has methods that can be invoked.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "MethodName": {
        "name": "MethodName",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies the name of a method to invoke.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ArgumentList": {
        "name": "ArgumentList",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Argument to pass to the method being executed.\nAllows execution of method without specifying named parameters.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Parameter": {
        "name": "Parameter",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Argument to pass to the method being executed.\nAllows execution of method by using named parameters.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Positional": {
        "name": "Positional",
        "required_parameters": [],
        "optional_parameters": [
          "InputObject",
          "MethodName",
          "ArgumentList"
        ],
        "description": ""
      },
      "Named": {
        "name": "Named",
        "required_parameters": [],
        "optional_parameters": [
          "InputObject",
          "MethodName",
          "Parameter"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "$ShellApp = New-Object -ComObject 'Shell.Application'\n$null = Invoke-ADTObjectMethod -InputObject $ShellApp -MethodName 'MinimizeAll'",
        "description": "Minimizes all windows."
      },
      {
        "title": "Example 2",
        "code": "$ShellApp = New-Object -ComObject 'Shell.Application'\n$null = Invoke-ADTObjectMethod -InputObject $ShellApp -MethodName 'Explore' -Parameter @{'vDir'='C:\\Windows'}",
        "description": "Opens the C:\\Windows folder in a Windows Explorer window."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Invoke-ADTObjectMethod",
      "https://psappdeploytoolkit.com/docs/reference/functions/Invoke-ADTObjectMethod"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.Object\n\n### The object returned by the method being invoked.",
    "common_parameters": true
  },
  "Reset-ADTDeferHistory": {
    "name": "Reset-ADTDeferHistory",
    "synopsis": "Reset the history of deferrals in the registry for the current application.",
    "description": "Reset the history of deferrals in the registry for the current application.",
    "parameters": {},
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [],
        "description": ""
      }
    },
    "examples": [],
    "notes": "An active ADT session is required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Reset-ADTDeferHistory",
      "https://psappdeploytoolkit.com/docs/reference/functions/Reset-ADTDeferHistory"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return any objects.",
    "common_parameters": true
  },
  "Get-ADTFileVersion": {
    "name": "Get-ADTFileVersion",
    "synopsis": "Gets the version of the specified file.",
    "description": "The Get-ADTFileVersion function retrieves the version information of the specified file.\nBy default, it returns the FileVersion, but it can also return the ProductVersion if the -ProductVersion switch is specified.",
    "parameters": {
      "File": {
        "name": "File",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "The path of the file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ProductVersion": {
        "name": "ProductVersion",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Switch that makes the command return ProductVersion instead of FileVersion.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "File",
          "ProductVersion"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Get-ADTFileVersion -File \"$env:ProgramFilesX86\\Adobe\\Reader 11.0\\Reader\\AcroRd32.exe\"",
        "description": "This example retrieves the FileVersion of the specified Adobe Reader executable."
      },
      {
        "title": "Example 2",
        "code": "Get-ADTFileVersion -File \"$env:ProgramFilesX86\\Adobe\\Reader 11.0\\Reader\\AcroRd32.exe\" -ProductVersion",
        "description": "This example retrieves the ProductVersion of the specified Adobe Reader executable."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTFileVersion",
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTFileVersion"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.String\n\n### Returns the version of the specified file.",
    "common_parameters": true
  },
  "Test-ADTSessionActive": {
    "name": "Test-ADTSessionActive",
    "synopsis": "Checks if there is an active ADT session.",
    "description": "This function checks if there is an active ADT (App Deploy Toolkit) session by retrieving the module data and returning the count of active sessions.",
    "parameters": {},
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Test-ADTSessionActive",
        "description": "Checks if there is an active ADT session and returns true or false."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Test-ADTSessionActive",
      "https://psappdeploytoolkit.com/docs/reference/functions/Test-ADTSessionActive"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.Boolean\n\n### Returns $true if there is at least one active session, otherwise $false.",
    "common_parameters": true
  },
  "Get-ADTSchedulerTask": {
    "name": "Get-ADTSchedulerTask",
    "synopsis": "Retrieve all details for scheduled tasks on the local computer.",
    "description": "Retrieve all details for scheduled tasks on the local computer using schtasks.exe.\nAll property names have spaces and colons removed.\n\nThis function is deprecated.\nPlease migrate your scripts to use the built-in Get-ScheduledTask Cmdlet.",
    "parameters": {
      "TaskName": {
        "name": "TaskName",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specify the name of the scheduled task to retrieve details for.\nUses regex match to find scheduled task.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "TaskName"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Get-ADTSchedulerTask",
        "description": "This example retrieves a list of all scheduled task properties."
      },
      {
        "title": "Example 2",
        "code": "Get-ADTSchedulerTask | Out-GridView",
        "description": "This example displays a grid view of all scheduled task properties."
      },
      {
        "title": "Example 3",
        "code": "Get-ADTSchedulerTask | Select-Object -Property TaskName",
        "description": "This example displays a list of all scheduled task names."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTSchedulerTask",
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTSchedulerTask"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.PSObject\n\n### This function returns a PSObject with all scheduled task properties.",
    "common_parameters": true
  },
  "Remove-ADTFile": {
    "name": "Remove-ADTFile",
    "synopsis": "Removes one or more items from a given path on the filesystem.",
    "description": "This function removes one or more items from a given path on the filesystem.\nIt can handle both wildcard paths and literal paths.\nIf the specified path does not exist, it logs a warning instead of throwing an error.\nThe function can also delete items recursively if the Recurse parameter is specified.",
    "parameters": {
      "Path": {
        "name": "Path",
        "type": "String[]",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies the path on the filesystem to be resolved.\nThe value of Path will accept wildcards.\nWill accept an array of values.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "LiteralPath": {
        "name": "LiteralPath",
        "type": "String[]",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies the path on the filesystem to be resolved.\nThe value of LiteralPath is used exactly as it is typed; no characters are interpreted as wildcards.\nWill accept an array of values.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Recurse": {
        "name": "Recurse",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Deletes the files in the specified location(s) and in all child items of the location(s).",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Path": {
        "name": "Path",
        "required_parameters": [],
        "optional_parameters": [
          "Path",
          "Recurse"
        ],
        "description": ""
      },
      "LiteralPath": {
        "name": "LiteralPath",
        "required_parameters": [],
        "optional_parameters": [
          "LiteralPath",
          "Recurse"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Remove-ADTFile -Path 'C:\\Windows\\Downloaded Program Files\\Temp.inf'",
        "description": "Removes the specified file."
      },
      {
        "title": "Example 2",
        "code": "Remove-ADTFile -LiteralPath 'C:\\Windows\\Downloaded Program Files' -Recurse",
        "description": "Removes the specified folder and all its contents recursively."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nThis function continues on received errors by default.\nTo have the function stop on an error, please provide `-ErrorAction Stop` on the end of your call.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Remove-ADTFile",
      "https://psappdeploytoolkit.com/docs/reference/functions/Remove-ADTFile"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not generate any output.",
    "common_parameters": true
  },
  "Get-ADTFreeDiskSpace": {
    "name": "Get-ADTFreeDiskSpace",
    "synopsis": "Retrieves the free disk space in MB on a particular drive (defaults to system drive).",
    "description": "The Get-ADTFreeDiskSpace function retrieves the free disk space in MB on a specified drive.\nIf no drive is specified, it defaults to the system drive.\nThis function is useful for monitoring disk space availability.",
    "parameters": {
      "Drive": {
        "name": "Drive",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "[System.IO.Path]::GetPathRoot([System.Environment]::SystemDirectory)",
        "valid_values": [],
        "description": "The drive to check free disk space on.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "Drive"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Get-ADTFreeDiskSpace -Drive 'C:'",
        "description": "This example retrieves the free disk space on the C: drive."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTFreeDiskSpace",
      "https://psappdeploytoolkit.com/docs/reference/functions/Get-ADTFreeDiskSpace"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.Double\n\n### Returns the free disk space in MB.",
    "common_parameters": true
  },
  "Set-ADTShortcut": {
    "name": "Set-ADTShortcut",
    "synopsis": "Modifies a .lnk or .url type shortcut.",
    "description": "Modifies a shortcut - .lnk or .url file, with configurable options.\nOnly specify the parameters that you want to change.",
    "parameters": {
      "Path": {
        "name": "Path",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Path to the shortcut to be changed.",
        "aliases": [],
        "pipeline_input": true,
        "wildcard_characters": false
      },
      "TargetPath": {
        "name": "TargetPath",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Sets target path or URL that the shortcut launches.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Arguments": {
        "name": "Arguments",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Sets the arguments used against the target path.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "IconLocation": {
        "name": "IconLocation",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Sets location of the icon used for the shortcut.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "IconIndex": {
        "name": "IconIndex",
        "type": "UInt32",
        "mandatory": false,
        "position": null,
        "default_value": "0",
        "valid_values": [],
        "description": "Sets the index of the icon.\nExecutables, DLLs, ICO files with multiple icons need the icon index to be specified.\nThis parameter is an Integer.\nThe first index is 0.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Description": {
        "name": "Description",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Sets the description of the shortcut as can be seen in the shortcut's properties.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "WorkingDirectory": {
        "name": "WorkingDirectory",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Sets working directory to be used for the target path.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "WindowStyle": {
        "name": "WindowStyle",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "DontChange",
        "valid_values": [],
        "description": "Sets the shortcut's window style to be minimised, maximised, etc.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "RunAsAdmin": {
        "name": "RunAsAdmin",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Sets the shortcut to require elevated permissions to run.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Hotkey": {
        "name": "Hotkey",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Sets the hotkey to launch the shortcut, e.g.\n\"CTRL+SHIFT+F\".",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "Description",
          "Path",
          "WindowStyle",
          "TargetPath",
          "WorkingDirectory",
          "Hotkey",
          "Arguments",
          "RunAsAdmin",
          "IconIndex",
          "IconLocation"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Set-ADTShortcut -Path \"$envCommonDesktop\\Application.lnk\" -TargetPath \"$envProgramFiles\\Application\\application.exe\"",
        "description": "Creates a shortcut on the All Users desktop named 'Application', targeted to '$envProgramFiles\\Application\\application.exe'."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Set-ADTShortcut",
      "https://psappdeploytoolkit.com/docs/reference/functions/Set-ADTShortcut"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not generate any output.",
    "common_parameters": true
  },
  "Open-ADTSession": {
    "name": "Open-ADTSession",
    "synopsis": "Opens a new ADT session.",
    "description": "This function initializes and opens a new ADT session with the specified parameters.\nIt handles the setup of the session environment and processes any callbacks defined for the session.\nIf the session fails to open, it handles the error and closes the session if necessary.",
    "parameters": {
      "SessionState": {
        "name": "SessionState",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Caller's SessionState.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "DeploymentType": {
        "name": "DeploymentType",
        "type": "DeploymentType",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [
          "Install",
          "Uninstall",
          "Repair"
        ],
        "description": "Specifies the type of deployment: Install, Uninstall, or Repair.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "DeployMode": {
        "name": "DeployMode",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [
          "Interactive",
          "NonInteractive",
          "Silent"
        ],
        "description": "Specifies the deployment mode: Interactive, NonInteractive, or Silent.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "AllowRebootPassThru": {
        "name": "AllowRebootPassThru",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Allows reboot pass-through.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "TerminalServerMode": {
        "name": "TerminalServerMode",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Enables Terminal Server mode.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "DisableLogging": {
        "name": "DisableLogging",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Disables logging for the session.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "AppVendor": {
        "name": "AppVendor",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies the application vendor.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "AppName": {
        "name": "AppName",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies the application name.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "AppVersion": {
        "name": "AppVersion",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies the application version.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "AppArch": {
        "name": "AppArch",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies the application architecture.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "AppLang": {
        "name": "AppLang",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies the application language.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "AppRevision": {
        "name": "AppRevision",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies the application revision.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "AppScriptVersion": {
        "name": "AppScriptVersion",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies the application script version.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "AppScriptDate": {
        "name": "AppScriptDate",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies the application script date.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "AppScriptAuthor": {
        "name": "AppScriptAuthor",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies the application script author.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "InstallName": {
        "name": "InstallName",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies the install name.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "InstallTitle": {
        "name": "InstallTitle",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies the install title.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "DeployAppScriptFriendlyName": {
        "name": "DeployAppScriptFriendlyName",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies the friendly name of the deploy application script.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "DeployAppScriptVersion": {
        "name": "DeployAppScriptVersion",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies the version of the deploy application script.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "DeployAppScriptDate": {
        "name": "DeployAppScriptDate",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies the date of the deploy application script.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "DeployAppScriptParameters": {
        "name": "DeployAppScriptParameters",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies the parameters for the deploy application script.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "AppSuccessExitCodes": {
        "name": "AppSuccessExitCodes",
        "type": "Int32[]",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies the application exit codes.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "AppRebootExitCodes": {
        "name": "AppRebootExitCodes",
        "type": "Int32[]",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies the application reboot codes.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ScriptDirectory": {
        "name": "ScriptDirectory",
        "type": "String[]",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies the base path for Files and SupportFiles.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "DirFiles": {
        "name": "DirFiles",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies the override path to Files.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "DirSupportFiles": {
        "name": "DirSupportFiles",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies the override path to SupportFiles.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "DefaultMsiFile": {
        "name": "DefaultMsiFile",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies the default MSI file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "DefaultMstFile": {
        "name": "DefaultMstFile",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies the default MST file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "DefaultMspFiles": {
        "name": "DefaultMspFiles",
        "type": "String[]",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies the default MSP files.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "DisableDefaultMsiProcessList": {
        "name": "DisableDefaultMsiProcessList",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specifies that the zero-config MSI code should not gather process names from the MSI file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "LogName": {
        "name": "LogName",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies an override for the default-generated log file name.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "SessionClass": {
        "name": "SessionClass",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "PSADT.Module.DeploymentSession",
        "valid_values": [],
        "description": "Specifies an override for PSADT.Module.DeploymentSession class.\nUse this if you're deriving a class inheriting off PSAppDeployToolkit's base.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ForceWimDetection": {
        "name": "ForceWimDetection",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specifies that WIM files should be detected and mounted during session initialization, irrespective of whether any App values are provided.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "PassThru": {
        "name": "PassThru",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Passes the session object through the pipeline.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "UnboundArguments": {
        "name": "UnboundArguments",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Captures any additional arguments passed to the function.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "AppScriptVersion",
          "SessionState",
          "AppVersion",
          "DeploymentType",
          "AllowRebootPassThru",
          "SessionClass",
          "AppSuccessExitCodes",
          "DeployAppScriptVersion",
          "DirSupportFiles",
          "DisableDefaultMsiProcessList",
          "DefaultMstFile",
          "DeployMode",
          "AppRebootExitCodes",
          "AppArch",
          "DeployAppScriptDate",
          "ScriptDirectory",
          "DeployAppScriptParameters",
          "AppName",
          "InstallName",
          "DisableLogging",
          "AppScriptAuthor",
          "AppScriptDate",
          "InstallTitle",
          "DefaultMsiFile",
          "AppVendor",
          "AppLang",
          "DirFiles",
          "ForceWimDetection",
          "UnboundArguments",
          "AppRevision",
          "PassThru",
          "DefaultMspFiles",
          "DeployAppScriptFriendlyName",
          "TerminalServerMode",
          "LogName"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Open-ADTSession -SessionState $ExecutionContext.SessionState -DeploymentType \"Install\" -DeployMode \"Interactive\"",
        "description": "Opens a new ADT session with the specified parameters."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Open-ADTSession",
      "https://psappdeploytoolkit.com/docs/reference/functions/Open-ADTSession"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### ADTSession\n\n### This function returns the session object if -PassThru is specified.",
    "common_parameters": true
  },
  "Test-ADTModuleInitialized": {
    "name": "Test-ADTModuleInitialized",
    "synopsis": "Checks if the ADT (PSAppDeployToolkit) module is initialized.",
    "description": "This function checks if the ADT (PSAppDeployToolkit) module is initialized by retrieving the module data and returning the initialization status.",
    "parameters": {},
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Test-ADTModuleInitialized",
        "description": "Checks if the ADT module is initialized and returns true or false."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Test-ADTModuleInitialized",
      "https://psappdeploytoolkit.com/docs/reference/functions/Test-ADTModuleInitialized"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.Boolean\n\n### Returns $true if the ADT module is initialized, otherwise $false.",
    "common_parameters": true
  },
  "Set-ADTIniValue": {
    "name": "Set-ADTIniValue",
    "synopsis": "Opens an INI file and sets the value of the specified section and key.",
    "description": "Opens an INI file and sets the value of the specified section and key.\nIf the value is set to $null, the key will be removed from the section.",
    "parameters": {
      "FilePath": {
        "name": "FilePath",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Path to the INI file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Section": {
        "name": "Section",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Section within the INI file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Key": {
        "name": "Key",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Key within the section of the INI file.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Value": {
        "name": "Value",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Value for the key within the section of the INI file.\nTo remove a value, set this variable to $null.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "FilePath",
          "Section",
          "Value",
          "Key"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Set-ADTIniValue -FilePath \"$env:ProgramFilesX86\\IBM\\Notes\\notes.ini\" -Section 'Notes' -Key 'KeyFileName' -Value 'MyFile.ID'",
        "description": "Sets the 'KeyFileName' key in the 'Notes' section of the 'notes.ini' file to 'MyFile.ID'."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Set-ADTIniValue",
      "https://psappdeploytoolkit.com/docs/reference/functions/Set-ADTIniValue"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return any output.",
    "common_parameters": true
  },
  "Set-ADTActiveSetup": {
    "name": "Set-ADTActiveSetup",
    "synopsis": "Creates an Active Setup entry in the registry to execute a file for each user upon login.",
    "description": "Active Setup allows handling of per-user changes registry/file changes upon login.\n\nA registry key is created in the HKLM registry hive which gets replicated to the HKCU hive when a user logs in.\n\nIf the \"Version\" value of the Active Setup entry in HKLM is higher than the version value in HKCU, the file referenced in \"StubPath\" is executed.\n\nThis Function:\n\n- Creates the registry entries in \"HKLM:\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\$($adtSession.InstallName)\".\n- Creates StubPath value depending on the file extension of the $StubExePath parameter.\n- Handles Version value with YYYYMMDDHHMMSS granularity to permit re-installs on the same day and still trigger Active Setup after Version increase.\n- Copies/overwrites the StubPath file to $StubExePath destination path if file exists in 'Files' subdirectory of script directory.\n- Executes the StubPath file for the current user based on $NoExecuteForCurrentUser (no need to logout/login to trigger Active Setup).",
    "parameters": {
      "StubExePath": {
        "name": "StubExePath",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Use this parameter to specify the destination path of the file that will be executed upon user login.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Arguments": {
        "name": "Arguments",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Arguments to pass to the file being executed.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Wow6432Node": {
        "name": "Wow6432Node",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specify this switch to use Active Setup entry under Wow6432Node on a 64-bit OS.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "ExecutionPolicy": {
        "name": "ExecutionPolicy",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "(Get-ExecutionPolicy)",
        "valid_values": [
          "Unrestricted",
          "RemoteSigned",
          "AllSigned",
          "Restricted",
          "Default",
          "Bypass",
          "Undefined"
        ],
        "description": "Specifies the ExecutionPolicy to set when StubExePath is a PowerShell script..",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Version": {
        "name": "Version",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "[System.DateTime]::Now.ToString('yyMM,ddHH,mmss')",
        "valid_values": [],
        "description": "Optional.\nSpecify version for Active setup entry.\nActive Setup is not triggered if Version value has more than 8 consecutive digits.\nUse commas to get around this limitation.\nDefault: YYYYMMDDHHMMSS",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Locale": {
        "name": "Locale",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Optional.\nArbitrary string used to specify the installation language of the file being executed.\nNot replicated to HKCU.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "DisableActiveSetup": {
        "name": "DisableActiveSetup",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Disables the Active Setup entry so that the StubPath file will not be executed.\nThis also enables -NoExecuteForCurrentUser.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "PurgeActiveSetupKey": {
        "name": "PurgeActiveSetupKey",
        "type": "SwitchParameter",
        "mandatory": true,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Remove Active Setup entry from HKLM registry hive.\nWill also load each logon user's HKCU registry hive to remove Active Setup entry.\nFunction returns after purging.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "NoExecuteForCurrentUser": {
        "name": "NoExecuteForCurrentUser",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specifies whether the StubExePath should be executed for the current user.\nSince this user is already logged in, the user won't have the application started without logging out and logging back in.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Description": {
        "name": "Description",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Description for the Active Setup.\nUsers will see \"Setting up personalized settings for: $Description\" at logon.\nDefaults to active session InstallName.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Key": {
        "name": "Key",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Name of the registry key for the Active Setup entry.\nDefaults to active session InstallName.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Create": {
        "name": "Create",
        "required_parameters": [
          "Key"
        ],
        "optional_parameters": [
          "Description",
          "Version",
          "NoExecuteForCurrentUser",
          "Wow6432Node",
          "Arguments",
          "ExecutionPolicy",
          "Locale",
          "DisableActiveSetup",
          "StubExePath"
        ],
        "description": ""
      },
      "Purge": {
        "name": "Purge",
        "required_parameters": [],
        "optional_parameters": [
          "PurgeActiveSetupKey",
          "Wow6432Node",
          "Key"
        ],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Set-ADTActiveSetup -StubExePath 'C:\\Users\\Public\\Company\\ProgramUserConfig.vbs' -Arguments '/Silent' -Description 'Program User Config' -Key 'ProgramUserConfig' -Locale 'en'",
        "description": "### EXAMPLE 2\n\n```powershell\nSet-ADTActiveSetup -StubExePath \"$envWinDir\\regedit.exe\" -Arguments \"/S `\"%SystemDrive%\\Program Files (x86)\\PS App Deploy\\PSAppDeployHKCUSettings.reg`\"\" -Description 'PS App Deploy Config' -Key 'PS_App_Deploy_Config'\n```"
      },
      {
        "title": "Example 3",
        "code": "Set-ADTActiveSetup -Key 'ProgramUserConfig' -PurgeActiveSetupKey",
        "description": "Delete \"ProgramUserConfig\" active setup entry from all registry hives."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nOriginal code borrowed from: Denis St-Pierre (Ottawa, Canada), Todd MacNaught (Ottawa, Canada)\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Set-ADTActiveSetup",
      "https://psappdeploytoolkit.com/docs/reference/functions/Set-ADTActiveSetup"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.Boolean\n\n### Returns $true if Active Setup entry was created or updated, $false if Active Setup entry was not created or updated.",
    "common_parameters": true
  },
  "Test-ADTUserIsBusy": {
    "name": "Test-ADTUserIsBusy",
    "synopsis": "Tests whether the device's microphone is in use, the user has manually turned on presentation mode, or PowerPoint is running in either fullscreen slideshow mode or presentation mode.",
    "description": "Tests whether the device's microphone is in use, the user has manually turned on presentation mode, or PowerPoint is running in either fullscreen slideshow mode or presentation mode.",
    "parameters": {},
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Test-ADTUserIsBusy",
        "description": "Tests whether the device's microphone is in use, the user has manually turned on presentation mode, or PowerPoint is running in either fullscreen slideshow mode or presentation mode, and returns true or false."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Test-ADTUserIsBusy",
      "https://psappdeploytoolkit.com/docs/reference/functions/Test-ADTUserIsBusy"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.Boolean\n\n### Returns $true if the device's microphone is in use, the user has manually turned on presentation mode, or PowerPoint is running in either fullscreen slideshow mode or presentation mode, otherwise $false.",
    "common_parameters": true
  },
  "Show-ADTDialogBox": {
    "name": "Show-ADTDialogBox",
    "synopsis": "Display a custom dialog box with optional title, buttons, icon, and timeout.",
    "description": "Display a custom dialog box with optional title, buttons, icon, and timeout.\nThe default button is \"OK\", the default Icon is \"None\", and the default Timeout is None.\n\nShow-ADTInstallationPrompt is recommended over this function as it provides more customization and uses consistent branding with the other UI components.",
    "parameters": {
      "Text": {
        "name": "Text",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Text in the message dialog box.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Buttons": {
        "name": "Buttons",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "OK",
        "valid_values": [],
        "description": "The button(s) to display on the dialog box.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "DefaultButton": {
        "name": "DefaultButton",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": "First",
        "valid_values": [],
        "description": "The Default button that is selected.\nOptions: First, Second, Third.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Icon": {
        "name": "Icon",
        "type": "String",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Icon to display on the dialog box.\nOptions: None, Stop, Question, Exclamation, Information.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "NotTopMost": {
        "name": "NotTopMost",
        "type": "SwitchParameter",
        "mandatory": false,
        "position": null,
        "default_value": "False",
        "valid_values": [],
        "description": "Specifies whether the message box shouldn't be a system modal message box that appears in a topmost window.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Timeout": {
        "name": "Timeout",
        "type": "UInt32",
        "mandatory": false,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Specifies how long, in seconds, to show the message prompt before aborting.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      },
      "Title": {
        "name": "Title",
        "type": "String",
        "mandatory": true,
        "position": null,
        "default_value": null,
        "valid_values": [],
        "description": "Title of the message dialog box.",
        "aliases": [],
        "pipeline_input": false,
        "wildcard_characters": false
      }
    },
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [
          "Icon",
          "Text",
          "Buttons",
          "Timeout",
          "NotTopMost",
          "Title",
          "DefaultButton"
        ],
        "description": ""
      }
    },
    "examples": [],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Show-ADTDialogBox",
      "https://psappdeploytoolkit.com/docs/reference/functions/Show-ADTDialogBox"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### System.String\n\n### Returns the text of the button that was clicked.",
    "common_parameters": true
  },
  "Update-ADTGroupPolicy": {
    "name": "Update-ADTGroupPolicy",
    "synopsis": "Performs a gpupdate command to refresh Group Policies on the local machine.",
    "description": "This function performs a gpupdate command to refresh Group Policies on the local machine.\nIt updates both Computer and User policies by forcing a refresh using the gpupdate.exe utility.",
    "parameters": {},
    "parameter_sets": {
      "Default": {
        "name": "Default",
        "required_parameters": [],
        "optional_parameters": [],
        "description": ""
      }
    },
    "examples": [
      {
        "title": "Example 1",
        "code": "Update-ADTGroupPolicy",
        "description": "Performs a gpupdate command to refresh Group Policies on the local machine."
      }
    ],
    "notes": "An active ADT session is NOT required to use this function.\n\nTags: psadt<br />\nWebsite: https://psappdeploytoolkit.com<br />\nCopyright: (C) 2025 PSAppDeployToolkit Team (Sean Lillis, Dan Cunningham, Muhammad Mashwani, Mitch Richters, Dan Gough).<br />\nLicense: https://opensource.org/license/lgpl-3-0",
    "related_links": [
      "https://psappdeploytoolkit.com/docs/reference/functions/Update-ADTGroupPolicy",
      "https://psappdeploytoolkit.com/docs/reference/functions/Update-ADTGroupPolicy"
    ],
    "inputs": "### None\n\n### You cannot pipe objects to this function.",
    "outputs": "### None\n\n### This function does not return any objects.",
    "common_parameters": true
  }
}
